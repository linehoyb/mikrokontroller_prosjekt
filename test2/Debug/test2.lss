
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000078c  00000820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000078c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010e  0080010e  0000082e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000082e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000860  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f8f  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000086a  00000000  00000000  000018b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e7  00000000  00000000  00002121  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  00002708  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ed  00000000  00000000  00002818  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006ce  00000000  00000000  00002d05  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000033d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e8       	ldi	r30, 0x8C	; 140
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 31       	cpi	r26, 0x11	; 17
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6f 01 	call	0x2de	; 0x2de <main>
  9e:	0c 94 c4 03 	jmp	0x788	; 0x788 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
	if (row == 0 && pos<16)
	LCD_Action((pos & 0x0F)|0x80);
	else if (row == 1 && pos<16)
	LCD_Action((pos & 0x0F)|0xC0);
	LCD_Print(str);
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 68       	ori	r24, 0x87	; 135
  b8:	80 83       	st	Z, r24
  ba:	08 95       	ret

000000bc <timer_init>:
  bc:	88 e0       	ldi	r24, 0x08	; 8
  be:	9d e3       	ldi	r25, 0x3D	; 61
  c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
  d2:	af e6       	ldi	r26, 0x6F	; 111
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	8c 91       	ld	r24, X
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	8c 93       	st	X, r24
  dc:	80 81       	ld	r24, Z
  de:	85 60       	ori	r24, 0x05	; 5
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret

000000e4 <button_init>:
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	88 61       	ori	r24, 0x18	; 24
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	eb e6       	ldi	r30, 0x6B	; 107
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 61       	ori	r24, 0x10	; 16
  f2:	80 83       	st	Z, r24
  f4:	e8 e6       	ldi	r30, 0x68	; 104
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	81 60       	ori	r24, 0x01	; 1
  fc:	80 83       	st	Z, r24
  fe:	e9 e6       	ldi	r30, 0x69	; 105
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <LCD_Action>:
 10a:	9b b1       	in	r25, 0x0b	; 11
 10c:	9f 70       	andi	r25, 0x0F	; 15
 10e:	28 2f       	mov	r18, r24
 110:	20 7f       	andi	r18, 0xF0	; 240
 112:	92 2b       	or	r25, r18
 114:	9b b9       	out	0x0b, r25	; 11
 116:	9b b1       	in	r25, 0x0b	; 11
 118:	9e 7f       	andi	r25, 0xFE	; 254
 11a:	9b b9       	out	0x0b, r25	; 11
 11c:	9b b1       	in	r25, 0x0b	; 11
 11e:	92 60       	ori	r25, 0x02	; 2
 120:	9b b9       	out	0x0b, r25	; 11
 122:	35 e0       	ldi	r19, 0x05	; 5
 124:	3a 95       	dec	r19
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_Action+0x1a>
 128:	00 00       	nop
 12a:	9b b1       	in	r25, 0x0b	; 11
 12c:	9d 7f       	andi	r25, 0xFD	; 253
 12e:	9b b9       	out	0x0b, r25	; 11
 130:	ef e1       	ldi	r30, 0x1F	; 31
 132:	f3 e0       	ldi	r31, 0x03	; 3
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <LCD_Action+0x2a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Action+0x30>
 13a:	00 00       	nop
 13c:	2b b1       	in	r18, 0x0b	; 11
 13e:	f0 e1       	ldi	r31, 0x10	; 16
 140:	8f 9f       	mul	r24, r31
 142:	c0 01       	movw	r24, r0
 144:	11 24       	eor	r1, r1
 146:	92 2f       	mov	r25, r18
 148:	9f 70       	andi	r25, 0x0F	; 15
 14a:	89 2b       	or	r24, r25
 14c:	8b b9       	out	0x0b, r24	; 11
 14e:	8b b1       	in	r24, 0x0b	; 11
 150:	82 60       	ori	r24, 0x02	; 2
 152:	8b b9       	out	0x0b, r24	; 11
 154:	35 e0       	ldi	r19, 0x05	; 5
 156:	3a 95       	dec	r19
 158:	f1 f7       	brne	.-4      	; 0x156 <LCD_Action+0x4c>
 15a:	00 00       	nop
 15c:	8b b1       	in	r24, 0x0b	; 11
 15e:	8d 7f       	andi	r24, 0xFD	; 253
 160:	8b b9       	out	0x0b, r24	; 11
 162:	8f e3       	ldi	r24, 0x3F	; 63
 164:	9f e1       	ldi	r25, 0x1F	; 31
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <LCD_Action+0x5c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <LCD_Action+0x62>
 16c:	00 00       	nop
 16e:	08 95       	ret

00000170 <LCD_Init>:
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	8a b9       	out	0x0a, r24	; 10
 174:	8f e5       	ldi	r24, 0x5F	; 95
 176:	9a ee       	ldi	r25, 0xEA	; 234
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCD_Init+0x8>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_Init+0xe>
 17e:	00 00       	nop
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 188:	88 e2       	ldi	r24, 0x28	; 40
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 190:	8c e0       	ldi	r24, 0x0C	; 12
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 198:	86 e0       	ldi	r24, 0x06	; 6
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1a8:	8f e3       	ldi	r24, 0x3F	; 63
 1aa:	9f e1       	ldi	r25, 0x1F	; 31
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCD_Init+0x3c>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <LCD_Init+0x42>
 1b2:	00 00       	nop
 1b4:	08 95       	ret

000001b6 <LCD_Clear>:
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1bc:	8f e3       	ldi	r24, 0x3F	; 63
 1be:	9f e1       	ldi	r25, 0x1F	; 31
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <LCD_Clear+0xa>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <LCD_Clear+0x10>
 1c6:	00 00       	nop
 1c8:	80 e8       	ldi	r24, 0x80	; 128
 1ca:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1ce:	08 95       	ret

000001d0 <LCD_Print>:
 1d0:	fc 01       	movw	r30, r24
 1d2:	60 e0       	ldi	r22, 0x00	; 0
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	34 c0       	rjmp	.+104    	; 0x240 <LCD_Print+0x70>
 1d8:	8b b1       	in	r24, 0x0b	; 11
 1da:	8f 70       	andi	r24, 0x0F	; 15
 1dc:	90 7f       	andi	r25, 0xF0	; 240
 1de:	98 2b       	or	r25, r24
 1e0:	9b b9       	out	0x0b, r25	; 11
 1e2:	8b b1       	in	r24, 0x0b	; 11
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	8b b9       	out	0x0b, r24	; 11
 1e8:	8b b1       	in	r24, 0x0b	; 11
 1ea:	82 60       	ori	r24, 0x02	; 2
 1ec:	8b b9       	out	0x0b, r24	; 11
 1ee:	85 e0       	ldi	r24, 0x05	; 5
 1f0:	8a 95       	dec	r24
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <LCD_Print+0x20>
 1f4:	00 00       	nop
 1f6:	8b b1       	in	r24, 0x0b	; 11
 1f8:	8d 7f       	andi	r24, 0xFD	; 253
 1fa:	8b b9       	out	0x0b, r24	; 11
 1fc:	8f e1       	ldi	r24, 0x1F	; 31
 1fe:	93 e0       	ldi	r25, 0x03	; 3
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <LCD_Print+0x30>
 204:	00 c0       	rjmp	.+0      	; 0x206 <LCD_Print+0x36>
 206:	00 00       	nop
 208:	4b b1       	in	r20, 0x0b	; 11
 20a:	9c 91       	ld	r25, X
 20c:	80 e1       	ldi	r24, 0x10	; 16
 20e:	98 9f       	mul	r25, r24
 210:	90 01       	movw	r18, r0
 212:	11 24       	eor	r1, r1
 214:	94 2f       	mov	r25, r20
 216:	9f 70       	andi	r25, 0x0F	; 15
 218:	29 2b       	or	r18, r25
 21a:	2b b9       	out	0x0b, r18	; 11
 21c:	9b b1       	in	r25, 0x0b	; 11
 21e:	92 60       	ori	r25, 0x02	; 2
 220:	9b b9       	out	0x0b, r25	; 11
 222:	95 e0       	ldi	r25, 0x05	; 5
 224:	9a 95       	dec	r25
 226:	f1 f7       	brne	.-4      	; 0x224 <LCD_Print+0x54>
 228:	00 00       	nop
 22a:	9b b1       	in	r25, 0x0b	; 11
 22c:	9d 7f       	andi	r25, 0xFD	; 253
 22e:	9b b9       	out	0x0b, r25	; 11
 230:	8f e3       	ldi	r24, 0x3F	; 63
 232:	9f e1       	ldi	r25, 0x1F	; 31
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <LCD_Print+0x64>
 238:	00 c0       	rjmp	.+0      	; 0x23a <LCD_Print+0x6a>
 23a:	00 00       	nop
 23c:	6f 5f       	subi	r22, 0xFF	; 255
 23e:	7f 4f       	sbci	r23, 0xFF	; 255
 240:	df 01       	movw	r26, r30
 242:	a6 0f       	add	r26, r22
 244:	b7 1f       	adc	r27, r23
 246:	9c 91       	ld	r25, X
 248:	91 11       	cpse	r25, r1
 24a:	c6 cf       	rjmp	.-116    	; 0x1d8 <LCD_Print+0x8>
 24c:	08 95       	ret

0000024e <read_ADC>:

uint16_t read_ADC(uint8_t ADCchannel)
{
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); //select ADC channel with safety mask
 24e:	ec e7       	ldi	r30, 0x7C	; 124
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	90 81       	ld	r25, Z
 254:	90 7f       	andi	r25, 0xF0	; 240
 256:	8f 70       	andi	r24, 0x0F	; 15
 258:	89 2b       	or	r24, r25
 25a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC); //single conversion mode
 25c:	ea e7       	ldi	r30, 0x7A	; 122
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 64       	ori	r24, 0x40	; 64
 264:	80 83       	st	Z, r24

	while( ADCSRA & (1<<ADSC) ); // wait until ADC conversion is complete
 266:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 26a:	86 fd       	sbrc	r24, 6
 26c:	fc cf       	rjmp	.-8      	; 0x266 <read_ADC+0x18>
	return ADC;
 26e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 272:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 276:	08 95       	ret

00000278 <ADC_to_seconds>:

uint8_t ADC_to_seconds(uint16_t adc_number)
{
	/*Returns the timer value in seconds*/
	const float MAX_SECONDS = 180;
	float decimal_result = ((float)adc_number/1023)*MAX_SECONDS;
 278:	bc 01       	movw	r22, r24
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 89 02 	call	0x512	; 0x512 <__floatunsisf>
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 ec       	ldi	r19, 0xC0	; 192
 286:	4f e7       	ldi	r20, 0x7F	; 127
 288:	54 e4       	ldi	r21, 0x44	; 68
 28a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__divsf3>
 28e:	20 e0       	ldi	r18, 0x00	; 0
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	44 e3       	ldi	r20, 0x34	; 52
 294:	53 e4       	ldi	r21, 0x43	; 67
 296:	0e 94 17 03 	call	0x62e	; 0x62e <__mulsf3>
	return (uint8_t)decimal_result;
 29a:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fixunssfsi>
 29e:	86 2f       	mov	r24, r22
}
 2a0:	08 95       	ret

000002a2 <yellow_LED_on>:
// 	return 0;
// }


void yellow_LED_on(){
	R_Y_LED_PORT |= (1<<YELLOW_LED);
 2a2:	8b b1       	in	r24, 0x0b	; 11
 2a4:	88 60       	ori	r24, 0x08	; 8
 2a6:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<RED_LED);
 2a8:	8b b1       	in	r24, 0x0b	; 11
 2aa:	8b 7f       	andi	r24, 0xFB	; 251
 2ac:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 2ae:	85 b1       	in	r24, 0x05	; 5
 2b0:	8e 7f       	andi	r24, 0xFE	; 254
 2b2:	85 b9       	out	0x05, r24	; 5
 2b4:	08 95       	ret

000002b6 <green_LED_on>:
}

void green_LED_on(){
	G_LED_PORT |= (1<<GREEN_LED);
 2b6:	85 b1       	in	r24, 0x05	; 5
 2b8:	81 60       	ori	r24, 0x01	; 1
 2ba:	85 b9       	out	0x05, r24	; 5
	R_Y_LED_PORT &= ~(1<<RED_LED);
 2bc:	8b b1       	in	r24, 0x0b	; 11
 2be:	8b 7f       	andi	r24, 0xFB	; 251
 2c0:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 2c2:	8b b1       	in	r24, 0x0b	; 11
 2c4:	87 7f       	andi	r24, 0xF7	; 247
 2c6:	8b b9       	out	0x0b, r24	; 11
 2c8:	08 95       	ret

000002ca <red_LED_on>:
}

void red_LED_on(){
	R_Y_LED_PORT |= (1<<RED_LED);
 2ca:	8b b1       	in	r24, 0x0b	; 11
 2cc:	84 60       	ori	r24, 0x04	; 4
 2ce:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 2d0:	8b b1       	in	r24, 0x0b	; 11
 2d2:	87 7f       	andi	r24, 0xF7	; 247
 2d4:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 2d6:	85 b1       	in	r24, 0x05	; 5
 2d8:	8e 7f       	andi	r24, 0xFE	; 254
 2da:	85 b9       	out	0x05, r24	; 5
 2dc:	08 95       	ret

000002de <main>:
}



int main()
{	
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	cd b7       	in	r28, 0x3d	; 61
 2e4:	de b7       	in	r29, 0x3e	; 62
 2e6:	2a 97       	sbiw	r28, 0x0a	; 10
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	f8 94       	cli
 2ec:	de bf       	out	0x3e, r29	; 62
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	cd bf       	out	0x3d, r28	; 61
	ADC_init();
 2f2:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	timer_init();
 2f6:	0e 94 5e 00 	call	0xbc	; 0xbc <timer_init>
	button_init();
 2fa:	0e 94 72 00 	call	0xe4	; 0xe4 <button_init>
	LCD_Init(); //Activate LCD
 2fe:	0e 94 b8 00 	call	0x170	; 0x170 <LCD_Init>
	
	LCD_Print("Arduino works");	//Begin writing at Line 1, Position 1
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30a:	2f ef       	ldi	r18, 0xFF	; 255
 30c:	87 ea       	ldi	r24, 0xA7	; 167
 30e:	91 e6       	ldi	r25, 0x61	; 97
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0x32>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0x3c>
 31a:	00 00       	nop
	_delay_ms(2000);
	green_LED_on();
 31c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <green_LED_on>
 320:	2f ef       	ldi	r18, 0xFF	; 255
 322:	83 ed       	ldi	r24, 0xD3	; 211
 324:	90 e3       	ldi	r25, 0x30	; 48
 326:	21 50       	subi	r18, 0x01	; 1
 328:	80 40       	sbci	r24, 0x00	; 0
 32a:	90 40       	sbci	r25, 0x00	; 0
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0x48>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0x52>
 330:	00 00       	nop
	_delay_ms(1000);
	yellow_LED_on();
 332:	0e 94 51 01 	call	0x2a2	; 0x2a2 <yellow_LED_on>
 336:	2f ef       	ldi	r18, 0xFF	; 255
 338:	83 ed       	ldi	r24, 0xD3	; 211
 33a:	90 e3       	ldi	r25, 0x30	; 48
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	90 40       	sbci	r25, 0x00	; 0
 342:	e1 f7       	brne	.-8      	; 0x33c <main+0x5e>
 344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x68>
 346:	00 00       	nop
	_delay_ms(1000);
	red_LED_on();
 348:	0e 94 65 01 	call	0x2ca	; 0x2ca <red_LED_on>
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	83 ed       	ldi	r24, 0xD3	; 211
 350:	90 e3       	ldi	r25, 0x30	; 48
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x74>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x7e>
 35c:	00 00       	nop
	_delay_ms(1000);
	LCD_Clear();
 35e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
 362:	2d c0       	rjmp	.+90     	; 0x3be <main+0xe0>
		
		while (timer_running == 0 && start_pressed == 0)
		{
			
//			cli(); // Disable interrupts
			volatile uint16_t pot_value = read_ADC(POT_PIN);
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 27 01 	call	0x24e	; 0x24e <read_ADC>
 36a:	9a 87       	std	Y+10, r25	; 0x0a
 36c:	89 87       	std	Y+9, r24	; 0x09
			seconds = ADC_to_seconds(pot_value);
 36e:	89 85       	ldd	r24, Y+9	; 0x09
 370:	9a 85       	ldd	r25, Y+10	; 0x0a
 372:	0e 94 3c 01 	call	0x278	; 0x278 <ADC_to_seconds>
 376:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
 37a:	2f ef       	ldi	r18, 0xFF	; 255
 37c:	89 e6       	ldi	r24, 0x69	; 105
 37e:	98 e1       	ldi	r25, 0x18	; 24
 380:	21 50       	subi	r18, 0x01	; 1
 382:	80 40       	sbci	r24, 0x00	; 0
 384:	90 40       	sbci	r25, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0xa2>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0xac>
 38a:	00 00       	nop
			
			_delay_ms(500);
			
			char sec [8];
			itoa(seconds, sec, 10);
 38c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 390:	4a e0       	ldi	r20, 0x0A	; 10
 392:	50 e0       	ldi	r21, 0x00	; 0
 394:	be 01       	movw	r22, r28
 396:	6f 5f       	subi	r22, 0xFF	; 255
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 84 03 	call	0x708	; 0x708 <itoa>
			LCD_Print(sec);
 3a0:	ce 01       	movw	r24, r28
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
 3a8:	2f ef       	ldi	r18, 0xFF	; 255
 3aa:	89 e6       	ldi	r24, 0x69	; 105
 3ac:	98 e1       	ldi	r25, 0x18	; 24
 3ae:	21 50       	subi	r18, 0x01	; 1
 3b0:	80 40       	sbci	r24, 0x00	; 0
 3b2:	90 40       	sbci	r25, 0x00	; 0
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <main+0xd0>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <main+0xda>
 3b8:	00 00       	nop
			_delay_ms(500);
			LCD_Clear();
 3ba:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
	_delay_ms(1000);
	LCD_Clear();

	while(1) {
		
		while (timer_running == 0 && start_pressed == 0)
 3be:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <timer_running>
 3c2:	81 11       	cpse	r24, r1
 3c4:	fc cf       	rjmp	.-8      	; 0x3be <main+0xe0>
 3c6:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <start_pressed>
 3ca:	81 11       	cpse	r24, r1
 3cc:	f8 cf       	rjmp	.-16     	; 0x3be <main+0xe0>
 3ce:	ca cf       	rjmp	.-108    	; 0x364 <main+0x86>

000003d0 <__divsf3>:
 3d0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divsf3x>
 3d4:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__fp_round>
 3d8:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_pscB>
 3dc:	58 f0       	brcs	.+22     	; 0x3f4 <__divsf3+0x24>
 3de:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_pscA>
 3e2:	40 f0       	brcs	.+16     	; 0x3f4 <__divsf3+0x24>
 3e4:	29 f4       	brne	.+10     	; 0x3f0 <__divsf3+0x20>
 3e6:	5f 3f       	cpi	r21, 0xFF	; 255
 3e8:	29 f0       	breq	.+10     	; 0x3f4 <__divsf3+0x24>
 3ea:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_inf>
 3ee:	51 11       	cpse	r21, r1
 3f0:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_szero>
 3f4:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_nan>

000003f8 <__divsf3x>:
 3f8:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_split3>
 3fc:	68 f3       	brcs	.-38     	; 0x3d8 <__divsf3+0x8>

000003fe <__divsf3_pse>:
 3fe:	99 23       	and	r25, r25
 400:	b1 f3       	breq	.-20     	; 0x3ee <__divsf3+0x1e>
 402:	55 23       	and	r21, r21
 404:	91 f3       	breq	.-28     	; 0x3ea <__divsf3+0x1a>
 406:	95 1b       	sub	r25, r21
 408:	55 0b       	sbc	r21, r21
 40a:	bb 27       	eor	r27, r27
 40c:	aa 27       	eor	r26, r26
 40e:	62 17       	cp	r22, r18
 410:	73 07       	cpc	r23, r19
 412:	84 07       	cpc	r24, r20
 414:	38 f0       	brcs	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 416:	9f 5f       	subi	r25, 0xFF	; 255
 418:	5f 4f       	sbci	r21, 0xFF	; 255
 41a:	22 0f       	add	r18, r18
 41c:	33 1f       	adc	r19, r19
 41e:	44 1f       	adc	r20, r20
 420:	aa 1f       	adc	r26, r26
 422:	a9 f3       	breq	.-22     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 424:	35 d0       	rcall	.+106    	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 426:	0e 2e       	mov	r0, r30
 428:	3a f0       	brmi	.+14     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 42a:	e0 e8       	ldi	r30, 0x80	; 128
 42c:	32 d0       	rcall	.+100    	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 42e:	91 50       	subi	r25, 0x01	; 1
 430:	50 40       	sbci	r21, 0x00	; 0
 432:	e6 95       	lsr	r30
 434:	00 1c       	adc	r0, r0
 436:	ca f7       	brpl	.-14     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 438:	2b d0       	rcall	.+86     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 43a:	fe 2f       	mov	r31, r30
 43c:	29 d0       	rcall	.+82     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 43e:	66 0f       	add	r22, r22
 440:	77 1f       	adc	r23, r23
 442:	88 1f       	adc	r24, r24
 444:	bb 1f       	adc	r27, r27
 446:	26 17       	cp	r18, r22
 448:	37 07       	cpc	r19, r23
 44a:	48 07       	cpc	r20, r24
 44c:	ab 07       	cpc	r26, r27
 44e:	b0 e8       	ldi	r27, 0x80	; 128
 450:	09 f0       	breq	.+2      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 452:	bb 0b       	sbc	r27, r27
 454:	80 2d       	mov	r24, r0
 456:	bf 01       	movw	r22, r30
 458:	ff 27       	eor	r31, r31
 45a:	93 58       	subi	r25, 0x83	; 131
 45c:	5f 4f       	sbci	r21, 0xFF	; 255
 45e:	3a f0       	brmi	.+14     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 460:	9e 3f       	cpi	r25, 0xFE	; 254
 462:	51 05       	cpc	r21, r1
 464:	78 f0       	brcs	.+30     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 466:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_inf>
 46a:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_szero>
 46e:	5f 3f       	cpi	r21, 0xFF	; 255
 470:	e4 f3       	brlt	.-8      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 472:	98 3e       	cpi	r25, 0xE8	; 232
 474:	d4 f3       	brlt	.-12     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 476:	86 95       	lsr	r24
 478:	77 95       	ror	r23
 47a:	67 95       	ror	r22
 47c:	b7 95       	ror	r27
 47e:	f7 95       	ror	r31
 480:	9f 5f       	subi	r25, 0xFF	; 255
 482:	c9 f7       	brne	.-14     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 484:	88 0f       	add	r24, r24
 486:	91 1d       	adc	r25, r1
 488:	96 95       	lsr	r25
 48a:	87 95       	ror	r24
 48c:	97 f9       	bld	r25, 7
 48e:	08 95       	ret
 490:	e1 e0       	ldi	r30, 0x01	; 1
 492:	66 0f       	add	r22, r22
 494:	77 1f       	adc	r23, r23
 496:	88 1f       	adc	r24, r24
 498:	bb 1f       	adc	r27, r27
 49a:	62 17       	cp	r22, r18
 49c:	73 07       	cpc	r23, r19
 49e:	84 07       	cpc	r24, r20
 4a0:	ba 07       	cpc	r27, r26
 4a2:	20 f0       	brcs	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a4:	62 1b       	sub	r22, r18
 4a6:	73 0b       	sbc	r23, r19
 4a8:	84 0b       	sbc	r24, r20
 4aa:	ba 0b       	sbc	r27, r26
 4ac:	ee 1f       	adc	r30, r30
 4ae:	88 f7       	brcc	.-30     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 4b0:	e0 95       	com	r30
 4b2:	08 95       	ret

000004b4 <__fixunssfsi>:
 4b4:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_splitA>
 4b8:	88 f0       	brcs	.+34     	; 0x4dc <__fixunssfsi+0x28>
 4ba:	9f 57       	subi	r25, 0x7F	; 127
 4bc:	98 f0       	brcs	.+38     	; 0x4e4 <__fixunssfsi+0x30>
 4be:	b9 2f       	mov	r27, r25
 4c0:	99 27       	eor	r25, r25
 4c2:	b7 51       	subi	r27, 0x17	; 23
 4c4:	b0 f0       	brcs	.+44     	; 0x4f2 <__fixunssfsi+0x3e>
 4c6:	e1 f0       	breq	.+56     	; 0x500 <__fixunssfsi+0x4c>
 4c8:	66 0f       	add	r22, r22
 4ca:	77 1f       	adc	r23, r23
 4cc:	88 1f       	adc	r24, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	1a f0       	brmi	.+6      	; 0x4d8 <__fixunssfsi+0x24>
 4d2:	ba 95       	dec	r27
 4d4:	c9 f7       	brne	.-14     	; 0x4c8 <__fixunssfsi+0x14>
 4d6:	14 c0       	rjmp	.+40     	; 0x500 <__fixunssfsi+0x4c>
 4d8:	b1 30       	cpi	r27, 0x01	; 1
 4da:	91 f0       	breq	.+36     	; 0x500 <__fixunssfsi+0x4c>
 4dc:	0e 94 10 03 	call	0x620	; 0x620 <__fp_zero>
 4e0:	b1 e0       	ldi	r27, 0x01	; 1
 4e2:	08 95       	ret
 4e4:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_zero>
 4e8:	67 2f       	mov	r22, r23
 4ea:	78 2f       	mov	r23, r24
 4ec:	88 27       	eor	r24, r24
 4ee:	b8 5f       	subi	r27, 0xF8	; 248
 4f0:	39 f0       	breq	.+14     	; 0x500 <__fixunssfsi+0x4c>
 4f2:	b9 3f       	cpi	r27, 0xF9	; 249
 4f4:	cc f3       	brlt	.-14     	; 0x4e8 <__fixunssfsi+0x34>
 4f6:	86 95       	lsr	r24
 4f8:	77 95       	ror	r23
 4fa:	67 95       	ror	r22
 4fc:	b3 95       	inc	r27
 4fe:	d9 f7       	brne	.-10     	; 0x4f6 <__fixunssfsi+0x42>
 500:	3e f4       	brtc	.+14     	; 0x510 <__fixunssfsi+0x5c>
 502:	90 95       	com	r25
 504:	80 95       	com	r24
 506:	70 95       	com	r23
 508:	61 95       	neg	r22
 50a:	7f 4f       	sbci	r23, 0xFF	; 255
 50c:	8f 4f       	sbci	r24, 0xFF	; 255
 50e:	9f 4f       	sbci	r25, 0xFF	; 255
 510:	08 95       	ret

00000512 <__floatunsisf>:
 512:	e8 94       	clt
 514:	09 c0       	rjmp	.+18     	; 0x528 <__floatsisf+0x12>

00000516 <__floatsisf>:
 516:	97 fb       	bst	r25, 7
 518:	3e f4       	brtc	.+14     	; 0x528 <__floatsisf+0x12>
 51a:	90 95       	com	r25
 51c:	80 95       	com	r24
 51e:	70 95       	com	r23
 520:	61 95       	neg	r22
 522:	7f 4f       	sbci	r23, 0xFF	; 255
 524:	8f 4f       	sbci	r24, 0xFF	; 255
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	99 23       	and	r25, r25
 52a:	a9 f0       	breq	.+42     	; 0x556 <__floatsisf+0x40>
 52c:	f9 2f       	mov	r31, r25
 52e:	96 e9       	ldi	r25, 0x96	; 150
 530:	bb 27       	eor	r27, r27
 532:	93 95       	inc	r25
 534:	f6 95       	lsr	r31
 536:	87 95       	ror	r24
 538:	77 95       	ror	r23
 53a:	67 95       	ror	r22
 53c:	b7 95       	ror	r27
 53e:	f1 11       	cpse	r31, r1
 540:	f8 cf       	rjmp	.-16     	; 0x532 <__floatsisf+0x1c>
 542:	fa f4       	brpl	.+62     	; 0x582 <__floatsisf+0x6c>
 544:	bb 0f       	add	r27, r27
 546:	11 f4       	brne	.+4      	; 0x54c <__floatsisf+0x36>
 548:	60 ff       	sbrs	r22, 0
 54a:	1b c0       	rjmp	.+54     	; 0x582 <__floatsisf+0x6c>
 54c:	6f 5f       	subi	r22, 0xFF	; 255
 54e:	7f 4f       	sbci	r23, 0xFF	; 255
 550:	8f 4f       	sbci	r24, 0xFF	; 255
 552:	9f 4f       	sbci	r25, 0xFF	; 255
 554:	16 c0       	rjmp	.+44     	; 0x582 <__floatsisf+0x6c>
 556:	88 23       	and	r24, r24
 558:	11 f0       	breq	.+4      	; 0x55e <__floatsisf+0x48>
 55a:	96 e9       	ldi	r25, 0x96	; 150
 55c:	11 c0       	rjmp	.+34     	; 0x580 <__floatsisf+0x6a>
 55e:	77 23       	and	r23, r23
 560:	21 f0       	breq	.+8      	; 0x56a <__floatsisf+0x54>
 562:	9e e8       	ldi	r25, 0x8E	; 142
 564:	87 2f       	mov	r24, r23
 566:	76 2f       	mov	r23, r22
 568:	05 c0       	rjmp	.+10     	; 0x574 <__floatsisf+0x5e>
 56a:	66 23       	and	r22, r22
 56c:	71 f0       	breq	.+28     	; 0x58a <__floatsisf+0x74>
 56e:	96 e8       	ldi	r25, 0x86	; 134
 570:	86 2f       	mov	r24, r22
 572:	70 e0       	ldi	r23, 0x00	; 0
 574:	60 e0       	ldi	r22, 0x00	; 0
 576:	2a f0       	brmi	.+10     	; 0x582 <__floatsisf+0x6c>
 578:	9a 95       	dec	r25
 57a:	66 0f       	add	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	da f7       	brpl	.-10     	; 0x578 <__floatsisf+0x62>
 582:	88 0f       	add	r24, r24
 584:	96 95       	lsr	r25
 586:	87 95       	ror	r24
 588:	97 f9       	bld	r25, 7
 58a:	08 95       	ret

0000058c <__fp_inf>:
 58c:	97 f9       	bld	r25, 7
 58e:	9f 67       	ori	r25, 0x7F	; 127
 590:	80 e8       	ldi	r24, 0x80	; 128
 592:	70 e0       	ldi	r23, 0x00	; 0
 594:	60 e0       	ldi	r22, 0x00	; 0
 596:	08 95       	ret

00000598 <__fp_nan>:
 598:	9f ef       	ldi	r25, 0xFF	; 255
 59a:	80 ec       	ldi	r24, 0xC0	; 192
 59c:	08 95       	ret

0000059e <__fp_pscA>:
 59e:	00 24       	eor	r0, r0
 5a0:	0a 94       	dec	r0
 5a2:	16 16       	cp	r1, r22
 5a4:	17 06       	cpc	r1, r23
 5a6:	18 06       	cpc	r1, r24
 5a8:	09 06       	cpc	r0, r25
 5aa:	08 95       	ret

000005ac <__fp_pscB>:
 5ac:	00 24       	eor	r0, r0
 5ae:	0a 94       	dec	r0
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	14 06       	cpc	r1, r20
 5b6:	05 06       	cpc	r0, r21
 5b8:	08 95       	ret

000005ba <__fp_round>:
 5ba:	09 2e       	mov	r0, r25
 5bc:	03 94       	inc	r0
 5be:	00 0c       	add	r0, r0
 5c0:	11 f4       	brne	.+4      	; 0x5c6 <__fp_round+0xc>
 5c2:	88 23       	and	r24, r24
 5c4:	52 f0       	brmi	.+20     	; 0x5da <__fp_round+0x20>
 5c6:	bb 0f       	add	r27, r27
 5c8:	40 f4       	brcc	.+16     	; 0x5da <__fp_round+0x20>
 5ca:	bf 2b       	or	r27, r31
 5cc:	11 f4       	brne	.+4      	; 0x5d2 <__fp_round+0x18>
 5ce:	60 ff       	sbrs	r22, 0
 5d0:	04 c0       	rjmp	.+8      	; 0x5da <__fp_round+0x20>
 5d2:	6f 5f       	subi	r22, 0xFF	; 255
 5d4:	7f 4f       	sbci	r23, 0xFF	; 255
 5d6:	8f 4f       	sbci	r24, 0xFF	; 255
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	08 95       	ret

000005dc <__fp_split3>:
 5dc:	57 fd       	sbrc	r21, 7
 5de:	90 58       	subi	r25, 0x80	; 128
 5e0:	44 0f       	add	r20, r20
 5e2:	55 1f       	adc	r21, r21
 5e4:	59 f0       	breq	.+22     	; 0x5fc <__fp_splitA+0x10>
 5e6:	5f 3f       	cpi	r21, 0xFF	; 255
 5e8:	71 f0       	breq	.+28     	; 0x606 <__fp_splitA+0x1a>
 5ea:	47 95       	ror	r20

000005ec <__fp_splitA>:
 5ec:	88 0f       	add	r24, r24
 5ee:	97 fb       	bst	r25, 7
 5f0:	99 1f       	adc	r25, r25
 5f2:	61 f0       	breq	.+24     	; 0x60c <__fp_splitA+0x20>
 5f4:	9f 3f       	cpi	r25, 0xFF	; 255
 5f6:	79 f0       	breq	.+30     	; 0x616 <__fp_splitA+0x2a>
 5f8:	87 95       	ror	r24
 5fa:	08 95       	ret
 5fc:	12 16       	cp	r1, r18
 5fe:	13 06       	cpc	r1, r19
 600:	14 06       	cpc	r1, r20
 602:	55 1f       	adc	r21, r21
 604:	f2 cf       	rjmp	.-28     	; 0x5ea <__fp_split3+0xe>
 606:	46 95       	lsr	r20
 608:	f1 df       	rcall	.-30     	; 0x5ec <__fp_splitA>
 60a:	08 c0       	rjmp	.+16     	; 0x61c <__fp_splitA+0x30>
 60c:	16 16       	cp	r1, r22
 60e:	17 06       	cpc	r1, r23
 610:	18 06       	cpc	r1, r24
 612:	99 1f       	adc	r25, r25
 614:	f1 cf       	rjmp	.-30     	; 0x5f8 <__fp_splitA+0xc>
 616:	86 95       	lsr	r24
 618:	71 05       	cpc	r23, r1
 61a:	61 05       	cpc	r22, r1
 61c:	08 94       	sec
 61e:	08 95       	ret

00000620 <__fp_zero>:
 620:	e8 94       	clt

00000622 <__fp_szero>:
 622:	bb 27       	eor	r27, r27
 624:	66 27       	eor	r22, r22
 626:	77 27       	eor	r23, r23
 628:	cb 01       	movw	r24, r22
 62a:	97 f9       	bld	r25, 7
 62c:	08 95       	ret

0000062e <__mulsf3>:
 62e:	0e 94 2a 03 	call	0x654	; 0x654 <__mulsf3x>
 632:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__fp_round>
 636:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_pscA>
 63a:	38 f0       	brcs	.+14     	; 0x64a <__mulsf3+0x1c>
 63c:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_pscB>
 640:	20 f0       	brcs	.+8      	; 0x64a <__mulsf3+0x1c>
 642:	95 23       	and	r25, r21
 644:	11 f0       	breq	.+4      	; 0x64a <__mulsf3+0x1c>
 646:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_inf>
 64a:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_nan>
 64e:	11 24       	eor	r1, r1
 650:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_szero>

00000654 <__mulsf3x>:
 654:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_split3>
 658:	70 f3       	brcs	.-36     	; 0x636 <__mulsf3+0x8>

0000065a <__mulsf3_pse>:
 65a:	95 9f       	mul	r25, r21
 65c:	c1 f3       	breq	.-16     	; 0x64e <__mulsf3+0x20>
 65e:	95 0f       	add	r25, r21
 660:	50 e0       	ldi	r21, 0x00	; 0
 662:	55 1f       	adc	r21, r21
 664:	62 9f       	mul	r22, r18
 666:	f0 01       	movw	r30, r0
 668:	72 9f       	mul	r23, r18
 66a:	bb 27       	eor	r27, r27
 66c:	f0 0d       	add	r31, r0
 66e:	b1 1d       	adc	r27, r1
 670:	63 9f       	mul	r22, r19
 672:	aa 27       	eor	r26, r26
 674:	f0 0d       	add	r31, r0
 676:	b1 1d       	adc	r27, r1
 678:	aa 1f       	adc	r26, r26
 67a:	64 9f       	mul	r22, r20
 67c:	66 27       	eor	r22, r22
 67e:	b0 0d       	add	r27, r0
 680:	a1 1d       	adc	r26, r1
 682:	66 1f       	adc	r22, r22
 684:	82 9f       	mul	r24, r18
 686:	22 27       	eor	r18, r18
 688:	b0 0d       	add	r27, r0
 68a:	a1 1d       	adc	r26, r1
 68c:	62 1f       	adc	r22, r18
 68e:	73 9f       	mul	r23, r19
 690:	b0 0d       	add	r27, r0
 692:	a1 1d       	adc	r26, r1
 694:	62 1f       	adc	r22, r18
 696:	83 9f       	mul	r24, r19
 698:	a0 0d       	add	r26, r0
 69a:	61 1d       	adc	r22, r1
 69c:	22 1f       	adc	r18, r18
 69e:	74 9f       	mul	r23, r20
 6a0:	33 27       	eor	r19, r19
 6a2:	a0 0d       	add	r26, r0
 6a4:	61 1d       	adc	r22, r1
 6a6:	23 1f       	adc	r18, r19
 6a8:	84 9f       	mul	r24, r20
 6aa:	60 0d       	add	r22, r0
 6ac:	21 1d       	adc	r18, r1
 6ae:	82 2f       	mov	r24, r18
 6b0:	76 2f       	mov	r23, r22
 6b2:	6a 2f       	mov	r22, r26
 6b4:	11 24       	eor	r1, r1
 6b6:	9f 57       	subi	r25, 0x7F	; 127
 6b8:	50 40       	sbci	r21, 0x00	; 0
 6ba:	9a f0       	brmi	.+38     	; 0x6e2 <__mulsf3_pse+0x88>
 6bc:	f1 f0       	breq	.+60     	; 0x6fa <__mulsf3_pse+0xa0>
 6be:	88 23       	and	r24, r24
 6c0:	4a f0       	brmi	.+18     	; 0x6d4 <__mulsf3_pse+0x7a>
 6c2:	ee 0f       	add	r30, r30
 6c4:	ff 1f       	adc	r31, r31
 6c6:	bb 1f       	adc	r27, r27
 6c8:	66 1f       	adc	r22, r22
 6ca:	77 1f       	adc	r23, r23
 6cc:	88 1f       	adc	r24, r24
 6ce:	91 50       	subi	r25, 0x01	; 1
 6d0:	50 40       	sbci	r21, 0x00	; 0
 6d2:	a9 f7       	brne	.-22     	; 0x6be <__mulsf3_pse+0x64>
 6d4:	9e 3f       	cpi	r25, 0xFE	; 254
 6d6:	51 05       	cpc	r21, r1
 6d8:	80 f0       	brcs	.+32     	; 0x6fa <__mulsf3_pse+0xa0>
 6da:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_inf>
 6de:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_szero>
 6e2:	5f 3f       	cpi	r21, 0xFF	; 255
 6e4:	e4 f3       	brlt	.-8      	; 0x6de <__mulsf3_pse+0x84>
 6e6:	98 3e       	cpi	r25, 0xE8	; 232
 6e8:	d4 f3       	brlt	.-12     	; 0x6de <__mulsf3_pse+0x84>
 6ea:	86 95       	lsr	r24
 6ec:	77 95       	ror	r23
 6ee:	67 95       	ror	r22
 6f0:	b7 95       	ror	r27
 6f2:	f7 95       	ror	r31
 6f4:	e7 95       	ror	r30
 6f6:	9f 5f       	subi	r25, 0xFF	; 255
 6f8:	c1 f7       	brne	.-16     	; 0x6ea <__mulsf3_pse+0x90>
 6fa:	fe 2b       	or	r31, r30
 6fc:	88 0f       	add	r24, r24
 6fe:	91 1d       	adc	r25, r1
 700:	96 95       	lsr	r25
 702:	87 95       	ror	r24
 704:	97 f9       	bld	r25, 7
 706:	08 95       	ret

00000708 <itoa>:
 708:	45 32       	cpi	r20, 0x25	; 37
 70a:	51 05       	cpc	r21, r1
 70c:	20 f4       	brcc	.+8      	; 0x716 <itoa+0xe>
 70e:	42 30       	cpi	r20, 0x02	; 2
 710:	10 f0       	brcs	.+4      	; 0x716 <itoa+0xe>
 712:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__itoa_ncheck>
 716:	fb 01       	movw	r30, r22
 718:	10 82       	st	Z, r1
 71a:	cb 01       	movw	r24, r22
 71c:	08 95       	ret

0000071e <__itoa_ncheck>:
 71e:	bb 27       	eor	r27, r27
 720:	4a 30       	cpi	r20, 0x0A	; 10
 722:	31 f4       	brne	.+12     	; 0x730 <__itoa_ncheck+0x12>
 724:	99 23       	and	r25, r25
 726:	22 f4       	brpl	.+8      	; 0x730 <__itoa_ncheck+0x12>
 728:	bd e2       	ldi	r27, 0x2D	; 45
 72a:	90 95       	com	r25
 72c:	81 95       	neg	r24
 72e:	9f 4f       	sbci	r25, 0xFF	; 255
 730:	0c 94 9b 03 	jmp	0x736	; 0x736 <__utoa_common>

00000734 <__utoa_ncheck>:
 734:	bb 27       	eor	r27, r27

00000736 <__utoa_common>:
 736:	fb 01       	movw	r30, r22
 738:	55 27       	eor	r21, r21
 73a:	aa 27       	eor	r26, r26
 73c:	88 0f       	add	r24, r24
 73e:	99 1f       	adc	r25, r25
 740:	aa 1f       	adc	r26, r26
 742:	a4 17       	cp	r26, r20
 744:	10 f0       	brcs	.+4      	; 0x74a <__utoa_common+0x14>
 746:	a4 1b       	sub	r26, r20
 748:	83 95       	inc	r24
 74a:	50 51       	subi	r21, 0x10	; 16
 74c:	b9 f7       	brne	.-18     	; 0x73c <__utoa_common+0x6>
 74e:	a0 5d       	subi	r26, 0xD0	; 208
 750:	aa 33       	cpi	r26, 0x3A	; 58
 752:	08 f0       	brcs	.+2      	; 0x756 <__utoa_common+0x20>
 754:	a9 5d       	subi	r26, 0xD9	; 217
 756:	a1 93       	st	Z+, r26
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	79 f7       	brne	.-34     	; 0x73a <__utoa_common+0x4>
 75c:	b1 11       	cpse	r27, r1
 75e:	b1 93       	st	Z+, r27
 760:	11 92       	st	Z+, r1
 762:	cb 01       	movw	r24, r22
 764:	0c 94 b4 03 	jmp	0x768	; 0x768 <strrev>

00000768 <strrev>:
 768:	dc 01       	movw	r26, r24
 76a:	fc 01       	movw	r30, r24
 76c:	67 2f       	mov	r22, r23
 76e:	71 91       	ld	r23, Z+
 770:	77 23       	and	r23, r23
 772:	e1 f7       	brne	.-8      	; 0x76c <strrev+0x4>
 774:	32 97       	sbiw	r30, 0x02	; 2
 776:	04 c0       	rjmp	.+8      	; 0x780 <strrev+0x18>
 778:	7c 91       	ld	r23, X
 77a:	6d 93       	st	X+, r22
 77c:	70 83       	st	Z, r23
 77e:	62 91       	ld	r22, -Z
 780:	ae 17       	cp	r26, r30
 782:	bf 07       	cpc	r27, r31
 784:	c8 f3       	brcs	.-14     	; 0x778 <strrev+0x10>
 786:	08 95       	ret

00000788 <_exit>:
 788:	f8 94       	cli

0000078a <__stop_program>:
 78a:	ff cf       	rjmp	.-2      	; 0x78a <__stop_program>
