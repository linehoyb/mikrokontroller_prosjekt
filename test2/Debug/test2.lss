
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000001e2  00000256  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b84  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000767  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041f  00000000  00000000  00001607  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001a28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d1  00000000  00000000  00001aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000462  00000000  00000000  00001e79  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000022db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ee       	ldi	r30, 0xE2	; 226
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 30       	cpi	r26, 0x0E	; 14
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <main>
  9e:	0c 94 ef 00 	jmp	0x1de	; 0x1de <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_Action>:
	if (row == 0 && pos<16)
	LCD_Action((pos & 0x0F)|0x80);
	else if (row == 1 && pos<16)
	LCD_Action((pos & 0x0F)|0xC0);
	LCD_Print(str);
}
  a6:	9b b1       	in	r25, 0x0b	; 11
  a8:	9f 70       	andi	r25, 0x0F	; 15
  aa:	28 2f       	mov	r18, r24
  ac:	20 7f       	andi	r18, 0xF0	; 240
  ae:	92 2b       	or	r25, r18
  b0:	9b b9       	out	0x0b, r25	; 11
  b2:	9b b1       	in	r25, 0x0b	; 11
  b4:	9e 7f       	andi	r25, 0xFE	; 254
  b6:	9b b9       	out	0x0b, r25	; 11
  b8:	9b b1       	in	r25, 0x0b	; 11
  ba:	92 60       	ori	r25, 0x02	; 2
  bc:	9b b9       	out	0x0b, r25	; 11
  be:	35 e0       	ldi	r19, 0x05	; 5
  c0:	3a 95       	dec	r19
  c2:	f1 f7       	brne	.-4      	; 0xc0 <LCD_Action+0x1a>
  c4:	00 00       	nop
  c6:	9b b1       	in	r25, 0x0b	; 11
  c8:	9d 7f       	andi	r25, 0xFD	; 253
  ca:	9b b9       	out	0x0b, r25	; 11
  cc:	ef e1       	ldi	r30, 0x1F	; 31
  ce:	f3 e0       	ldi	r31, 0x03	; 3
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_Action+0x2a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_Action+0x30>
  d6:	00 00       	nop
  d8:	2b b1       	in	r18, 0x0b	; 11
  da:	f0 e1       	ldi	r31, 0x10	; 16
  dc:	8f 9f       	mul	r24, r31
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	92 2f       	mov	r25, r18
  e4:	9f 70       	andi	r25, 0x0F	; 15
  e6:	89 2b       	or	r24, r25
  e8:	8b b9       	out	0x0b, r24	; 11
  ea:	8b b1       	in	r24, 0x0b	; 11
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	8b b9       	out	0x0b, r24	; 11
  f0:	35 e0       	ldi	r19, 0x05	; 5
  f2:	3a 95       	dec	r19
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Action+0x4c>
  f6:	00 00       	nop
  f8:	8b b1       	in	r24, 0x0b	; 11
  fa:	8d 7f       	andi	r24, 0xFD	; 253
  fc:	8b b9       	out	0x0b, r24	; 11
  fe:	8f e3       	ldi	r24, 0x3F	; 63
 100:	9f e1       	ldi	r25, 0x1F	; 31
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Action+0x5c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Action+0x62>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <LCD_Init>:
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	8a b9       	out	0x0a, r24	; 10
 110:	8f e5       	ldi	r24, 0x5F	; 95
 112:	9a ee       	ldi	r25, 0xEA	; 234
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <LCD_Init+0x8>
 118:	00 c0       	rjmp	.+0      	; 0x11a <LCD_Init+0xe>
 11a:	00 00       	nop
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 124:	88 e2       	ldi	r24, 0x28	; 40
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 12c:	8c e0       	ldi	r24, 0x0C	; 12
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 144:	8f e3       	ldi	r24, 0x3F	; 63
 146:	9f e1       	ldi	r25, 0x1F	; 31
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <LCD_Init+0x3c>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <LCD_Init+0x42>
 14e:	00 00       	nop
 150:	08 95       	ret

00000152 <LCD_Print>:
 152:	fc 01       	movw	r30, r24
 154:	60 e0       	ldi	r22, 0x00	; 0
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	34 c0       	rjmp	.+104    	; 0x1c2 <LCD_Print+0x70>
 15a:	8b b1       	in	r24, 0x0b	; 11
 15c:	8f 70       	andi	r24, 0x0F	; 15
 15e:	90 7f       	andi	r25, 0xF0	; 240
 160:	98 2b       	or	r25, r24
 162:	9b b9       	out	0x0b, r25	; 11
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8b b9       	out	0x0b, r24	; 11
 16a:	8b b1       	in	r24, 0x0b	; 11
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	8b b9       	out	0x0b, r24	; 11
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	8a 95       	dec	r24
 174:	f1 f7       	brne	.-4      	; 0x172 <LCD_Print+0x20>
 176:	00 00       	nop
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	8d 7f       	andi	r24, 0xFD	; 253
 17c:	8b b9       	out	0x0b, r24	; 11
 17e:	8f e1       	ldi	r24, 0x1F	; 31
 180:	93 e0       	ldi	r25, 0x03	; 3
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <LCD_Print+0x30>
 186:	00 c0       	rjmp	.+0      	; 0x188 <LCD_Print+0x36>
 188:	00 00       	nop
 18a:	4b b1       	in	r20, 0x0b	; 11
 18c:	9c 91       	ld	r25, X
 18e:	80 e1       	ldi	r24, 0x10	; 16
 190:	98 9f       	mul	r25, r24
 192:	90 01       	movw	r18, r0
 194:	11 24       	eor	r1, r1
 196:	94 2f       	mov	r25, r20
 198:	9f 70       	andi	r25, 0x0F	; 15
 19a:	29 2b       	or	r18, r25
 19c:	2b b9       	out	0x0b, r18	; 11
 19e:	9b b1       	in	r25, 0x0b	; 11
 1a0:	92 60       	ori	r25, 0x02	; 2
 1a2:	9b b9       	out	0x0b, r25	; 11
 1a4:	95 e0       	ldi	r25, 0x05	; 5
 1a6:	9a 95       	dec	r25
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_Print+0x54>
 1aa:	00 00       	nop
 1ac:	9b b1       	in	r25, 0x0b	; 11
 1ae:	9d 7f       	andi	r25, 0xFD	; 253
 1b0:	9b b9       	out	0x0b, r25	; 11
 1b2:	8f e3       	ldi	r24, 0x3F	; 63
 1b4:	9f e1       	ldi	r25, 0x1F	; 31
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Print+0x64>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Print+0x6a>
 1bc:	00 00       	nop
 1be:	6f 5f       	subi	r22, 0xFF	; 255
 1c0:	7f 4f       	sbci	r23, 0xFF	; 255
 1c2:	df 01       	movw	r26, r30
 1c4:	a6 0f       	add	r26, r22
 1c6:	b7 1f       	adc	r27, r23
 1c8:	9c 91       	ld	r25, X
 1ca:	91 11       	cpse	r25, r1
 1cc:	c6 cf       	rjmp	.-116    	; 0x15a <LCD_Print+0x8>
 1ce:	08 95       	ret

000001d0 <main>:

int main()
{
	LCD_Init(); //Activate LCD
 1d0:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Init>
	LCD_Print("Arduino works");	//Begin writing at Line 1, Position 1
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	0e 94 a9 00 	call	0x152	; 0x152 <LCD_Print>
 1dc:	ff cf       	rjmp	.-2      	; 0x1dc <main+0xc>

000001de <_exit>:
 1de:	f8 94       	cli

000001e0 <__stop_program>:
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <__stop_program>
