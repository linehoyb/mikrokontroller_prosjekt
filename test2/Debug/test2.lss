
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000938  000009cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000938  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080011e  0080011e  000009ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011df  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000880  00000000  00000000  00001ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000722  00000000  00000000  00002563  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f0  00000000  00000000  00002c88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000531  00000000  00000000  00002e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e0  00000000  00000000  000033a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003d89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 8d 02 	jmp	0x51a	; 0x51a <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e3       	ldi	r30, 0x38	; 56
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 32       	cpi	r26, 0x22	; 34
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9f 01 	call	0x33e	; 0x33e <main>
  9e:	0c 94 9a 04 	jmp	0x934	; 0x934 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
	if (row == 0 && pos<16)
	LCD_Action((pos & 0x0F)|0x80);
	else if (row == 1 && pos<16)
	LCD_Action((pos & 0x0F)|0xC0);
	LCD_Print(str);
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 68       	ori	r24, 0x87	; 135
  b8:	80 83       	st	Z, r24
  ba:	08 95       	ret

000000bc <timer_init>:
  bc:	88 e0       	ldi	r24, 0x08	; 8
  be:	9d e3       	ldi	r25, 0x3D	; 61
  c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
  d2:	af e6       	ldi	r26, 0x6F	; 111
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	8c 91       	ld	r24, X
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	8c 93       	st	X, r24
  dc:	80 81       	ld	r24, Z
  de:	85 60       	ori	r24, 0x05	; 5
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret

000000e4 <button_init>:
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	84 61       	ori	r24, 0x14	; 20
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	eb e6       	ldi	r30, 0x6B	; 107
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 61       	ori	r24, 0x10	; 16
  f2:	80 83       	st	Z, r24
  f4:	e8 e6       	ldi	r30, 0x68	; 104
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	81 60       	ori	r24, 0x01	; 1
  fc:	80 83       	st	Z, r24
  fe:	e9 e6       	ldi	r30, 0x69	; 105
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <LCD_Action>:
 10a:	9b b1       	in	r25, 0x0b	; 11
 10c:	9f 70       	andi	r25, 0x0F	; 15
 10e:	28 2f       	mov	r18, r24
 110:	20 7f       	andi	r18, 0xF0	; 240
 112:	92 2b       	or	r25, r18
 114:	9b b9       	out	0x0b, r25	; 11
 116:	9b b1       	in	r25, 0x0b	; 11
 118:	9e 7f       	andi	r25, 0xFE	; 254
 11a:	9b b9       	out	0x0b, r25	; 11
 11c:	9b b1       	in	r25, 0x0b	; 11
 11e:	92 60       	ori	r25, 0x02	; 2
 120:	9b b9       	out	0x0b, r25	; 11
 122:	35 e0       	ldi	r19, 0x05	; 5
 124:	3a 95       	dec	r19
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_Action+0x1a>
 128:	00 00       	nop
 12a:	9b b1       	in	r25, 0x0b	; 11
 12c:	9d 7f       	andi	r25, 0xFD	; 253
 12e:	9b b9       	out	0x0b, r25	; 11
 130:	ef e1       	ldi	r30, 0x1F	; 31
 132:	f3 e0       	ldi	r31, 0x03	; 3
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <LCD_Action+0x2a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Action+0x30>
 13a:	00 00       	nop
 13c:	2b b1       	in	r18, 0x0b	; 11
 13e:	f0 e1       	ldi	r31, 0x10	; 16
 140:	8f 9f       	mul	r24, r31
 142:	c0 01       	movw	r24, r0
 144:	11 24       	eor	r1, r1
 146:	92 2f       	mov	r25, r18
 148:	9f 70       	andi	r25, 0x0F	; 15
 14a:	89 2b       	or	r24, r25
 14c:	8b b9       	out	0x0b, r24	; 11
 14e:	8b b1       	in	r24, 0x0b	; 11
 150:	82 60       	ori	r24, 0x02	; 2
 152:	8b b9       	out	0x0b, r24	; 11
 154:	35 e0       	ldi	r19, 0x05	; 5
 156:	3a 95       	dec	r19
 158:	f1 f7       	brne	.-4      	; 0x156 <LCD_Action+0x4c>
 15a:	00 00       	nop
 15c:	8b b1       	in	r24, 0x0b	; 11
 15e:	8d 7f       	andi	r24, 0xFD	; 253
 160:	8b b9       	out	0x0b, r24	; 11
 162:	8f e3       	ldi	r24, 0x3F	; 63
 164:	9f e1       	ldi	r25, 0x1F	; 31
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <LCD_Action+0x5c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <LCD_Action+0x62>
 16c:	00 00       	nop
 16e:	08 95       	ret

00000170 <LCD_Init>:
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	8a b9       	out	0x0a, r24	; 10
 174:	8f e5       	ldi	r24, 0x5F	; 95
 176:	9a ee       	ldi	r25, 0xEA	; 234
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCD_Init+0x8>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_Init+0xe>
 17e:	00 00       	nop
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 188:	88 e2       	ldi	r24, 0x28	; 40
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 190:	8c e0       	ldi	r24, 0x0C	; 12
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 198:	86 e0       	ldi	r24, 0x06	; 6
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1a8:	8f e3       	ldi	r24, 0x3F	; 63
 1aa:	9f e1       	ldi	r25, 0x1F	; 31
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCD_Init+0x3c>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <LCD_Init+0x42>
 1b2:	00 00       	nop
 1b4:	08 95       	ret

000001b6 <LCD_Clear>:
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1bc:	8f e3       	ldi	r24, 0x3F	; 63
 1be:	9f e1       	ldi	r25, 0x1F	; 31
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <LCD_Clear+0xa>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <LCD_Clear+0x10>
 1c6:	00 00       	nop
 1c8:	80 e8       	ldi	r24, 0x80	; 128
 1ca:	0e 94 85 00 	call	0x10a	; 0x10a <LCD_Action>
 1ce:	08 95       	ret

000001d0 <LCD_Print>:
 1d0:	fc 01       	movw	r30, r24
 1d2:	60 e0       	ldi	r22, 0x00	; 0
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	34 c0       	rjmp	.+104    	; 0x240 <LCD_Print+0x70>
 1d8:	8b b1       	in	r24, 0x0b	; 11
 1da:	8f 70       	andi	r24, 0x0F	; 15
 1dc:	90 7f       	andi	r25, 0xF0	; 240
 1de:	98 2b       	or	r25, r24
 1e0:	9b b9       	out	0x0b, r25	; 11
 1e2:	8b b1       	in	r24, 0x0b	; 11
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	8b b9       	out	0x0b, r24	; 11
 1e8:	8b b1       	in	r24, 0x0b	; 11
 1ea:	82 60       	ori	r24, 0x02	; 2
 1ec:	8b b9       	out	0x0b, r24	; 11
 1ee:	85 e0       	ldi	r24, 0x05	; 5
 1f0:	8a 95       	dec	r24
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <LCD_Print+0x20>
 1f4:	00 00       	nop
 1f6:	8b b1       	in	r24, 0x0b	; 11
 1f8:	8d 7f       	andi	r24, 0xFD	; 253
 1fa:	8b b9       	out	0x0b, r24	; 11
 1fc:	8f e1       	ldi	r24, 0x1F	; 31
 1fe:	93 e0       	ldi	r25, 0x03	; 3
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <LCD_Print+0x30>
 204:	00 c0       	rjmp	.+0      	; 0x206 <LCD_Print+0x36>
 206:	00 00       	nop
 208:	4b b1       	in	r20, 0x0b	; 11
 20a:	9c 91       	ld	r25, X
 20c:	80 e1       	ldi	r24, 0x10	; 16
 20e:	98 9f       	mul	r25, r24
 210:	90 01       	movw	r18, r0
 212:	11 24       	eor	r1, r1
 214:	94 2f       	mov	r25, r20
 216:	9f 70       	andi	r25, 0x0F	; 15
 218:	29 2b       	or	r18, r25
 21a:	2b b9       	out	0x0b, r18	; 11
 21c:	9b b1       	in	r25, 0x0b	; 11
 21e:	92 60       	ori	r25, 0x02	; 2
 220:	9b b9       	out	0x0b, r25	; 11
 222:	95 e0       	ldi	r25, 0x05	; 5
 224:	9a 95       	dec	r25
 226:	f1 f7       	brne	.-4      	; 0x224 <LCD_Print+0x54>
 228:	00 00       	nop
 22a:	9b b1       	in	r25, 0x0b	; 11
 22c:	9d 7f       	andi	r25, 0xFD	; 253
 22e:	9b b9       	out	0x0b, r25	; 11
 230:	8f e3       	ldi	r24, 0x3F	; 63
 232:	9f e1       	ldi	r25, 0x1F	; 31
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <LCD_Print+0x64>
 238:	00 c0       	rjmp	.+0      	; 0x23a <LCD_Print+0x6a>
 23a:	00 00       	nop
 23c:	6f 5f       	subi	r22, 0xFF	; 255
 23e:	7f 4f       	sbci	r23, 0xFF	; 255
 240:	df 01       	movw	r26, r30
 242:	a6 0f       	add	r26, r22
 244:	b7 1f       	adc	r27, r23
 246:	9c 91       	ld	r25, X
 248:	91 11       	cpse	r25, r1
 24a:	c6 cf       	rjmp	.-116    	; 0x1d8 <LCD_Print+0x8>
 24c:	08 95       	ret

0000024e <read_ADC>:

uint16_t read_ADC(uint8_t ADCchannel)
{
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); //select ADC channel with safety mask
 24e:	ec e7       	ldi	r30, 0x7C	; 124
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	90 81       	ld	r25, Z
 254:	90 7f       	andi	r25, 0xF0	; 240
 256:	8f 70       	andi	r24, 0x0F	; 15
 258:	89 2b       	or	r24, r25
 25a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC); //single conversion mode
 25c:	ea e7       	ldi	r30, 0x7A	; 122
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 64       	ori	r24, 0x40	; 64
 264:	80 83       	st	Z, r24

	while( ADCSRA & (1<<ADSC) ); // wait until ADC conversion is complete
 266:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 26a:	86 fd       	sbrc	r24, 6
 26c:	fc cf       	rjmp	.-8      	; 0x266 <read_ADC+0x18>
	return ADC;
 26e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 272:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 276:	08 95       	ret

00000278 <ADC_to_seconds>:

uint8_t ADC_to_seconds(uint16_t adc_number)
{
	/*Returns the timer value in seconds*/
	const float MAX_SECONDS = 180;
	float decimal_result = ((float)adc_number/1023)*MAX_SECONDS;
 278:	bc 01       	movw	r22, r24
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 5f 03 	call	0x6be	; 0x6be <__floatunsisf>
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 ec       	ldi	r19, 0xC0	; 192
 286:	4f e7       	ldi	r20, 0x7F	; 127
 288:	54 e4       	ldi	r21, 0x44	; 68
 28a:	0e 94 be 02 	call	0x57c	; 0x57c <__divsf3>
 28e:	20 e0       	ldi	r18, 0x00	; 0
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	44 e3       	ldi	r20, 0x34	; 52
 294:	53 e4       	ldi	r21, 0x43	; 67
 296:	0e 94 ed 03 	call	0x7da	; 0x7da <__mulsf3>
	return (uint8_t)decimal_result;
 29a:	0e 94 30 03 	call	0x660	; 0x660 <__fixunssfsi>
 29e:	86 2f       	mov	r24, r22
}
 2a0:	08 95       	ret

000002a2 <debounce>:

uint8_t debounce(uint8_t button_pin) {
	if (bit_is_clear(PINB, button_pin)) {      /* button is pressed now */
 2a2:	23 b1       	in	r18, 0x03	; 3
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	08 2e       	mov	r0, r24
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <debounce+0xc>
 2aa:	35 95       	asr	r19
 2ac:	27 95       	ror	r18
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <debounce+0x8>
 2b2:	20 fd       	sbrc	r18, 0
 2b4:	12 c0       	rjmp	.+36     	; 0x2da <debounce+0x38>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b6:	ef e9       	ldi	r30, 0x9F	; 159
 2b8:	ff e0       	ldi	r31, 0x0F	; 15
 2ba:	31 97       	sbiw	r30, 0x01	; 1
 2bc:	f1 f7       	brne	.-4      	; 0x2ba <debounce+0x18>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <debounce+0x1e>
 2c0:	00 00       	nop
		_delay_us(DEBOUNCE_TIME);
		if (bit_is_clear(PINB, button_pin)) {            /* still pressed */
 2c2:	23 b1       	in	r18, 0x03	; 3
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	a9 01       	movw	r20, r18
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <debounce+0x2c>
 2ca:	55 95       	asr	r21
 2cc:	47 95       	ror	r20
 2ce:	8a 95       	dec	r24
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <debounce+0x28>
 2d2:	40 fd       	sbrc	r20, 0
 2d4:	04 c0       	rjmp	.+8      	; 0x2de <debounce+0x3c>
			return 1;
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	08 95       	ret
		}
	}
	return 0;
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	08 95       	ret
 2de:	80 e0       	ldi	r24, 0x00	; 0
}
 2e0:	08 95       	ret

000002e2 <get_button_status>:
uint8_t get_button_status(uint8_t button)
{
	if (debounce(button)) {                        /* debounced button press */
 2e2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <debounce>
 2e6:	88 23       	and	r24, r24
 2e8:	41 f0       	breq	.+16     	; 0x2fa <get_button_status+0x18>
		if (buttonWasPressed == 0) {     /* but wasn't last time through */
 2ea:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <buttonWasPressed>
 2ee:	81 11       	cpse	r24, r1
 2f0:	07 c0       	rjmp	.+14     	; 0x300 <get_button_status+0x1e>
			buttonWasPressed = 1;                      /* update the state */
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <buttonWasPressed>
			return 1;
 2f8:	08 95       	ret
		}
	}
	else {                                /* button is not pressed now */
		buttonWasPressed = 0;                        /* update the state */
 2fa:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <buttonWasPressed>
		return 0;
 2fe:	08 95       	ret
	}
}
 300:	08 95       	ret

00000302 <yellow_LED_on>:




void yellow_LED_on(){
	R_Y_LED_PORT |= (1<<YELLOW_LED);
 302:	8b b1       	in	r24, 0x0b	; 11
 304:	88 60       	ori	r24, 0x08	; 8
 306:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<RED_LED);
 308:	8b b1       	in	r24, 0x0b	; 11
 30a:	8b 7f       	andi	r24, 0xFB	; 251
 30c:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 30e:	85 b1       	in	r24, 0x05	; 5
 310:	8e 7f       	andi	r24, 0xFE	; 254
 312:	85 b9       	out	0x05, r24	; 5
 314:	08 95       	ret

00000316 <green_LED_on>:
}

void green_LED_on(){
	G_LED_PORT |= (1<<GREEN_LED);
 316:	85 b1       	in	r24, 0x05	; 5
 318:	81 60       	ori	r24, 0x01	; 1
 31a:	85 b9       	out	0x05, r24	; 5
	R_Y_LED_PORT &= ~(1<<RED_LED);
 31c:	8b b1       	in	r24, 0x0b	; 11
 31e:	8b 7f       	andi	r24, 0xFB	; 251
 320:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 322:	8b b1       	in	r24, 0x0b	; 11
 324:	87 7f       	andi	r24, 0xF7	; 247
 326:	8b b9       	out	0x0b, r24	; 11
 328:	08 95       	ret

0000032a <red_LED_on>:
}

void red_LED_on(){
	R_Y_LED_PORT |= (1<<RED_LED);
 32a:	8b b1       	in	r24, 0x0b	; 11
 32c:	84 60       	ori	r24, 0x04	; 4
 32e:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 330:	8b b1       	in	r24, 0x0b	; 11
 332:	87 7f       	andi	r24, 0xF7	; 247
 334:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 336:	85 b1       	in	r24, 0x05	; 5
 338:	8e 7f       	andi	r24, 0xFE	; 254
 33a:	85 b9       	out	0x05, r24	; 5
 33c:	08 95       	ret

0000033e <main>:
}



int main()
{	
 33e:	cf 93       	push	r28
 340:	df 93       	push	r29
 342:	cd b7       	in	r28, 0x3d	; 61
 344:	de b7       	in	r29, 0x3e	; 62
 346:	2a 97       	sbiw	r28, 0x0a	; 10
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	f8 94       	cli
 34c:	de bf       	out	0x3e, r29	; 62
 34e:	0f be       	out	0x3f, r0	; 63
 350:	cd bf       	out	0x3d, r28	; 61
	ADC_init();
 352:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	timer_init();
 356:	0e 94 5e 00 	call	0xbc	; 0xbc <timer_init>
	button_init();
 35a:	0e 94 72 00 	call	0xe4	; 0xe4 <button_init>
	LCD_Init(); //Activate LCD
 35e:	0e 94 b8 00 	call	0x170	; 0x170 <LCD_Init>
	
	LCD_Print("Set potmeter");	//Begin writing at Line 1, Position 1
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36a:	2f ef       	ldi	r18, 0xFF	; 255
 36c:	87 ea       	ldi	r24, 0xA7	; 167
 36e:	91 e6       	ldi	r25, 0x61	; 97
 370:	21 50       	subi	r18, 0x01	; 1
 372:	80 40       	sbci	r24, 0x00	; 0
 374:	90 40       	sbci	r25, 0x00	; 0
 376:	e1 f7       	brne	.-8      	; 0x370 <main+0x32>
 378:	00 c0       	rjmp	.+0      	; 0x37a <main+0x3c>
 37a:	00 00       	nop
	_delay_ms(2000);
	green_LED_on();
 37c:	0e 94 8b 01 	call	0x316	; 0x316 <green_LED_on>
 380:	2f ef       	ldi	r18, 0xFF	; 255
 382:	83 ed       	ldi	r24, 0xD3	; 211
 384:	90 e3       	ldi	r25, 0x30	; 48
 386:	21 50       	subi	r18, 0x01	; 1
 388:	80 40       	sbci	r24, 0x00	; 0
 38a:	90 40       	sbci	r25, 0x00	; 0
 38c:	e1 f7       	brne	.-8      	; 0x386 <main+0x48>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <main+0x52>
 390:	00 00       	nop
	_delay_ms(1000);
	yellow_LED_on();
 392:	0e 94 81 01 	call	0x302	; 0x302 <yellow_LED_on>
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	83 ed       	ldi	r24, 0xD3	; 211
 39a:	90 e3       	ldi	r25, 0x30	; 48
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x5e>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x68>
 3a6:	00 00       	nop
	_delay_ms(1000);
	red_LED_on();
 3a8:	0e 94 95 01 	call	0x32a	; 0x32a <red_LED_on>
 3ac:	2f ef       	ldi	r18, 0xFF	; 255
 3ae:	83 ed       	ldi	r24, 0xD3	; 211
 3b0:	90 e3       	ldi	r25, 0x30	; 48
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	80 40       	sbci	r24, 0x00	; 0
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <main+0x74>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <main+0x7e>
 3bc:	00 00       	nop
	_delay_ms(1000);
	LCD_Clear();
 3be:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
 3c2:	3b c0       	rjmp	.+118    	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
	while(1) {
		
		while (timer_running == 0 && start_pressed == 0)
		{
			
			cli(); // Disable interrupts
 3c4:	f8 94       	cli
			volatile uint16_t pot_value = read_ADC(POT_PIN);
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	0e 94 27 01 	call	0x24e	; 0x24e <read_ADC>
 3cc:	9a 87       	std	Y+10, r25	; 0x0a
 3ce:	89 87       	std	Y+9, r24	; 0x09
			seconds = ADC_to_seconds(pot_value);
 3d0:	89 85       	ldd	r24, Y+9	; 0x09
 3d2:	9a 85       	ldd	r25, Y+10	; 0x0a
 3d4:	0e 94 3c 01 	call	0x278	; 0x278 <ADC_to_seconds>
 3d8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
 3dc:	2f ef       	ldi	r18, 0xFF	; 255
 3de:	83 ec       	ldi	r24, 0xC3	; 195
 3e0:	99 e0       	ldi	r25, 0x09	; 9
 3e2:	21 50       	subi	r18, 0x01	; 1
 3e4:	80 40       	sbci	r24, 0x00	; 0
 3e6:	90 40       	sbci	r25, 0x00	; 0
 3e8:	e1 f7       	brne	.-8      	; 0x3e2 <main+0xa4>
 3ea:	00 c0       	rjmp	.+0      	; 0x3ec <main+0xae>
 3ec:	00 00       	nop
			
			_delay_ms(200);
			
			char sec [8];
			itoa(seconds, sec, 10);
 3ee:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 3f2:	4a e0       	ldi	r20, 0x0A	; 10
 3f4:	50 e0       	ldi	r21, 0x00	; 0
 3f6:	be 01       	movw	r22, r28
 3f8:	6f 5f       	subi	r22, 0xFF	; 255
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <itoa>
			LCD_Print(sec);
 402:	ce 01       	movw	r24, r28
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
 40a:	2f ef       	ldi	r18, 0xFF	; 255
 40c:	83 ec       	ldi	r24, 0xC3	; 195
 40e:	99 e0       	ldi	r25, 0x09	; 9
 410:	21 50       	subi	r18, 0x01	; 1
 412:	80 40       	sbci	r24, 0x00	; 0
 414:	90 40       	sbci	r25, 0x00	; 0
 416:	e1 f7       	brne	.-8      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 418:	00 c0       	rjmp	.+0      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 41a:	00 00       	nop
			_delay_ms(200);
			LCD_Clear();
 41c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>

// 			
			start_pressed = get_button_status(START_PIN);
 420:	82 e0       	ldi	r24, 0x02	; 2
 422:	0e 94 71 01 	call	0x2e2	; 0x2e2 <get_button_status>
 426:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <start_pressed>
// 			
			if (start_pressed)
 42a:	88 23       	and	r24, r24
 42c:	31 f0       	breq	.+12     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
			{
// 				LCD_Clear();
// 				LCD_Print(sec);
				timer_running = 1;
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timer_running>
				green_LED_on();
 434:	0e 94 8b 01 	call	0x316	; 0x316 <green_LED_on>
				sei();	// enable interrupts, also starts the countdown
 438:	78 94       	sei
	_delay_ms(1000);
	LCD_Clear();

	while(1) {
		
		while (timer_running == 0 && start_pressed == 0)
 43a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timer_running>
 43e:	81 11       	cpse	r24, r1
 440:	fc cf       	rjmp	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 442:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <start_pressed>
 446:	81 11       	cpse	r24, r1
 448:	f8 cf       	rjmp	.-16     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 44a:	bc cf       	rjmp	.-136    	; 0x3c4 <main+0x86>

0000044c <__vector_11>:
}
}
}

ISR (TIMER1_COMPA_vect) // action to be done every 1 sec
{
 44c:	1f 92       	push	r1
 44e:	0f 92       	push	r0
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	2f 93       	push	r18
 458:	3f 93       	push	r19
 45a:	4f 93       	push	r20
 45c:	5f 93       	push	r21
 45e:	6f 93       	push	r22
 460:	7f 93       	push	r23
 462:	8f 93       	push	r24
 464:	9f 93       	push	r25
 466:	af 93       	push	r26
 468:	bf 93       	push	r27
 46a:	ef 93       	push	r30
 46c:	ff 93       	push	r31
 46e:	cf 93       	push	r28
 470:	df 93       	push	r29
 472:	cd b7       	in	r28, 0x3d	; 61
 474:	de b7       	in	r29, 0x3e	; 62
 476:	28 97       	sbiw	r28, 0x08	; 8
 478:	de bf       	out	0x3e, r29	; 62
 47a:	cd bf       	out	0x3d, r28	; 61
	seconds--; // Subtracts 1 from the timer value
 47c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 480:	81 50       	subi	r24, 0x01	; 1
 482:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
	if (seconds == 0)
 486:	81 11       	cpse	r24, r1
 488:	16 c0       	rjmp	.+44     	; 0x4b6 <__vector_11+0x6a>
	{
	//	LCD_Print(seconds);
		red_LED_on();
 48a:	0e 94 95 01 	call	0x32a	; 0x32a <red_LED_on>
		//buzzer();
		LCD_Print("Finished");
 48e:	8d e0       	ldi	r24, 0x0D	; 13
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
 496:	2f ef       	ldi	r18, 0xFF	; 255
 498:	87 ea       	ldi	r24, 0xA7	; 167
 49a:	91 e6       	ldi	r25, 0x61	; 97
 49c:	21 50       	subi	r18, 0x01	; 1
 49e:	80 40       	sbci	r24, 0x00	; 0
 4a0:	90 40       	sbci	r25, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <__vector_11+0x50>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__vector_11+0x5a>
 4a6:	00 00       	nop
		_delay_ms(2000);
		LCD_Clear();
 4a8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
		timer_running = 0;
 4ac:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <timer_running>
		start_pressed = 0;
 4b0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <start_pressed>
 4b4:	19 c0       	rjmp	.+50     	; 0x4e8 <__vector_11+0x9c>
	}
	else
	{
		LCD_Clear();
 4b6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
		char sec [8];
		itoa(seconds, sec, 10);
 4ba:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 4be:	4a e0       	ldi	r20, 0x0A	; 10
 4c0:	50 e0       	ldi	r21, 0x00	; 0
 4c2:	be 01       	movw	r22, r28
 4c4:	6f 5f       	subi	r22, 0xFF	; 255
 4c6:	7f 4f       	sbci	r23, 0xFF	; 255
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <itoa>
//		LCD_Print("Time left");
		LCD_Print(sec);
 4ce:	ce 01       	movw	r24, r28
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
 4d6:	2f ef       	ldi	r18, 0xFF	; 255
 4d8:	81 ee       	ldi	r24, 0xE1	; 225
 4da:	94 e0       	ldi	r25, 0x04	; 4
 4dc:	21 50       	subi	r18, 0x01	; 1
 4de:	80 40       	sbci	r24, 0x00	; 0
 4e0:	90 40       	sbci	r25, 0x00	; 0
 4e2:	e1 f7       	brne	.-8      	; 0x4dc <__vector_11+0x90>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <__vector_11+0x9a>
 4e6:	00 00       	nop
		_delay_ms(100);
		
	}
}
 4e8:	28 96       	adiw	r28, 0x08	; 8
 4ea:	0f b6       	in	r0, 0x3f	; 63
 4ec:	f8 94       	cli
 4ee:	de bf       	out	0x3e, r29	; 62
 4f0:	0f be       	out	0x3f, r0	; 63
 4f2:	cd bf       	out	0x3d, r28	; 61
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	ff 91       	pop	r31
 4fa:	ef 91       	pop	r30
 4fc:	bf 91       	pop	r27
 4fe:	af 91       	pop	r26
 500:	9f 91       	pop	r25
 502:	8f 91       	pop	r24
 504:	7f 91       	pop	r23
 506:	6f 91       	pop	r22
 508:	5f 91       	pop	r21
 50a:	4f 91       	pop	r20
 50c:	3f 91       	pop	r19
 50e:	2f 91       	pop	r18
 510:	0f 90       	pop	r0
 512:	0f be       	out	0x3f, r0	; 63
 514:	0f 90       	pop	r0
 516:	1f 90       	pop	r1
 518:	18 95       	reti

0000051a <__vector_3>:


ISR (PCINT0_vect)
{
 51a:	1f 92       	push	r1
 51c:	0f 92       	push	r0
 51e:	0f b6       	in	r0, 0x3f	; 63
 520:	0f 92       	push	r0
 522:	11 24       	eor	r1, r1
 524:	2f 93       	push	r18
 526:	3f 93       	push	r19
 528:	4f 93       	push	r20
 52a:	5f 93       	push	r21
 52c:	6f 93       	push	r22
 52e:	7f 93       	push	r23
 530:	8f 93       	push	r24
 532:	9f 93       	push	r25
 534:	af 93       	push	r26
 536:	bf 93       	push	r27
 538:	ef 93       	push	r30
 53a:	ff 93       	push	r31
	yellow_LED_on();
 53c:	0e 94 81 01 	call	0x302	; 0x302 <yellow_LED_on>
	LCD_Clear();
 540:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Clear>
	LCD_Print("Pause!");
 544:	86 e1       	ldi	r24, 0x16	; 22
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Print>
	while(get_button_status(START_PIN) == 0) {} // wait for start button to be pressed
 54c:	82 e0       	ldi	r24, 0x02	; 2
 54e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <get_button_status>
 552:	88 23       	and	r24, r24
 554:	d9 f3       	breq	.-10     	; 0x54c <__vector_3+0x32>
	green_LED_on();
 556:	0e 94 8b 01 	call	0x316	; 0x316 <green_LED_on>

 55a:	ff 91       	pop	r31
 55c:	ef 91       	pop	r30
 55e:	bf 91       	pop	r27
 560:	af 91       	pop	r26
 562:	9f 91       	pop	r25
 564:	8f 91       	pop	r24
 566:	7f 91       	pop	r23
 568:	6f 91       	pop	r22
 56a:	5f 91       	pop	r21
 56c:	4f 91       	pop	r20
 56e:	3f 91       	pop	r19
 570:	2f 91       	pop	r18
 572:	0f 90       	pop	r0
 574:	0f be       	out	0x3f, r0	; 63
 576:	0f 90       	pop	r0
 578:	1f 90       	pop	r1
 57a:	18 95       	reti

0000057c <__divsf3>:
 57c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__divsf3x>
 580:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_round>
 584:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_pscB>
 588:	58 f0       	brcs	.+22     	; 0x5a0 <__divsf3+0x24>
 58a:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_pscA>
 58e:	40 f0       	brcs	.+16     	; 0x5a0 <__divsf3+0x24>
 590:	29 f4       	brne	.+10     	; 0x59c <__divsf3+0x20>
 592:	5f 3f       	cpi	r21, 0xFF	; 255
 594:	29 f0       	breq	.+10     	; 0x5a0 <__divsf3+0x24>
 596:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 59a:	51 11       	cpse	r21, r1
 59c:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>
 5a0:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_nan>

000005a4 <__divsf3x>:
 5a4:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_split3>
 5a8:	68 f3       	brcs	.-38     	; 0x584 <__divsf3+0x8>

000005aa <__divsf3_pse>:
 5aa:	99 23       	and	r25, r25
 5ac:	b1 f3       	breq	.-20     	; 0x59a <__divsf3+0x1e>
 5ae:	55 23       	and	r21, r21
 5b0:	91 f3       	breq	.-28     	; 0x596 <__divsf3+0x1a>
 5b2:	95 1b       	sub	r25, r21
 5b4:	55 0b       	sbc	r21, r21
 5b6:	bb 27       	eor	r27, r27
 5b8:	aa 27       	eor	r26, r26
 5ba:	62 17       	cp	r22, r18
 5bc:	73 07       	cpc	r23, r19
 5be:	84 07       	cpc	r24, r20
 5c0:	38 f0       	brcs	.+14     	; 0x5d0 <__divsf3_pse+0x26>
 5c2:	9f 5f       	subi	r25, 0xFF	; 255
 5c4:	5f 4f       	sbci	r21, 0xFF	; 255
 5c6:	22 0f       	add	r18, r18
 5c8:	33 1f       	adc	r19, r19
 5ca:	44 1f       	adc	r20, r20
 5cc:	aa 1f       	adc	r26, r26
 5ce:	a9 f3       	breq	.-22     	; 0x5ba <__divsf3_pse+0x10>
 5d0:	35 d0       	rcall	.+106    	; 0x63c <__divsf3_pse+0x92>
 5d2:	0e 2e       	mov	r0, r30
 5d4:	3a f0       	brmi	.+14     	; 0x5e4 <__divsf3_pse+0x3a>
 5d6:	e0 e8       	ldi	r30, 0x80	; 128
 5d8:	32 d0       	rcall	.+100    	; 0x63e <__divsf3_pse+0x94>
 5da:	91 50       	subi	r25, 0x01	; 1
 5dc:	50 40       	sbci	r21, 0x00	; 0
 5de:	e6 95       	lsr	r30
 5e0:	00 1c       	adc	r0, r0
 5e2:	ca f7       	brpl	.-14     	; 0x5d6 <__divsf3_pse+0x2c>
 5e4:	2b d0       	rcall	.+86     	; 0x63c <__divsf3_pse+0x92>
 5e6:	fe 2f       	mov	r31, r30
 5e8:	29 d0       	rcall	.+82     	; 0x63c <__divsf3_pse+0x92>
 5ea:	66 0f       	add	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	bb 1f       	adc	r27, r27
 5f2:	26 17       	cp	r18, r22
 5f4:	37 07       	cpc	r19, r23
 5f6:	48 07       	cpc	r20, r24
 5f8:	ab 07       	cpc	r26, r27
 5fa:	b0 e8       	ldi	r27, 0x80	; 128
 5fc:	09 f0       	breq	.+2      	; 0x600 <__divsf3_pse+0x56>
 5fe:	bb 0b       	sbc	r27, r27
 600:	80 2d       	mov	r24, r0
 602:	bf 01       	movw	r22, r30
 604:	ff 27       	eor	r31, r31
 606:	93 58       	subi	r25, 0x83	; 131
 608:	5f 4f       	sbci	r21, 0xFF	; 255
 60a:	3a f0       	brmi	.+14     	; 0x61a <__divsf3_pse+0x70>
 60c:	9e 3f       	cpi	r25, 0xFE	; 254
 60e:	51 05       	cpc	r21, r1
 610:	78 f0       	brcs	.+30     	; 0x630 <__divsf3_pse+0x86>
 612:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 616:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>
 61a:	5f 3f       	cpi	r21, 0xFF	; 255
 61c:	e4 f3       	brlt	.-8      	; 0x616 <__divsf3_pse+0x6c>
 61e:	98 3e       	cpi	r25, 0xE8	; 232
 620:	d4 f3       	brlt	.-12     	; 0x616 <__divsf3_pse+0x6c>
 622:	86 95       	lsr	r24
 624:	77 95       	ror	r23
 626:	67 95       	ror	r22
 628:	b7 95       	ror	r27
 62a:	f7 95       	ror	r31
 62c:	9f 5f       	subi	r25, 0xFF	; 255
 62e:	c9 f7       	brne	.-14     	; 0x622 <__divsf3_pse+0x78>
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret
 63c:	e1 e0       	ldi	r30, 0x01	; 1
 63e:	66 0f       	add	r22, r22
 640:	77 1f       	adc	r23, r23
 642:	88 1f       	adc	r24, r24
 644:	bb 1f       	adc	r27, r27
 646:	62 17       	cp	r22, r18
 648:	73 07       	cpc	r23, r19
 64a:	84 07       	cpc	r24, r20
 64c:	ba 07       	cpc	r27, r26
 64e:	20 f0       	brcs	.+8      	; 0x658 <__divsf3_pse+0xae>
 650:	62 1b       	sub	r22, r18
 652:	73 0b       	sbc	r23, r19
 654:	84 0b       	sbc	r24, r20
 656:	ba 0b       	sbc	r27, r26
 658:	ee 1f       	adc	r30, r30
 65a:	88 f7       	brcc	.-30     	; 0x63e <__divsf3_pse+0x94>
 65c:	e0 95       	com	r30
 65e:	08 95       	ret

00000660 <__fixunssfsi>:
 660:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_splitA>
 664:	88 f0       	brcs	.+34     	; 0x688 <__fixunssfsi+0x28>
 666:	9f 57       	subi	r25, 0x7F	; 127
 668:	98 f0       	brcs	.+38     	; 0x690 <__fixunssfsi+0x30>
 66a:	b9 2f       	mov	r27, r25
 66c:	99 27       	eor	r25, r25
 66e:	b7 51       	subi	r27, 0x17	; 23
 670:	b0 f0       	brcs	.+44     	; 0x69e <__fixunssfsi+0x3e>
 672:	e1 f0       	breq	.+56     	; 0x6ac <__fixunssfsi+0x4c>
 674:	66 0f       	add	r22, r22
 676:	77 1f       	adc	r23, r23
 678:	88 1f       	adc	r24, r24
 67a:	99 1f       	adc	r25, r25
 67c:	1a f0       	brmi	.+6      	; 0x684 <__fixunssfsi+0x24>
 67e:	ba 95       	dec	r27
 680:	c9 f7       	brne	.-14     	; 0x674 <__fixunssfsi+0x14>
 682:	14 c0       	rjmp	.+40     	; 0x6ac <__fixunssfsi+0x4c>
 684:	b1 30       	cpi	r27, 0x01	; 1
 686:	91 f0       	breq	.+36     	; 0x6ac <__fixunssfsi+0x4c>
 688:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_zero>
 68c:	b1 e0       	ldi	r27, 0x01	; 1
 68e:	08 95       	ret
 690:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_zero>
 694:	67 2f       	mov	r22, r23
 696:	78 2f       	mov	r23, r24
 698:	88 27       	eor	r24, r24
 69a:	b8 5f       	subi	r27, 0xF8	; 248
 69c:	39 f0       	breq	.+14     	; 0x6ac <__fixunssfsi+0x4c>
 69e:	b9 3f       	cpi	r27, 0xF9	; 249
 6a0:	cc f3       	brlt	.-14     	; 0x694 <__fixunssfsi+0x34>
 6a2:	86 95       	lsr	r24
 6a4:	77 95       	ror	r23
 6a6:	67 95       	ror	r22
 6a8:	b3 95       	inc	r27
 6aa:	d9 f7       	brne	.-10     	; 0x6a2 <__fixunssfsi+0x42>
 6ac:	3e f4       	brtc	.+14     	; 0x6bc <__fixunssfsi+0x5c>
 6ae:	90 95       	com	r25
 6b0:	80 95       	com	r24
 6b2:	70 95       	com	r23
 6b4:	61 95       	neg	r22
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255
 6bc:	08 95       	ret

000006be <__floatunsisf>:
 6be:	e8 94       	clt
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <__floatsisf+0x12>

000006c2 <__floatsisf>:
 6c2:	97 fb       	bst	r25, 7
 6c4:	3e f4       	brtc	.+14     	; 0x6d4 <__floatsisf+0x12>
 6c6:	90 95       	com	r25
 6c8:	80 95       	com	r24
 6ca:	70 95       	com	r23
 6cc:	61 95       	neg	r22
 6ce:	7f 4f       	sbci	r23, 0xFF	; 255
 6d0:	8f 4f       	sbci	r24, 0xFF	; 255
 6d2:	9f 4f       	sbci	r25, 0xFF	; 255
 6d4:	99 23       	and	r25, r25
 6d6:	a9 f0       	breq	.+42     	; 0x702 <__floatsisf+0x40>
 6d8:	f9 2f       	mov	r31, r25
 6da:	96 e9       	ldi	r25, 0x96	; 150
 6dc:	bb 27       	eor	r27, r27
 6de:	93 95       	inc	r25
 6e0:	f6 95       	lsr	r31
 6e2:	87 95       	ror	r24
 6e4:	77 95       	ror	r23
 6e6:	67 95       	ror	r22
 6e8:	b7 95       	ror	r27
 6ea:	f1 11       	cpse	r31, r1
 6ec:	f8 cf       	rjmp	.-16     	; 0x6de <__floatsisf+0x1c>
 6ee:	fa f4       	brpl	.+62     	; 0x72e <__floatsisf+0x6c>
 6f0:	bb 0f       	add	r27, r27
 6f2:	11 f4       	brne	.+4      	; 0x6f8 <__floatsisf+0x36>
 6f4:	60 ff       	sbrs	r22, 0
 6f6:	1b c0       	rjmp	.+54     	; 0x72e <__floatsisf+0x6c>
 6f8:	6f 5f       	subi	r22, 0xFF	; 255
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8f 4f       	sbci	r24, 0xFF	; 255
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	16 c0       	rjmp	.+44     	; 0x72e <__floatsisf+0x6c>
 702:	88 23       	and	r24, r24
 704:	11 f0       	breq	.+4      	; 0x70a <__floatsisf+0x48>
 706:	96 e9       	ldi	r25, 0x96	; 150
 708:	11 c0       	rjmp	.+34     	; 0x72c <__floatsisf+0x6a>
 70a:	77 23       	and	r23, r23
 70c:	21 f0       	breq	.+8      	; 0x716 <__floatsisf+0x54>
 70e:	9e e8       	ldi	r25, 0x8E	; 142
 710:	87 2f       	mov	r24, r23
 712:	76 2f       	mov	r23, r22
 714:	05 c0       	rjmp	.+10     	; 0x720 <__floatsisf+0x5e>
 716:	66 23       	and	r22, r22
 718:	71 f0       	breq	.+28     	; 0x736 <__floatsisf+0x74>
 71a:	96 e8       	ldi	r25, 0x86	; 134
 71c:	86 2f       	mov	r24, r22
 71e:	70 e0       	ldi	r23, 0x00	; 0
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	2a f0       	brmi	.+10     	; 0x72e <__floatsisf+0x6c>
 724:	9a 95       	dec	r25
 726:	66 0f       	add	r22, r22
 728:	77 1f       	adc	r23, r23
 72a:	88 1f       	adc	r24, r24
 72c:	da f7       	brpl	.-10     	; 0x724 <__floatsisf+0x62>
 72e:	88 0f       	add	r24, r24
 730:	96 95       	lsr	r25
 732:	87 95       	ror	r24
 734:	97 f9       	bld	r25, 7
 736:	08 95       	ret

00000738 <__fp_inf>:
 738:	97 f9       	bld	r25, 7
 73a:	9f 67       	ori	r25, 0x7F	; 127
 73c:	80 e8       	ldi	r24, 0x80	; 128
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	60 e0       	ldi	r22, 0x00	; 0
 742:	08 95       	ret

00000744 <__fp_nan>:
 744:	9f ef       	ldi	r25, 0xFF	; 255
 746:	80 ec       	ldi	r24, 0xC0	; 192
 748:	08 95       	ret

0000074a <__fp_pscA>:
 74a:	00 24       	eor	r0, r0
 74c:	0a 94       	dec	r0
 74e:	16 16       	cp	r1, r22
 750:	17 06       	cpc	r1, r23
 752:	18 06       	cpc	r1, r24
 754:	09 06       	cpc	r0, r25
 756:	08 95       	ret

00000758 <__fp_pscB>:
 758:	00 24       	eor	r0, r0
 75a:	0a 94       	dec	r0
 75c:	12 16       	cp	r1, r18
 75e:	13 06       	cpc	r1, r19
 760:	14 06       	cpc	r1, r20
 762:	05 06       	cpc	r0, r21
 764:	08 95       	ret

00000766 <__fp_round>:
 766:	09 2e       	mov	r0, r25
 768:	03 94       	inc	r0
 76a:	00 0c       	add	r0, r0
 76c:	11 f4       	brne	.+4      	; 0x772 <__fp_round+0xc>
 76e:	88 23       	and	r24, r24
 770:	52 f0       	brmi	.+20     	; 0x786 <__fp_round+0x20>
 772:	bb 0f       	add	r27, r27
 774:	40 f4       	brcc	.+16     	; 0x786 <__fp_round+0x20>
 776:	bf 2b       	or	r27, r31
 778:	11 f4       	brne	.+4      	; 0x77e <__fp_round+0x18>
 77a:	60 ff       	sbrs	r22, 0
 77c:	04 c0       	rjmp	.+8      	; 0x786 <__fp_round+0x20>
 77e:	6f 5f       	subi	r22, 0xFF	; 255
 780:	7f 4f       	sbci	r23, 0xFF	; 255
 782:	8f 4f       	sbci	r24, 0xFF	; 255
 784:	9f 4f       	sbci	r25, 0xFF	; 255
 786:	08 95       	ret

00000788 <__fp_split3>:
 788:	57 fd       	sbrc	r21, 7
 78a:	90 58       	subi	r25, 0x80	; 128
 78c:	44 0f       	add	r20, r20
 78e:	55 1f       	adc	r21, r21
 790:	59 f0       	breq	.+22     	; 0x7a8 <__fp_splitA+0x10>
 792:	5f 3f       	cpi	r21, 0xFF	; 255
 794:	71 f0       	breq	.+28     	; 0x7b2 <__fp_splitA+0x1a>
 796:	47 95       	ror	r20

00000798 <__fp_splitA>:
 798:	88 0f       	add	r24, r24
 79a:	97 fb       	bst	r25, 7
 79c:	99 1f       	adc	r25, r25
 79e:	61 f0       	breq	.+24     	; 0x7b8 <__fp_splitA+0x20>
 7a0:	9f 3f       	cpi	r25, 0xFF	; 255
 7a2:	79 f0       	breq	.+30     	; 0x7c2 <__fp_splitA+0x2a>
 7a4:	87 95       	ror	r24
 7a6:	08 95       	ret
 7a8:	12 16       	cp	r1, r18
 7aa:	13 06       	cpc	r1, r19
 7ac:	14 06       	cpc	r1, r20
 7ae:	55 1f       	adc	r21, r21
 7b0:	f2 cf       	rjmp	.-28     	; 0x796 <__fp_split3+0xe>
 7b2:	46 95       	lsr	r20
 7b4:	f1 df       	rcall	.-30     	; 0x798 <__fp_splitA>
 7b6:	08 c0       	rjmp	.+16     	; 0x7c8 <__fp_splitA+0x30>
 7b8:	16 16       	cp	r1, r22
 7ba:	17 06       	cpc	r1, r23
 7bc:	18 06       	cpc	r1, r24
 7be:	99 1f       	adc	r25, r25
 7c0:	f1 cf       	rjmp	.-30     	; 0x7a4 <__fp_splitA+0xc>
 7c2:	86 95       	lsr	r24
 7c4:	71 05       	cpc	r23, r1
 7c6:	61 05       	cpc	r22, r1
 7c8:	08 94       	sec
 7ca:	08 95       	ret

000007cc <__fp_zero>:
 7cc:	e8 94       	clt

000007ce <__fp_szero>:
 7ce:	bb 27       	eor	r27, r27
 7d0:	66 27       	eor	r22, r22
 7d2:	77 27       	eor	r23, r23
 7d4:	cb 01       	movw	r24, r22
 7d6:	97 f9       	bld	r25, 7
 7d8:	08 95       	ret

000007da <__mulsf3>:
 7da:	0e 94 00 04 	call	0x800	; 0x800 <__mulsf3x>
 7de:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_round>
 7e2:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_pscA>
 7e6:	38 f0       	brcs	.+14     	; 0x7f6 <__mulsf3+0x1c>
 7e8:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_pscB>
 7ec:	20 f0       	brcs	.+8      	; 0x7f6 <__mulsf3+0x1c>
 7ee:	95 23       	and	r25, r21
 7f0:	11 f0       	breq	.+4      	; 0x7f6 <__mulsf3+0x1c>
 7f2:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 7f6:	0c 94 a2 03 	jmp	0x744	; 0x744 <__fp_nan>
 7fa:	11 24       	eor	r1, r1
 7fc:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>

00000800 <__mulsf3x>:
 800:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_split3>
 804:	70 f3       	brcs	.-36     	; 0x7e2 <__mulsf3+0x8>

00000806 <__mulsf3_pse>:
 806:	95 9f       	mul	r25, r21
 808:	c1 f3       	breq	.-16     	; 0x7fa <__mulsf3+0x20>
 80a:	95 0f       	add	r25, r21
 80c:	50 e0       	ldi	r21, 0x00	; 0
 80e:	55 1f       	adc	r21, r21
 810:	62 9f       	mul	r22, r18
 812:	f0 01       	movw	r30, r0
 814:	72 9f       	mul	r23, r18
 816:	bb 27       	eor	r27, r27
 818:	f0 0d       	add	r31, r0
 81a:	b1 1d       	adc	r27, r1
 81c:	63 9f       	mul	r22, r19
 81e:	aa 27       	eor	r26, r26
 820:	f0 0d       	add	r31, r0
 822:	b1 1d       	adc	r27, r1
 824:	aa 1f       	adc	r26, r26
 826:	64 9f       	mul	r22, r20
 828:	66 27       	eor	r22, r22
 82a:	b0 0d       	add	r27, r0
 82c:	a1 1d       	adc	r26, r1
 82e:	66 1f       	adc	r22, r22
 830:	82 9f       	mul	r24, r18
 832:	22 27       	eor	r18, r18
 834:	b0 0d       	add	r27, r0
 836:	a1 1d       	adc	r26, r1
 838:	62 1f       	adc	r22, r18
 83a:	73 9f       	mul	r23, r19
 83c:	b0 0d       	add	r27, r0
 83e:	a1 1d       	adc	r26, r1
 840:	62 1f       	adc	r22, r18
 842:	83 9f       	mul	r24, r19
 844:	a0 0d       	add	r26, r0
 846:	61 1d       	adc	r22, r1
 848:	22 1f       	adc	r18, r18
 84a:	74 9f       	mul	r23, r20
 84c:	33 27       	eor	r19, r19
 84e:	a0 0d       	add	r26, r0
 850:	61 1d       	adc	r22, r1
 852:	23 1f       	adc	r18, r19
 854:	84 9f       	mul	r24, r20
 856:	60 0d       	add	r22, r0
 858:	21 1d       	adc	r18, r1
 85a:	82 2f       	mov	r24, r18
 85c:	76 2f       	mov	r23, r22
 85e:	6a 2f       	mov	r22, r26
 860:	11 24       	eor	r1, r1
 862:	9f 57       	subi	r25, 0x7F	; 127
 864:	50 40       	sbci	r21, 0x00	; 0
 866:	9a f0       	brmi	.+38     	; 0x88e <__mulsf3_pse+0x88>
 868:	f1 f0       	breq	.+60     	; 0x8a6 <__mulsf3_pse+0xa0>
 86a:	88 23       	and	r24, r24
 86c:	4a f0       	brmi	.+18     	; 0x880 <__mulsf3_pse+0x7a>
 86e:	ee 0f       	add	r30, r30
 870:	ff 1f       	adc	r31, r31
 872:	bb 1f       	adc	r27, r27
 874:	66 1f       	adc	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	91 50       	subi	r25, 0x01	; 1
 87c:	50 40       	sbci	r21, 0x00	; 0
 87e:	a9 f7       	brne	.-22     	; 0x86a <__mulsf3_pse+0x64>
 880:	9e 3f       	cpi	r25, 0xFE	; 254
 882:	51 05       	cpc	r21, r1
 884:	80 f0       	brcs	.+32     	; 0x8a6 <__mulsf3_pse+0xa0>
 886:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_inf>
 88a:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_szero>
 88e:	5f 3f       	cpi	r21, 0xFF	; 255
 890:	e4 f3       	brlt	.-8      	; 0x88a <__mulsf3_pse+0x84>
 892:	98 3e       	cpi	r25, 0xE8	; 232
 894:	d4 f3       	brlt	.-12     	; 0x88a <__mulsf3_pse+0x84>
 896:	86 95       	lsr	r24
 898:	77 95       	ror	r23
 89a:	67 95       	ror	r22
 89c:	b7 95       	ror	r27
 89e:	f7 95       	ror	r31
 8a0:	e7 95       	ror	r30
 8a2:	9f 5f       	subi	r25, 0xFF	; 255
 8a4:	c1 f7       	brne	.-16     	; 0x896 <__mulsf3_pse+0x90>
 8a6:	fe 2b       	or	r31, r30
 8a8:	88 0f       	add	r24, r24
 8aa:	91 1d       	adc	r25, r1
 8ac:	96 95       	lsr	r25
 8ae:	87 95       	ror	r24
 8b0:	97 f9       	bld	r25, 7
 8b2:	08 95       	ret

000008b4 <itoa>:
 8b4:	45 32       	cpi	r20, 0x25	; 37
 8b6:	51 05       	cpc	r21, r1
 8b8:	20 f4       	brcc	.+8      	; 0x8c2 <itoa+0xe>
 8ba:	42 30       	cpi	r20, 0x02	; 2
 8bc:	10 f0       	brcs	.+4      	; 0x8c2 <itoa+0xe>
 8be:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__itoa_ncheck>
 8c2:	fb 01       	movw	r30, r22
 8c4:	10 82       	st	Z, r1
 8c6:	cb 01       	movw	r24, r22
 8c8:	08 95       	ret

000008ca <__itoa_ncheck>:
 8ca:	bb 27       	eor	r27, r27
 8cc:	4a 30       	cpi	r20, 0x0A	; 10
 8ce:	31 f4       	brne	.+12     	; 0x8dc <__itoa_ncheck+0x12>
 8d0:	99 23       	and	r25, r25
 8d2:	22 f4       	brpl	.+8      	; 0x8dc <__itoa_ncheck+0x12>
 8d4:	bd e2       	ldi	r27, 0x2D	; 45
 8d6:	90 95       	com	r25
 8d8:	81 95       	neg	r24
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__utoa_common>

000008e0 <__utoa_ncheck>:
 8e0:	bb 27       	eor	r27, r27

000008e2 <__utoa_common>:
 8e2:	fb 01       	movw	r30, r22
 8e4:	55 27       	eor	r21, r21
 8e6:	aa 27       	eor	r26, r26
 8e8:	88 0f       	add	r24, r24
 8ea:	99 1f       	adc	r25, r25
 8ec:	aa 1f       	adc	r26, r26
 8ee:	a4 17       	cp	r26, r20
 8f0:	10 f0       	brcs	.+4      	; 0x8f6 <__utoa_common+0x14>
 8f2:	a4 1b       	sub	r26, r20
 8f4:	83 95       	inc	r24
 8f6:	50 51       	subi	r21, 0x10	; 16
 8f8:	b9 f7       	brne	.-18     	; 0x8e8 <__utoa_common+0x6>
 8fa:	a0 5d       	subi	r26, 0xD0	; 208
 8fc:	aa 33       	cpi	r26, 0x3A	; 58
 8fe:	08 f0       	brcs	.+2      	; 0x902 <__stack+0x3>
 900:	a9 5d       	subi	r26, 0xD9	; 217
 902:	a1 93       	st	Z+, r26
 904:	00 97       	sbiw	r24, 0x00	; 0
 906:	79 f7       	brne	.-34     	; 0x8e6 <__utoa_common+0x4>
 908:	b1 11       	cpse	r27, r1
 90a:	b1 93       	st	Z+, r27
 90c:	11 92       	st	Z+, r1
 90e:	cb 01       	movw	r24, r22
 910:	0c 94 8a 04 	jmp	0x914	; 0x914 <strrev>

00000914 <strrev>:
 914:	dc 01       	movw	r26, r24
 916:	fc 01       	movw	r30, r24
 918:	67 2f       	mov	r22, r23
 91a:	71 91       	ld	r23, Z+
 91c:	77 23       	and	r23, r23
 91e:	e1 f7       	brne	.-8      	; 0x918 <strrev+0x4>
 920:	32 97       	sbiw	r30, 0x02	; 2
 922:	04 c0       	rjmp	.+8      	; 0x92c <strrev+0x18>
 924:	7c 91       	ld	r23, X
 926:	6d 93       	st	X+, r22
 928:	70 83       	st	Z, r23
 92a:	62 91       	ld	r22, -Z
 92c:	ae 17       	cp	r26, r30
 92e:	bf 07       	cpc	r27, r31
 930:	c8 f3       	brcs	.-14     	; 0x924 <strrev+0x10>
 932:	08 95       	ret

00000934 <_exit>:
 934:	f8 94       	cli

00000936 <__stop_program>:
 936:	ff cf       	rjmp	.-2      	; 0x936 <__stop_program>
