
prosjektfil_mikro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000980  00000a14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000980  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800134  00800134  00000a48  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012f8  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b4  00000000  00000000  00001e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000088d  00000000  00000000  00002744  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00002fd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cb  00000000  00000000  00003270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b91  00000000  00000000  0000383b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000043cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e8       	ldi	r30, 0x80	; 128
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 33       	cpi	r26, 0x34	; 52
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e3       	ldi	r26, 0x34	; 52
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 33       	cpi	r26, 0x38	; 56
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 36 02 	call	0x46c	; 0x46c <main>
  9e:	0c 94 be 04 	jmp	0x97c	; 0x97c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
		BUZZER_PORT = (1<<BUZZER_PIN);
		_delay_ms(1000);
		BUZZER_PORT = (0<<BUZZER_PIN);
		_delay_ms(500);
	}
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 68       	ori	r24, 0x87	; 135
  b8:	80 83       	st	Z, r24
  ba:	08 95       	ret

000000bc <USART_init>:
  bc:	87 e6       	ldi	r24, 0x67	; 103
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  c8:	88 e1       	ldi	r24, 0x18	; 24
  ca:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  ce:	08 95       	ret

000000d0 <timer_init>:
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	9d e3       	ldi	r25, 0x3D	; 61
  d4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  dc:	e1 e8       	ldi	r30, 0x81	; 129
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	80 83       	st	Z, r24
  e6:	af e6       	ldi	r26, 0x6F	; 111
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	8c 91       	ld	r24, X
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	8c 93       	st	X, r24
  f0:	80 81       	ld	r24, Z
  f2:	85 60       	ori	r24, 0x05	; 5
  f4:	80 83       	st	Z, r24
  f6:	08 95       	ret

000000f8 <buzzer_init>:
  f8:	84 e0       	ldi	r24, 0x04	; 4
  fa:	84 b9       	out	0x04, r24	; 4
  fc:	82 e4       	ldi	r24, 0x42	; 66
  fe:	84 bd       	out	0x24, r24	; 36
 100:	85 e0       	ldi	r24, 0x05	; 5
 102:	85 bd       	out	0x25, r24	; 37
 104:	8d e0       	ldi	r24, 0x0D	; 13
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 10c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 110:	08 95       	ret

00000112 <button_init>:
 112:	85 b1       	in	r24, 0x05	; 5
 114:	88 61       	ori	r24, 0x18	; 24
 116:	85 b9       	out	0x05, r24	; 5
 118:	eb e6       	ldi	r30, 0x6B	; 107
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	80 83       	st	Z, r24
 122:	e8 e6       	ldi	r30, 0x68	; 104
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	81 60       	ori	r24, 0x01	; 1
 12a:	80 83       	st	Z, r24
 12c:	e9 e6       	ldi	r30, 0x69	; 105
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	82 60       	ori	r24, 0x02	; 2
 134:	80 83       	st	Z, r24
 136:	08 95       	ret

00000138 <LCD_Action>:
 138:	9b b1       	in	r25, 0x0b	; 11
 13a:	9f 70       	andi	r25, 0x0F	; 15
 13c:	28 2f       	mov	r18, r24
 13e:	20 7f       	andi	r18, 0xF0	; 240
 140:	92 2b       	or	r25, r18
 142:	9b b9       	out	0x0b, r25	; 11
 144:	9b b1       	in	r25, 0x0b	; 11
 146:	9e 7f       	andi	r25, 0xFE	; 254
 148:	9b b9       	out	0x0b, r25	; 11
 14a:	9b b1       	in	r25, 0x0b	; 11
 14c:	92 60       	ori	r25, 0x02	; 2
 14e:	9b b9       	out	0x0b, r25	; 11
 150:	35 e0       	ldi	r19, 0x05	; 5
 152:	3a 95       	dec	r19
 154:	f1 f7       	brne	.-4      	; 0x152 <LCD_Action+0x1a>
 156:	00 00       	nop
 158:	9b b1       	in	r25, 0x0b	; 11
 15a:	9d 7f       	andi	r25, 0xFD	; 253
 15c:	9b b9       	out	0x0b, r25	; 11
 15e:	ef e1       	ldi	r30, 0x1F	; 31
 160:	f3 e0       	ldi	r31, 0x03	; 3
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCD_Action+0x2a>
 166:	00 c0       	rjmp	.+0      	; 0x168 <LCD_Action+0x30>
 168:	00 00       	nop
 16a:	2b b1       	in	r18, 0x0b	; 11
 16c:	f0 e1       	ldi	r31, 0x10	; 16
 16e:	8f 9f       	mul	r24, r31
 170:	c0 01       	movw	r24, r0
 172:	11 24       	eor	r1, r1
 174:	92 2f       	mov	r25, r18
 176:	9f 70       	andi	r25, 0x0F	; 15
 178:	89 2b       	or	r24, r25
 17a:	8b b9       	out	0x0b, r24	; 11
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	8b b9       	out	0x0b, r24	; 11
 182:	35 e0       	ldi	r19, 0x05	; 5
 184:	3a 95       	dec	r19
 186:	f1 f7       	brne	.-4      	; 0x184 <LCD_Action+0x4c>
 188:	00 00       	nop
 18a:	8b b1       	in	r24, 0x0b	; 11
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	8b b9       	out	0x0b, r24	; 11
 190:	8f e3       	ldi	r24, 0x3F	; 63
 192:	9f e1       	ldi	r25, 0x1F	; 31
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <LCD_Action+0x5c>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LCD_Action+0x62>
 19a:	00 00       	nop
 19c:	08 95       	ret

0000019e <LCD_init>:
 19e:	8f e5       	ldi	r24, 0x5F	; 95
 1a0:	9a ee       	ldi	r25, 0xEA	; 234
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_init+0x4>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <LCD_init+0xa>
 1a8:	00 00       	nop
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1b0:	88 e2       	ldi	r24, 0x28	; 40
 1b2:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1b6:	8c e0       	ldi	r24, 0x0C	; 12
 1b8:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1c8:	8f e3       	ldi	r24, 0x3F	; 63
 1ca:	9f e1       	ldi	r25, 0x1F	; 31
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <LCD_init+0x2e>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_init+0x34>
 1d2:	00 00       	nop
 1d4:	08 95       	ret

000001d6 <LCD_Print>:
 1d6:	fc 01       	movw	r30, r24
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	34 c0       	rjmp	.+104    	; 0x246 <LCD_Print+0x70>
 1de:	8b b1       	in	r24, 0x0b	; 11
 1e0:	8f 70       	andi	r24, 0x0F	; 15
 1e2:	90 7f       	andi	r25, 0xF0	; 240
 1e4:	98 2b       	or	r25, r24
 1e6:	9b b9       	out	0x0b, r25	; 11
 1e8:	8b b1       	in	r24, 0x0b	; 11
 1ea:	81 60       	ori	r24, 0x01	; 1
 1ec:	8b b9       	out	0x0b, r24	; 11
 1ee:	8b b1       	in	r24, 0x0b	; 11
 1f0:	82 60       	ori	r24, 0x02	; 2
 1f2:	8b b9       	out	0x0b, r24	; 11
 1f4:	85 e0       	ldi	r24, 0x05	; 5
 1f6:	8a 95       	dec	r24
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_Print+0x20>
 1fa:	00 00       	nop
 1fc:	8b b1       	in	r24, 0x0b	; 11
 1fe:	8d 7f       	andi	r24, 0xFD	; 253
 200:	8b b9       	out	0x0b, r24	; 11
 202:	8f e1       	ldi	r24, 0x1F	; 31
 204:	93 e0       	ldi	r25, 0x03	; 3
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <LCD_Print+0x30>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <LCD_Print+0x36>
 20c:	00 00       	nop
 20e:	4b b1       	in	r20, 0x0b	; 11
 210:	9c 91       	ld	r25, X
 212:	80 e1       	ldi	r24, 0x10	; 16
 214:	98 9f       	mul	r25, r24
 216:	90 01       	movw	r18, r0
 218:	11 24       	eor	r1, r1
 21a:	94 2f       	mov	r25, r20
 21c:	9f 70       	andi	r25, 0x0F	; 15
 21e:	29 2b       	or	r18, r25
 220:	2b b9       	out	0x0b, r18	; 11
 222:	9b b1       	in	r25, 0x0b	; 11
 224:	92 60       	ori	r25, 0x02	; 2
 226:	9b b9       	out	0x0b, r25	; 11
 228:	95 e0       	ldi	r25, 0x05	; 5
 22a:	9a 95       	dec	r25
 22c:	f1 f7       	brne	.-4      	; 0x22a <LCD_Print+0x54>
 22e:	00 00       	nop
 230:	9b b1       	in	r25, 0x0b	; 11
 232:	9d 7f       	andi	r25, 0xFD	; 253
 234:	9b b9       	out	0x0b, r25	; 11
 236:	8f e3       	ldi	r24, 0x3F	; 63
 238:	9f e1       	ldi	r25, 0x1F	; 31
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <LCD_Print+0x64>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <LCD_Print+0x6a>
 240:	00 00       	nop
 242:	6f 5f       	subi	r22, 0xFF	; 255
 244:	7f 4f       	sbci	r23, 0xFF	; 255
 246:	df 01       	movw	r26, r30
 248:	a6 0f       	add	r26, r22
 24a:	b7 1f       	adc	r27, r23
 24c:	9c 91       	ld	r25, X
 24e:	91 11       	cpse	r25, r1
 250:	c6 cf       	rjmp	.-116    	; 0x1de <LCD_Print+0x8>
 252:	08 95       	ret

00000254 <transmitByte>:
 254:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 258:	95 ff       	sbrs	r25, 5
 25a:	fc cf       	rjmp	.-8      	; 0x254 <transmitByte>
 25c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 260:	08 95       	ret

00000262 <printString>:
 262:	0f 93       	push	r16
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	8c 01       	movw	r16, r24
 26a:	c0 e0       	ldi	r28, 0x00	; 0
 26c:	03 c0       	rjmp	.+6      	; 0x274 <printString+0x12>
 26e:	0e 94 2a 01 	call	0x254	; 0x254 <transmitByte>
 272:	cf 5f       	subi	r28, 0xFF	; 255
 274:	f8 01       	movw	r30, r16
 276:	ec 0f       	add	r30, r28
 278:	f1 1d       	adc	r31, r1
 27a:	80 81       	ld	r24, Z
 27c:	81 11       	cpse	r24, r1
 27e:	f7 cf       	rjmp	.-18     	; 0x26e <printString+0xc>
 280:	cf 91       	pop	r28
 282:	1f 91       	pop	r17
 284:	0f 91       	pop	r16
 286:	08 95       	ret

00000288 <read_ADC>:
 288:	ec e7       	ldi	r30, 0x7C	; 124
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	90 81       	ld	r25, Z
 28e:	90 7f       	andi	r25, 0xF0	; 240
 290:	8f 70       	andi	r24, 0x0F	; 15
 292:	89 2b       	or	r24, r25
 294:	80 83       	st	Z, r24
 296:	ea e7       	ldi	r30, 0x7A	; 122
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	80 81       	ld	r24, Z
 29c:	80 64       	ori	r24, 0x40	; 64
 29e:	80 83       	st	Z, r24
 2a0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 2a4:	86 fd       	sbrc	r24, 6
 2a6:	fc cf       	rjmp	.-8      	; 0x2a0 <read_ADC+0x18>
 2a8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 2ac:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 2b0:	08 95       	ret

000002b2 <print_value>:
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	ec 01       	movw	r28, r24
 2bc:	9c 01       	movw	r18, r24
 2be:	36 95       	lsr	r19
 2c0:	27 95       	ror	r18
 2c2:	36 95       	lsr	r19
 2c4:	27 95       	ror	r18
 2c6:	ab e7       	ldi	r26, 0x7B	; 123
 2c8:	b4 e1       	ldi	r27, 0x14	; 20
 2ca:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 2ce:	fc 01       	movw	r30, r24
 2d0:	f6 95       	lsr	r31
 2d2:	e7 95       	ror	r30
 2d4:	9f 01       	movw	r18, r30
 2d6:	ad ec       	ldi	r26, 0xCD	; 205
 2d8:	bc ec       	ldi	r27, 0xCC	; 204
 2da:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 2de:	ac 01       	movw	r20, r24
 2e0:	56 95       	lsr	r21
 2e2:	47 95       	ror	r20
 2e4:	56 95       	lsr	r21
 2e6:	47 95       	ror	r20
 2e8:	56 95       	lsr	r21
 2ea:	47 95       	ror	r20
 2ec:	ca 01       	movw	r24, r20
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	44 0f       	add	r20, r20
 2f4:	55 1f       	adc	r21, r21
 2f6:	44 0f       	add	r20, r20
 2f8:	55 1f       	adc	r21, r21
 2fa:	44 0f       	add	r20, r20
 2fc:	55 1f       	adc	r21, r21
 2fe:	48 0f       	add	r20, r24
 300:	59 1f       	adc	r21, r25
 302:	cf 01       	movw	r24, r30
 304:	84 1b       	sub	r24, r20
 306:	95 0b       	sbc	r25, r21
 308:	ac 01       	movw	r20, r24
 30a:	18 2f       	mov	r17, r24
 30c:	9e 01       	movw	r18, r28
 30e:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 312:	fc 01       	movw	r30, r24
 314:	f6 95       	lsr	r31
 316:	e7 95       	ror	r30
 318:	f6 95       	lsr	r31
 31a:	e7 95       	ror	r30
 31c:	f6 95       	lsr	r31
 31e:	e7 95       	ror	r30
 320:	9f 01       	movw	r18, r30
 322:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	96 95       	lsr	r25
 32c:	87 95       	ror	r24
 32e:	96 95       	lsr	r25
 330:	87 95       	ror	r24
 332:	9c 01       	movw	r18, r24
 334:	22 0f       	add	r18, r18
 336:	33 1f       	adc	r19, r19
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	82 0f       	add	r24, r18
 346:	93 1f       	adc	r25, r19
 348:	0e 2f       	mov	r16, r30
 34a:	08 1b       	sub	r16, r24
 34c:	cf 01       	movw	r24, r30
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	ee 0f       	add	r30, r30
 354:	ff 1f       	adc	r31, r31
 356:	ee 0f       	add	r30, r30
 358:	ff 1f       	adc	r31, r31
 35a:	ee 0f       	add	r30, r30
 35c:	ff 1f       	adc	r31, r31
 35e:	e8 0f       	add	r30, r24
 360:	f9 1f       	adc	r31, r25
 362:	ce 1b       	sub	r28, r30
 364:	44 23       	and	r20, r20
 366:	21 f0       	breq	.+8      	; 0x370 <print_value+0xbe>
 368:	80 e3       	ldi	r24, 0x30	; 48
 36a:	84 0f       	add	r24, r20
 36c:	0e 94 2a 01 	call	0x254	; 0x254 <transmitByte>
 370:	11 11       	cpse	r17, r1
 372:	02 c0       	rjmp	.+4      	; 0x378 <print_value+0xc6>
 374:	00 23       	and	r16, r16
 376:	21 f0       	breq	.+8      	; 0x380 <print_value+0xce>
 378:	80 e3       	ldi	r24, 0x30	; 48
 37a:	80 0f       	add	r24, r16
 37c:	0e 94 2a 01 	call	0x254	; 0x254 <transmitByte>
 380:	80 e3       	ldi	r24, 0x30	; 48
 382:	8c 0f       	add	r24, r28
 384:	0e 94 2a 01 	call	0x254	; 0x254 <transmitByte>
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	0e 94 31 01 	call	0x262	; 0x262 <printString>
 390:	8f e3       	ldi	r24, 0x3F	; 63
 392:	9c e9       	ldi	r25, 0x9C	; 156
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <print_value+0xe2>
 398:	00 c0       	rjmp	.+0      	; 0x39a <print_value+0xe8>
 39a:	00 00       	nop
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	1f 91       	pop	r17
 3a2:	0f 91       	pop	r16
 3a4:	08 95       	ret

000003a6 <ADC_to_seconds>:
 3a6:	bc 01       	movw	r22, r24
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 b4 03 	call	0x768	; 0x768 <__floatunsisf>
 3b0:	20 e0       	ldi	r18, 0x00	; 0
 3b2:	30 ec       	ldi	r19, 0xC0	; 192
 3b4:	4f e7       	ldi	r20, 0x7F	; 127
 3b6:	54 e4       	ldi	r21, 0x44	; 68
 3b8:	0e 94 13 03 	call	0x626	; 0x626 <__divsf3>
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	44 e3       	ldi	r20, 0x34	; 52
 3c2:	53 e4       	ldi	r21, 0x43	; 67
 3c4:	0e 94 42 04 	call	0x884	; 0x884 <__mulsf3>
 3c8:	0e 94 85 03 	call	0x70a	; 0x70a <__fixunssfsi>
 3cc:	86 2f       	mov	r24, r22
 3ce:	08 95       	ret

000003d0 <debounce>:

uint8_t debounce(uint8_t button_pin) {
	if (bit_is_clear(PINB, button_pin)) {      /* button is pressed now */
 3d0:	23 b1       	in	r18, 0x03	; 3
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	08 2e       	mov	r0, r24
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <debounce+0xc>
 3d8:	35 95       	asr	r19
 3da:	27 95       	ror	r18
 3dc:	0a 94       	dec	r0
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <debounce+0x8>
 3e0:	20 fd       	sbrc	r18, 0
 3e2:	12 c0       	rjmp	.+36     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e4:	ef e9       	ldi	r30, 0x9F	; 159
 3e6:	ff e0       	ldi	r31, 0x0F	; 15
 3e8:	31 97       	sbiw	r30, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <debounce+0x18>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <debounce+0x1e>
 3ee:	00 00       	nop
		_delay_us(DEBOUNCE_TIME);
		if (bit_is_clear(PINB, button_pin)) {            /* still pressed */
 3f0:	23 b1       	in	r18, 0x03	; 3
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	a9 01       	movw	r20, r18
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <debounce+0x2c>
 3f8:	55 95       	asr	r21
 3fa:	47 95       	ror	r20
 3fc:	8a 95       	dec	r24
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <debounce+0x28>
 400:	40 fd       	sbrc	r20, 0
 402:	04 c0       	rjmp	.+8      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
			return 1;
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	08 95       	ret
		}
	}
	return 0;
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	08 95       	ret
 40c:	80 e0       	ldi	r24, 0x00	; 0
}
 40e:	08 95       	ret

00000410 <get_button_status>:

uint8_t get_button_status(uint8_t button)
{
	if (debounce(button)) {                        /* debounced button press */
 410:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <debounce>
 414:	88 23       	and	r24, r24
 416:	41 f0       	breq	.+16     	; 0x428 <get_button_status+0x18>
		if (buttonWasPressed == 0) {     /* but wasn't last time through */
 418:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <buttonWasPressed>
 41c:	81 11       	cpse	r24, r1
 41e:	07 c0       	rjmp	.+14     	; 0x42e <get_button_status+0x1e>
			buttonWasPressed = 1;                      /* update the state */
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <buttonWasPressed>
			return 1;
 426:	08 95       	ret
		}
	}
	else {                                /* button is not pressed now */
		buttonWasPressed = 0;                        /* update the state */
 428:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <buttonWasPressed>
		return 0;
 42c:	08 95       	ret
	}
}  
 42e:	08 95       	ret

00000430 <yellow_LED_on>:
void yellow_LED_on(){
	R_Y_LED_PORT |= (1<<YELLOW_LED);
 430:	8b b1       	in	r24, 0x0b	; 11
 432:	88 60       	ori	r24, 0x08	; 8
 434:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<RED_LED);
 436:	8b b1       	in	r24, 0x0b	; 11
 438:	8b 7f       	andi	r24, 0xFB	; 251
 43a:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 43c:	85 b1       	in	r24, 0x05	; 5
 43e:	8e 7f       	andi	r24, 0xFE	; 254
 440:	85 b9       	out	0x05, r24	; 5
 442:	08 95       	ret

00000444 <green_LED_on>:
}

void green_LED_on(){
	G_LED_PORT |= (1<<GREEN_LED);
 444:	85 b1       	in	r24, 0x05	; 5
 446:	81 60       	ori	r24, 0x01	; 1
 448:	85 b9       	out	0x05, r24	; 5
	R_Y_LED_PORT &= ~(1<<RED_LED);
 44a:	8b b1       	in	r24, 0x0b	; 11
 44c:	8b 7f       	andi	r24, 0xFB	; 251
 44e:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 450:	8b b1       	in	r24, 0x0b	; 11
 452:	87 7f       	andi	r24, 0xF7	; 247
 454:	8b b9       	out	0x0b, r24	; 11
 456:	08 95       	ret

00000458 <red_LED_on>:
}

void red_LED_on(){
	R_Y_LED_PORT |= (1<<RED_LED);
 458:	8b b1       	in	r24, 0x0b	; 11
 45a:	84 60       	ori	r24, 0x04	; 4
 45c:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 45e:	8b b1       	in	r24, 0x0b	; 11
 460:	87 7f       	andi	r24, 0xF7	; 247
 462:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 464:	85 b1       	in	r24, 0x05	; 5
 466:	8e 7f       	andi	r24, 0xFE	; 254
 468:	85 b9       	out	0x05, r24	; 5
 46a:	08 95       	ret

0000046c <main>:
}


int main(void)
{	
 46c:	cf 93       	push	r28
 46e:	df 93       	push	r29
 470:	00 d0       	rcall	.+0      	; 0x472 <main+0x6>
 472:	cd b7       	in	r28, 0x3d	; 61
 474:	de b7       	in	r29, 0x3e	; 62
	ADC_init();
 476:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	USART_init();
 47a:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_init>
	timer_init();
 47e:	0e 94 68 00 	call	0xd0	; 0xd0 <timer_init>
	buzzer_init();
 482:	0e 94 7c 00 	call	0xf8	; 0xf8 <buzzer_init>
	LCD_init();
 486:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_init>
	button_init();
 48a:	0e 94 89 00 	call	0x112	; 0x112 <button_init>
	
	LCD_Print("Hello");
 48e:	82 e0       	ldi	r24, 0x02	; 2
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 496:	2f ef       	ldi	r18, 0xFF	; 255
 498:	87 ea       	ldi	r24, 0xA7	; 167
 49a:	91 e6       	ldi	r25, 0x61	; 97
 49c:	21 50       	subi	r18, 0x01	; 1
 49e:	80 40       	sbci	r24, 0x00	; 0
 4a0:	90 40       	sbci	r25, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <main+0x30>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <main+0x3a>
 4a6:	00 00       	nop
	_delay_ms(2000);
	
	DDRD |= 0xFF; // LDC and LED outputs
 4a8:	8a b1       	in	r24, 0x0a	; 10
 4aa:	8f ef       	ldi	r24, 0xFF	; 255
 4ac:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1<<DDB0); // green LED output
 4ae:	84 b1       	in	r24, 0x04	; 4
 4b0:	81 60       	ori	r24, 0x01	; 1
 4b2:	84 b9       	out	0x04, r24	; 4
	green_LED_on();
 4b4:	0e 94 22 02 	call	0x444	; 0x444 <green_LED_on>
 4b8:	2f ef       	ldi	r18, 0xFF	; 255
 4ba:	89 e6       	ldi	r24, 0x69	; 105
 4bc:	98 e1       	ldi	r25, 0x18	; 24
 4be:	21 50       	subi	r18, 0x01	; 1
 4c0:	80 40       	sbci	r24, 0x00	; 0
 4c2:	90 40       	sbci	r25, 0x00	; 0
 4c4:	e1 f7       	brne	.-8      	; 0x4be <main+0x52>
 4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <main+0x5c>
 4c8:	00 00       	nop
	_delay_ms(500);
	yellow_LED_on();
 4ca:	0e 94 18 02 	call	0x430	; 0x430 <yellow_LED_on>
 4ce:	2f ef       	ldi	r18, 0xFF	; 255
 4d0:	89 e6       	ldi	r24, 0x69	; 105
 4d2:	98 e1       	ldi	r25, 0x18	; 24
 4d4:	21 50       	subi	r18, 0x01	; 1
 4d6:	80 40       	sbci	r24, 0x00	; 0
 4d8:	90 40       	sbci	r25, 0x00	; 0
 4da:	e1 f7       	brne	.-8      	; 0x4d4 <main+0x68>
 4dc:	00 c0       	rjmp	.+0      	; 0x4de <main+0x72>
 4de:	00 00       	nop
	_delay_ms(500);
	red_LED_on();
 4e0:	0e 94 2c 02 	call	0x458	; 0x458 <red_LED_on>
 4e4:	2f ef       	ldi	r18, 0xFF	; 255
 4e6:	89 e6       	ldi	r24, 0x69	; 105
 4e8:	98 e1       	ldi	r25, 0x18	; 24
 4ea:	21 50       	subi	r18, 0x01	; 1
 4ec:	80 40       	sbci	r24, 0x00	; 0
 4ee:	90 40       	sbci	r25, 0x00	; 0
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <main+0x7e>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <main+0x88>
 4f4:	00 00       	nop
 4f6:	22 c0       	rjmp	.+68     	; 0x53c <main+0xd0>
		
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
		{
			cli(); // Disable interrupts
 4f8:	f8 94       	cli
			volatile uint16_t pot_value = read_ADC(POT_PIN);
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 44 01 	call	0x288	; 0x288 <read_ADC>
 500:	9a 83       	std	Y+2, r25	; 0x02
 502:	89 83       	std	Y+1, r24	; 0x01
			seconds = ADC_to_seconds(pot_value);
 504:	89 81       	ldd	r24, Y+1	; 0x01
 506:	9a 81       	ldd	r25, Y+2	; 0x02
 508:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_to_seconds>
 50c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
			printString("Set time at: ");
 510:	88 e0       	ldi	r24, 0x08	; 8
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	0e 94 31 01 	call	0x262	; 0x262 <printString>
			print_value(seconds);
 518:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <print_value>
			
			start_pressed = get_button_status(START_PIN);
 522:	83 e0       	ldi	r24, 0x03	; 3
 524:	0e 94 08 02 	call	0x410	; 0x410 <get_button_status>
 528:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <start_pressed>
			
			if (start_pressed)
 52c:	88 23       	and	r24, r24
 52e:	31 f0       	breq	.+12     	; 0x53c <main+0xd0>
			{
				timer_running = 1;
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timer_running>
				green_LED_on();
 536:	0e 94 22 02 	call	0x444	; 0x444 <green_LED_on>
				sei();	// enable interrupts, also starts the countdown
 53a:	78 94       	sei
	red_LED_on();
	_delay_ms(500);
		
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
 53c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <timer_running>
 540:	81 11       	cpse	r24, r1
 542:	fc cf       	rjmp	.-8      	; 0x53c <main+0xd0>
 544:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <start_pressed>
 548:	81 11       	cpse	r24, r1
 54a:	f8 cf       	rjmp	.-16     	; 0x53c <main+0xd0>
 54c:	d5 cf       	rjmp	.-86     	; 0x4f8 <main+0x8c>

0000054e <__vector_11>:
	}
	return 0;
}

ISR (TIMER1_COMPA_vect) // action to be done every 1 sec
{
 54e:	1f 92       	push	r1
 550:	0f 92       	push	r0
 552:	0f b6       	in	r0, 0x3f	; 63
 554:	0f 92       	push	r0
 556:	11 24       	eor	r1, r1
 558:	2f 93       	push	r18
 55a:	3f 93       	push	r19
 55c:	4f 93       	push	r20
 55e:	5f 93       	push	r21
 560:	6f 93       	push	r22
 562:	7f 93       	push	r23
 564:	8f 93       	push	r24
 566:	9f 93       	push	r25
 568:	af 93       	push	r26
 56a:	bf 93       	push	r27
 56c:	ef 93       	push	r30
 56e:	ff 93       	push	r31
	 seconds--; // Subtracts 1 from the timer value
 570:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 574:	81 50       	subi	r24, 0x01	; 1
 576:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
	if (seconds == 0) 
 57a:	81 11       	cpse	r24, r1
 57c:	0b c0       	rjmp	.+22     	; 0x594 <__vector_11+0x46>
	{
		printString("All done!");
 57e:	86 e1       	ldi	r24, 0x16	; 22
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	0e 94 31 01 	call	0x262	; 0x262 <printString>
		red_LED_on();
 586:	0e 94 2c 02 	call	0x458	; 0x458 <red_LED_on>
		//buzzer();
		timer_running = 0;
 58a:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <timer_running>
		start_pressed = 0;
 58e:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <start_pressed>
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <__vector_11+0x58>
	}
	else
	{
		printString("Time left: ");
 594:	80 e2       	ldi	r24, 0x20	; 32
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 31 01 	call	0x262	; 0x262 <printString>
		print_value(seconds);
 59c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 59 01 	call	0x2b2	; 0x2b2 <print_value>
	}
}
 5a6:	ff 91       	pop	r31
 5a8:	ef 91       	pop	r30
 5aa:	bf 91       	pop	r27
 5ac:	af 91       	pop	r26
 5ae:	9f 91       	pop	r25
 5b0:	8f 91       	pop	r24
 5b2:	7f 91       	pop	r23
 5b4:	6f 91       	pop	r22
 5b6:	5f 91       	pop	r21
 5b8:	4f 91       	pop	r20
 5ba:	3f 91       	pop	r19
 5bc:	2f 91       	pop	r18
 5be:	0f 90       	pop	r0
 5c0:	0f be       	out	0x3f, r0	; 63
 5c2:	0f 90       	pop	r0
 5c4:	1f 90       	pop	r1
 5c6:	18 95       	reti

000005c8 <__vector_3>:

ISR (PCINT0_vect)
{
 5c8:	1f 92       	push	r1
 5ca:	0f 92       	push	r0
 5cc:	0f b6       	in	r0, 0x3f	; 63
 5ce:	0f 92       	push	r0
 5d0:	11 24       	eor	r1, r1
 5d2:	2f 93       	push	r18
 5d4:	3f 93       	push	r19
 5d6:	4f 93       	push	r20
 5d8:	5f 93       	push	r21
 5da:	6f 93       	push	r22
 5dc:	7f 93       	push	r23
 5de:	8f 93       	push	r24
 5e0:	9f 93       	push	r25
 5e2:	af 93       	push	r26
 5e4:	bf 93       	push	r27
 5e6:	ef 93       	push	r30
 5e8:	ff 93       	push	r31
	printString("PAUSE!");
 5ea:	8c e2       	ldi	r24, 0x2C	; 44
 5ec:	91 e0       	ldi	r25, 0x01	; 1
 5ee:	0e 94 31 01 	call	0x262	; 0x262 <printString>
	yellow_LED_on();
 5f2:	0e 94 18 02 	call	0x430	; 0x430 <yellow_LED_on>
	while(get_button_status(START_PIN) == 0) {} // wait for start button to be pressed
 5f6:	83 e0       	ldi	r24, 0x03	; 3
 5f8:	0e 94 08 02 	call	0x410	; 0x410 <get_button_status>
 5fc:	88 23       	and	r24, r24
 5fe:	d9 f3       	breq	.-10     	; 0x5f6 <__vector_3+0x2e>
	green_LED_on();
 600:	0e 94 22 02 	call	0x444	; 0x444 <green_LED_on>
 604:	ff 91       	pop	r31
 606:	ef 91       	pop	r30
 608:	bf 91       	pop	r27
 60a:	af 91       	pop	r26
 60c:	9f 91       	pop	r25
 60e:	8f 91       	pop	r24
 610:	7f 91       	pop	r23
 612:	6f 91       	pop	r22
 614:	5f 91       	pop	r21
 616:	4f 91       	pop	r20
 618:	3f 91       	pop	r19
 61a:	2f 91       	pop	r18
 61c:	0f 90       	pop	r0
 61e:	0f be       	out	0x3f, r0	; 63
 620:	0f 90       	pop	r0
 622:	1f 90       	pop	r1
 624:	18 95       	reti

00000626 <__divsf3>:
 626:	0e 94 27 03 	call	0x64e	; 0x64e <__divsf3x>
 62a:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_round>
 62e:	0e 94 01 04 	call	0x802	; 0x802 <__fp_pscB>
 632:	58 f0       	brcs	.+22     	; 0x64a <__divsf3+0x24>
 634:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__fp_pscA>
 638:	40 f0       	brcs	.+16     	; 0x64a <__divsf3+0x24>
 63a:	29 f4       	brne	.+10     	; 0x646 <__divsf3+0x20>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	29 f0       	breq	.+10     	; 0x64a <__divsf3+0x24>
 640:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__fp_inf>
 644:	51 11       	cpse	r21, r1
 646:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_szero>
 64a:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_nan>

0000064e <__divsf3x>:
 64e:	0e 94 19 04 	call	0x832	; 0x832 <__fp_split3>
 652:	68 f3       	brcs	.-38     	; 0x62e <__divsf3+0x8>

00000654 <__divsf3_pse>:
 654:	99 23       	and	r25, r25
 656:	b1 f3       	breq	.-20     	; 0x644 <__divsf3+0x1e>
 658:	55 23       	and	r21, r21
 65a:	91 f3       	breq	.-28     	; 0x640 <__divsf3+0x1a>
 65c:	95 1b       	sub	r25, r21
 65e:	55 0b       	sbc	r21, r21
 660:	bb 27       	eor	r27, r27
 662:	aa 27       	eor	r26, r26
 664:	62 17       	cp	r22, r18
 666:	73 07       	cpc	r23, r19
 668:	84 07       	cpc	r24, r20
 66a:	38 f0       	brcs	.+14     	; 0x67a <__divsf3_pse+0x26>
 66c:	9f 5f       	subi	r25, 0xFF	; 255
 66e:	5f 4f       	sbci	r21, 0xFF	; 255
 670:	22 0f       	add	r18, r18
 672:	33 1f       	adc	r19, r19
 674:	44 1f       	adc	r20, r20
 676:	aa 1f       	adc	r26, r26
 678:	a9 f3       	breq	.-22     	; 0x664 <__divsf3_pse+0x10>
 67a:	35 d0       	rcall	.+106    	; 0x6e6 <__divsf3_pse+0x92>
 67c:	0e 2e       	mov	r0, r30
 67e:	3a f0       	brmi	.+14     	; 0x68e <__divsf3_pse+0x3a>
 680:	e0 e8       	ldi	r30, 0x80	; 128
 682:	32 d0       	rcall	.+100    	; 0x6e8 <__divsf3_pse+0x94>
 684:	91 50       	subi	r25, 0x01	; 1
 686:	50 40       	sbci	r21, 0x00	; 0
 688:	e6 95       	lsr	r30
 68a:	00 1c       	adc	r0, r0
 68c:	ca f7       	brpl	.-14     	; 0x680 <__divsf3_pse+0x2c>
 68e:	2b d0       	rcall	.+86     	; 0x6e6 <__divsf3_pse+0x92>
 690:	fe 2f       	mov	r31, r30
 692:	29 d0       	rcall	.+82     	; 0x6e6 <__divsf3_pse+0x92>
 694:	66 0f       	add	r22, r22
 696:	77 1f       	adc	r23, r23
 698:	88 1f       	adc	r24, r24
 69a:	bb 1f       	adc	r27, r27
 69c:	26 17       	cp	r18, r22
 69e:	37 07       	cpc	r19, r23
 6a0:	48 07       	cpc	r20, r24
 6a2:	ab 07       	cpc	r26, r27
 6a4:	b0 e8       	ldi	r27, 0x80	; 128
 6a6:	09 f0       	breq	.+2      	; 0x6aa <__divsf3_pse+0x56>
 6a8:	bb 0b       	sbc	r27, r27
 6aa:	80 2d       	mov	r24, r0
 6ac:	bf 01       	movw	r22, r30
 6ae:	ff 27       	eor	r31, r31
 6b0:	93 58       	subi	r25, 0x83	; 131
 6b2:	5f 4f       	sbci	r21, 0xFF	; 255
 6b4:	3a f0       	brmi	.+14     	; 0x6c4 <__divsf3_pse+0x70>
 6b6:	9e 3f       	cpi	r25, 0xFE	; 254
 6b8:	51 05       	cpc	r21, r1
 6ba:	78 f0       	brcs	.+30     	; 0x6da <__divsf3_pse+0x86>
 6bc:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__fp_inf>
 6c0:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_szero>
 6c4:	5f 3f       	cpi	r21, 0xFF	; 255
 6c6:	e4 f3       	brlt	.-8      	; 0x6c0 <__divsf3_pse+0x6c>
 6c8:	98 3e       	cpi	r25, 0xE8	; 232
 6ca:	d4 f3       	brlt	.-12     	; 0x6c0 <__divsf3_pse+0x6c>
 6cc:	86 95       	lsr	r24
 6ce:	77 95       	ror	r23
 6d0:	67 95       	ror	r22
 6d2:	b7 95       	ror	r27
 6d4:	f7 95       	ror	r31
 6d6:	9f 5f       	subi	r25, 0xFF	; 255
 6d8:	c9 f7       	brne	.-14     	; 0x6cc <__divsf3_pse+0x78>
 6da:	88 0f       	add	r24, r24
 6dc:	91 1d       	adc	r25, r1
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret
 6e6:	e1 e0       	ldi	r30, 0x01	; 1
 6e8:	66 0f       	add	r22, r22
 6ea:	77 1f       	adc	r23, r23
 6ec:	88 1f       	adc	r24, r24
 6ee:	bb 1f       	adc	r27, r27
 6f0:	62 17       	cp	r22, r18
 6f2:	73 07       	cpc	r23, r19
 6f4:	84 07       	cpc	r24, r20
 6f6:	ba 07       	cpc	r27, r26
 6f8:	20 f0       	brcs	.+8      	; 0x702 <__divsf3_pse+0xae>
 6fa:	62 1b       	sub	r22, r18
 6fc:	73 0b       	sbc	r23, r19
 6fe:	84 0b       	sbc	r24, r20
 700:	ba 0b       	sbc	r27, r26
 702:	ee 1f       	adc	r30, r30
 704:	88 f7       	brcc	.-30     	; 0x6e8 <__divsf3_pse+0x94>
 706:	e0 95       	com	r30
 708:	08 95       	ret

0000070a <__fixunssfsi>:
 70a:	0e 94 21 04 	call	0x842	; 0x842 <__fp_splitA>
 70e:	88 f0       	brcs	.+34     	; 0x732 <__fixunssfsi+0x28>
 710:	9f 57       	subi	r25, 0x7F	; 127
 712:	98 f0       	brcs	.+38     	; 0x73a <__fixunssfsi+0x30>
 714:	b9 2f       	mov	r27, r25
 716:	99 27       	eor	r25, r25
 718:	b7 51       	subi	r27, 0x17	; 23
 71a:	b0 f0       	brcs	.+44     	; 0x748 <__fixunssfsi+0x3e>
 71c:	e1 f0       	breq	.+56     	; 0x756 <__fixunssfsi+0x4c>
 71e:	66 0f       	add	r22, r22
 720:	77 1f       	adc	r23, r23
 722:	88 1f       	adc	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	1a f0       	brmi	.+6      	; 0x72e <__fixunssfsi+0x24>
 728:	ba 95       	dec	r27
 72a:	c9 f7       	brne	.-14     	; 0x71e <__fixunssfsi+0x14>
 72c:	14 c0       	rjmp	.+40     	; 0x756 <__fixunssfsi+0x4c>
 72e:	b1 30       	cpi	r27, 0x01	; 1
 730:	91 f0       	breq	.+36     	; 0x756 <__fixunssfsi+0x4c>
 732:	0e 94 3b 04 	call	0x876	; 0x876 <__fp_zero>
 736:	b1 e0       	ldi	r27, 0x01	; 1
 738:	08 95       	ret
 73a:	0c 94 3b 04 	jmp	0x876	; 0x876 <__fp_zero>
 73e:	67 2f       	mov	r22, r23
 740:	78 2f       	mov	r23, r24
 742:	88 27       	eor	r24, r24
 744:	b8 5f       	subi	r27, 0xF8	; 248
 746:	39 f0       	breq	.+14     	; 0x756 <__fixunssfsi+0x4c>
 748:	b9 3f       	cpi	r27, 0xF9	; 249
 74a:	cc f3       	brlt	.-14     	; 0x73e <__fixunssfsi+0x34>
 74c:	86 95       	lsr	r24
 74e:	77 95       	ror	r23
 750:	67 95       	ror	r22
 752:	b3 95       	inc	r27
 754:	d9 f7       	brne	.-10     	; 0x74c <__fixunssfsi+0x42>
 756:	3e f4       	brtc	.+14     	; 0x766 <__fixunssfsi+0x5c>
 758:	90 95       	com	r25
 75a:	80 95       	com	r24
 75c:	70 95       	com	r23
 75e:	61 95       	neg	r22
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	8f 4f       	sbci	r24, 0xFF	; 255
 764:	9f 4f       	sbci	r25, 0xFF	; 255
 766:	08 95       	ret

00000768 <__floatunsisf>:
 768:	e8 94       	clt
 76a:	09 c0       	rjmp	.+18     	; 0x77e <__floatsisf+0x12>

0000076c <__floatsisf>:
 76c:	97 fb       	bst	r25, 7
 76e:	3e f4       	brtc	.+14     	; 0x77e <__floatsisf+0x12>
 770:	90 95       	com	r25
 772:	80 95       	com	r24
 774:	70 95       	com	r23
 776:	61 95       	neg	r22
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	99 23       	and	r25, r25
 780:	a9 f0       	breq	.+42     	; 0x7ac <__floatsisf+0x40>
 782:	f9 2f       	mov	r31, r25
 784:	96 e9       	ldi	r25, 0x96	; 150
 786:	bb 27       	eor	r27, r27
 788:	93 95       	inc	r25
 78a:	f6 95       	lsr	r31
 78c:	87 95       	ror	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	b7 95       	ror	r27
 794:	f1 11       	cpse	r31, r1
 796:	f8 cf       	rjmp	.-16     	; 0x788 <__floatsisf+0x1c>
 798:	fa f4       	brpl	.+62     	; 0x7d8 <__floatsisf+0x6c>
 79a:	bb 0f       	add	r27, r27
 79c:	11 f4       	brne	.+4      	; 0x7a2 <__floatsisf+0x36>
 79e:	60 ff       	sbrs	r22, 0
 7a0:	1b c0       	rjmp	.+54     	; 0x7d8 <__floatsisf+0x6c>
 7a2:	6f 5f       	subi	r22, 0xFF	; 255
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	16 c0       	rjmp	.+44     	; 0x7d8 <__floatsisf+0x6c>
 7ac:	88 23       	and	r24, r24
 7ae:	11 f0       	breq	.+4      	; 0x7b4 <__floatsisf+0x48>
 7b0:	96 e9       	ldi	r25, 0x96	; 150
 7b2:	11 c0       	rjmp	.+34     	; 0x7d6 <__floatsisf+0x6a>
 7b4:	77 23       	and	r23, r23
 7b6:	21 f0       	breq	.+8      	; 0x7c0 <__floatsisf+0x54>
 7b8:	9e e8       	ldi	r25, 0x8E	; 142
 7ba:	87 2f       	mov	r24, r23
 7bc:	76 2f       	mov	r23, r22
 7be:	05 c0       	rjmp	.+10     	; 0x7ca <__floatsisf+0x5e>
 7c0:	66 23       	and	r22, r22
 7c2:	71 f0       	breq	.+28     	; 0x7e0 <__floatsisf+0x74>
 7c4:	96 e8       	ldi	r25, 0x86	; 134
 7c6:	86 2f       	mov	r24, r22
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	2a f0       	brmi	.+10     	; 0x7d8 <__floatsisf+0x6c>
 7ce:	9a 95       	dec	r25
 7d0:	66 0f       	add	r22, r22
 7d2:	77 1f       	adc	r23, r23
 7d4:	88 1f       	adc	r24, r24
 7d6:	da f7       	brpl	.-10     	; 0x7ce <__floatsisf+0x62>
 7d8:	88 0f       	add	r24, r24
 7da:	96 95       	lsr	r25
 7dc:	87 95       	ror	r24
 7de:	97 f9       	bld	r25, 7
 7e0:	08 95       	ret

000007e2 <__fp_inf>:
 7e2:	97 f9       	bld	r25, 7
 7e4:	9f 67       	ori	r25, 0x7F	; 127
 7e6:	80 e8       	ldi	r24, 0x80	; 128
 7e8:	70 e0       	ldi	r23, 0x00	; 0
 7ea:	60 e0       	ldi	r22, 0x00	; 0
 7ec:	08 95       	ret

000007ee <__fp_nan>:
 7ee:	9f ef       	ldi	r25, 0xFF	; 255
 7f0:	80 ec       	ldi	r24, 0xC0	; 192
 7f2:	08 95       	ret

000007f4 <__fp_pscA>:
 7f4:	00 24       	eor	r0, r0
 7f6:	0a 94       	dec	r0
 7f8:	16 16       	cp	r1, r22
 7fa:	17 06       	cpc	r1, r23
 7fc:	18 06       	cpc	r1, r24
 7fe:	09 06       	cpc	r0, r25
 800:	08 95       	ret

00000802 <__fp_pscB>:
 802:	00 24       	eor	r0, r0
 804:	0a 94       	dec	r0
 806:	12 16       	cp	r1, r18
 808:	13 06       	cpc	r1, r19
 80a:	14 06       	cpc	r1, r20
 80c:	05 06       	cpc	r0, r21
 80e:	08 95       	ret

00000810 <__fp_round>:
 810:	09 2e       	mov	r0, r25
 812:	03 94       	inc	r0
 814:	00 0c       	add	r0, r0
 816:	11 f4       	brne	.+4      	; 0x81c <__fp_round+0xc>
 818:	88 23       	and	r24, r24
 81a:	52 f0       	brmi	.+20     	; 0x830 <__fp_round+0x20>
 81c:	bb 0f       	add	r27, r27
 81e:	40 f4       	brcc	.+16     	; 0x830 <__fp_round+0x20>
 820:	bf 2b       	or	r27, r31
 822:	11 f4       	brne	.+4      	; 0x828 <__fp_round+0x18>
 824:	60 ff       	sbrs	r22, 0
 826:	04 c0       	rjmp	.+8      	; 0x830 <__fp_round+0x20>
 828:	6f 5f       	subi	r22, 0xFF	; 255
 82a:	7f 4f       	sbci	r23, 0xFF	; 255
 82c:	8f 4f       	sbci	r24, 0xFF	; 255
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	08 95       	ret

00000832 <__fp_split3>:
 832:	57 fd       	sbrc	r21, 7
 834:	90 58       	subi	r25, 0x80	; 128
 836:	44 0f       	add	r20, r20
 838:	55 1f       	adc	r21, r21
 83a:	59 f0       	breq	.+22     	; 0x852 <__fp_splitA+0x10>
 83c:	5f 3f       	cpi	r21, 0xFF	; 255
 83e:	71 f0       	breq	.+28     	; 0x85c <__fp_splitA+0x1a>
 840:	47 95       	ror	r20

00000842 <__fp_splitA>:
 842:	88 0f       	add	r24, r24
 844:	97 fb       	bst	r25, 7
 846:	99 1f       	adc	r25, r25
 848:	61 f0       	breq	.+24     	; 0x862 <__fp_splitA+0x20>
 84a:	9f 3f       	cpi	r25, 0xFF	; 255
 84c:	79 f0       	breq	.+30     	; 0x86c <__fp_splitA+0x2a>
 84e:	87 95       	ror	r24
 850:	08 95       	ret
 852:	12 16       	cp	r1, r18
 854:	13 06       	cpc	r1, r19
 856:	14 06       	cpc	r1, r20
 858:	55 1f       	adc	r21, r21
 85a:	f2 cf       	rjmp	.-28     	; 0x840 <__fp_split3+0xe>
 85c:	46 95       	lsr	r20
 85e:	f1 df       	rcall	.-30     	; 0x842 <__fp_splitA>
 860:	08 c0       	rjmp	.+16     	; 0x872 <__fp_splitA+0x30>
 862:	16 16       	cp	r1, r22
 864:	17 06       	cpc	r1, r23
 866:	18 06       	cpc	r1, r24
 868:	99 1f       	adc	r25, r25
 86a:	f1 cf       	rjmp	.-30     	; 0x84e <__fp_splitA+0xc>
 86c:	86 95       	lsr	r24
 86e:	71 05       	cpc	r23, r1
 870:	61 05       	cpc	r22, r1
 872:	08 94       	sec
 874:	08 95       	ret

00000876 <__fp_zero>:
 876:	e8 94       	clt

00000878 <__fp_szero>:
 878:	bb 27       	eor	r27, r27
 87a:	66 27       	eor	r22, r22
 87c:	77 27       	eor	r23, r23
 87e:	cb 01       	movw	r24, r22
 880:	97 f9       	bld	r25, 7
 882:	08 95       	ret

00000884 <__mulsf3>:
 884:	0e 94 55 04 	call	0x8aa	; 0x8aa <__mulsf3x>
 888:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_round>
 88c:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__fp_pscA>
 890:	38 f0       	brcs	.+14     	; 0x8a0 <__mulsf3+0x1c>
 892:	0e 94 01 04 	call	0x802	; 0x802 <__fp_pscB>
 896:	20 f0       	brcs	.+8      	; 0x8a0 <__mulsf3+0x1c>
 898:	95 23       	and	r25, r21
 89a:	11 f0       	breq	.+4      	; 0x8a0 <__mulsf3+0x1c>
 89c:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__fp_inf>
 8a0:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_nan>
 8a4:	11 24       	eor	r1, r1
 8a6:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_szero>

000008aa <__mulsf3x>:
 8aa:	0e 94 19 04 	call	0x832	; 0x832 <__fp_split3>
 8ae:	70 f3       	brcs	.-36     	; 0x88c <__mulsf3+0x8>

000008b0 <__mulsf3_pse>:
 8b0:	95 9f       	mul	r25, r21
 8b2:	c1 f3       	breq	.-16     	; 0x8a4 <__mulsf3+0x20>
 8b4:	95 0f       	add	r25, r21
 8b6:	50 e0       	ldi	r21, 0x00	; 0
 8b8:	55 1f       	adc	r21, r21
 8ba:	62 9f       	mul	r22, r18
 8bc:	f0 01       	movw	r30, r0
 8be:	72 9f       	mul	r23, r18
 8c0:	bb 27       	eor	r27, r27
 8c2:	f0 0d       	add	r31, r0
 8c4:	b1 1d       	adc	r27, r1
 8c6:	63 9f       	mul	r22, r19
 8c8:	aa 27       	eor	r26, r26
 8ca:	f0 0d       	add	r31, r0
 8cc:	b1 1d       	adc	r27, r1
 8ce:	aa 1f       	adc	r26, r26
 8d0:	64 9f       	mul	r22, r20
 8d2:	66 27       	eor	r22, r22
 8d4:	b0 0d       	add	r27, r0
 8d6:	a1 1d       	adc	r26, r1
 8d8:	66 1f       	adc	r22, r22
 8da:	82 9f       	mul	r24, r18
 8dc:	22 27       	eor	r18, r18
 8de:	b0 0d       	add	r27, r0
 8e0:	a1 1d       	adc	r26, r1
 8e2:	62 1f       	adc	r22, r18
 8e4:	73 9f       	mul	r23, r19
 8e6:	b0 0d       	add	r27, r0
 8e8:	a1 1d       	adc	r26, r1
 8ea:	62 1f       	adc	r22, r18
 8ec:	83 9f       	mul	r24, r19
 8ee:	a0 0d       	add	r26, r0
 8f0:	61 1d       	adc	r22, r1
 8f2:	22 1f       	adc	r18, r18
 8f4:	74 9f       	mul	r23, r20
 8f6:	33 27       	eor	r19, r19
 8f8:	a0 0d       	add	r26, r0
 8fa:	61 1d       	adc	r22, r1
 8fc:	23 1f       	adc	r18, r19
 8fe:	84 9f       	mul	r24, r20
 900:	60 0d       	add	r22, r0
 902:	21 1d       	adc	r18, r1
 904:	82 2f       	mov	r24, r18
 906:	76 2f       	mov	r23, r22
 908:	6a 2f       	mov	r22, r26
 90a:	11 24       	eor	r1, r1
 90c:	9f 57       	subi	r25, 0x7F	; 127
 90e:	50 40       	sbci	r21, 0x00	; 0
 910:	9a f0       	brmi	.+38     	; 0x938 <__stack+0x39>
 912:	f1 f0       	breq	.+60     	; 0x950 <__stack+0x51>
 914:	88 23       	and	r24, r24
 916:	4a f0       	brmi	.+18     	; 0x92a <__stack+0x2b>
 918:	ee 0f       	add	r30, r30
 91a:	ff 1f       	adc	r31, r31
 91c:	bb 1f       	adc	r27, r27
 91e:	66 1f       	adc	r22, r22
 920:	77 1f       	adc	r23, r23
 922:	88 1f       	adc	r24, r24
 924:	91 50       	subi	r25, 0x01	; 1
 926:	50 40       	sbci	r21, 0x00	; 0
 928:	a9 f7       	brne	.-22     	; 0x914 <__stack+0x15>
 92a:	9e 3f       	cpi	r25, 0xFE	; 254
 92c:	51 05       	cpc	r21, r1
 92e:	80 f0       	brcs	.+32     	; 0x950 <__stack+0x51>
 930:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__fp_inf>
 934:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_szero>
 938:	5f 3f       	cpi	r21, 0xFF	; 255
 93a:	e4 f3       	brlt	.-8      	; 0x934 <__stack+0x35>
 93c:	98 3e       	cpi	r25, 0xE8	; 232
 93e:	d4 f3       	brlt	.-12     	; 0x934 <__stack+0x35>
 940:	86 95       	lsr	r24
 942:	77 95       	ror	r23
 944:	67 95       	ror	r22
 946:	b7 95       	ror	r27
 948:	f7 95       	ror	r31
 94a:	e7 95       	ror	r30
 94c:	9f 5f       	subi	r25, 0xFF	; 255
 94e:	c1 f7       	brne	.-16     	; 0x940 <__stack+0x41>
 950:	fe 2b       	or	r31, r30
 952:	88 0f       	add	r24, r24
 954:	91 1d       	adc	r25, r1
 956:	96 95       	lsr	r25
 958:	87 95       	ror	r24
 95a:	97 f9       	bld	r25, 7
 95c:	08 95       	ret

0000095e <__umulhisi3>:
 95e:	a2 9f       	mul	r26, r18
 960:	b0 01       	movw	r22, r0
 962:	b3 9f       	mul	r27, r19
 964:	c0 01       	movw	r24, r0
 966:	a3 9f       	mul	r26, r19
 968:	70 0d       	add	r23, r0
 96a:	81 1d       	adc	r24, r1
 96c:	11 24       	eor	r1, r1
 96e:	91 1d       	adc	r25, r1
 970:	b2 9f       	mul	r27, r18
 972:	70 0d       	add	r23, r0
 974:	81 1d       	adc	r24, r1
 976:	11 24       	eor	r1, r1
 978:	91 1d       	adc	r25, r1
 97a:	08 95       	ret

0000097c <_exit>:
 97c:	f8 94       	cli

0000097e <__stop_program>:
 97e:	ff cf       	rjmp	.-2      	; 0x97e <__stop_program>
