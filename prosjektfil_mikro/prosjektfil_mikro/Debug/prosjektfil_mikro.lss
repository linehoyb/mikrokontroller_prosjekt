
prosjektfil_mikro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  0000093e  000009d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000093e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800120  00800120  000009f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001487  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ce  00000000  00000000  00001fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b7  00000000  00000000  00002891  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00003148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cb  00000000  00000000  000033e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d2a  00000000  00000000  000039af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000046d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 90 02 	jmp	0x520	; 0x520 <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 29 02 	jmp	0x452	; 0x452 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e3       	ldi	r30, 0x3E	; 62
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 32       	cpi	r26, 0x24	; 36
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9c 01 	call	0x338	; 0x338 <main>
  9e:	0c 94 9d 04 	jmp	0x93a	; 0x93a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
		DDRB = (1<<DDB3);  // PB3 or OCR2A output pin
		_delay_ms(1000);
		DDRB = (0<<DDB3);
		_delay_ms(500);
	}
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 68       	ori	r24, 0x87	; 135
  b8:	80 83       	st	Z, r24
  ba:	08 95       	ret

000000bc <timer_init>:
  bc:	88 e0       	ldi	r24, 0x08	; 8
  be:	9d e3       	ldi	r25, 0x3D	; 61
  c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
  d2:	af e6       	ldi	r26, 0x6F	; 111
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	8c 91       	ld	r24, X
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	8c 93       	st	X, r24
  dc:	80 81       	ld	r24, Z
  de:	85 60       	ori	r24, 0x05	; 5
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret

000000e4 <button_init>:
  e4:	88 b1       	in	r24, 0x08	; 8
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	88 b9       	out	0x08, r24	; 8
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	84 60       	ori	r24, 0x04	; 4
  ee:	85 b9       	out	0x05, r24	; 5
  f0:	ec e6       	ldi	r30, 0x6C	; 108
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	84 60       	ori	r24, 0x04	; 4
  f8:	80 83       	st	Z, r24
  fa:	e8 e6       	ldi	r30, 0x68	; 104
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	82 60       	ori	r24, 0x02	; 2
 102:	80 83       	st	Z, r24
 104:	e9 e6       	ldi	r30, 0x69	; 105
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	88 60       	ori	r24, 0x08	; 8
 10c:	80 83       	st	Z, r24
 10e:	78 94       	sei
 110:	08 95       	ret

00000112 <LCD_Action>:
 112:	9b b1       	in	r25, 0x0b	; 11
 114:	9f 70       	andi	r25, 0x0F	; 15
 116:	28 2f       	mov	r18, r24
 118:	20 7f       	andi	r18, 0xF0	; 240
 11a:	92 2b       	or	r25, r18
 11c:	9b b9       	out	0x0b, r25	; 11
 11e:	9b b1       	in	r25, 0x0b	; 11
 120:	9e 7f       	andi	r25, 0xFE	; 254
 122:	9b b9       	out	0x0b, r25	; 11
 124:	9b b1       	in	r25, 0x0b	; 11
 126:	92 60       	ori	r25, 0x02	; 2
 128:	9b b9       	out	0x0b, r25	; 11
 12a:	35 e0       	ldi	r19, 0x05	; 5
 12c:	3a 95       	dec	r19
 12e:	f1 f7       	brne	.-4      	; 0x12c <LCD_Action+0x1a>
 130:	00 00       	nop
 132:	9b b1       	in	r25, 0x0b	; 11
 134:	9d 7f       	andi	r25, 0xFD	; 253
 136:	9b b9       	out	0x0b, r25	; 11
 138:	ef e1       	ldi	r30, 0x1F	; 31
 13a:	f3 e0       	ldi	r31, 0x03	; 3
 13c:	31 97       	sbiw	r30, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <LCD_Action+0x2a>
 140:	00 c0       	rjmp	.+0      	; 0x142 <LCD_Action+0x30>
 142:	00 00       	nop
 144:	2b b1       	in	r18, 0x0b	; 11
 146:	f0 e1       	ldi	r31, 0x10	; 16
 148:	8f 9f       	mul	r24, r31
 14a:	c0 01       	movw	r24, r0
 14c:	11 24       	eor	r1, r1
 14e:	92 2f       	mov	r25, r18
 150:	9f 70       	andi	r25, 0x0F	; 15
 152:	89 2b       	or	r24, r25
 154:	8b b9       	out	0x0b, r24	; 11
 156:	8b b1       	in	r24, 0x0b	; 11
 158:	82 60       	ori	r24, 0x02	; 2
 15a:	8b b9       	out	0x0b, r24	; 11
 15c:	35 e0       	ldi	r19, 0x05	; 5
 15e:	3a 95       	dec	r19
 160:	f1 f7       	brne	.-4      	; 0x15e <LCD_Action+0x4c>
 162:	00 00       	nop
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	8b b9       	out	0x0b, r24	; 11
 16a:	8f e3       	ldi	r24, 0x3F	; 63
 16c:	9f e1       	ldi	r25, 0x1F	; 31
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <LCD_Action+0x5c>
 172:	00 c0       	rjmp	.+0      	; 0x174 <LCD_Action+0x62>
 174:	00 00       	nop
 176:	08 95       	ret

00000178 <LCD_init>:
 178:	8f e5       	ldi	r24, 0x5F	; 95
 17a:	9a ee       	ldi	r25, 0xEA	; 234
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <LCD_init+0x4>
 180:	00 c0       	rjmp	.+0      	; 0x182 <LCD_init+0xa>
 182:	00 00       	nop
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 18a:	88 e2       	ldi	r24, 0x28	; 40
 18c:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 190:	8c e0       	ldi	r24, 0x0C	; 12
 192:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 196:	86 e0       	ldi	r24, 0x06	; 6
 198:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 1a2:	8f e3       	ldi	r24, 0x3F	; 63
 1a4:	9f e1       	ldi	r25, 0x1F	; 31
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_init+0x2e>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_init+0x34>
 1ac:	00 00       	nop
 1ae:	08 95       	ret

000001b0 <LCD_Clear>:
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 1b6:	8f e3       	ldi	r24, 0x3F	; 63
 1b8:	9f e1       	ldi	r25, 0x1F	; 31
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_Clear+0xa>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <LCD_Clear+0x10>
 1c0:	00 00       	nop
 1c2:	80 e8       	ldi	r24, 0x80	; 128
 1c4:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Action>
 1c8:	08 95       	ret

000001ca <LCD_Print>:
 1ca:	fc 01       	movw	r30, r24
 1cc:	60 e0       	ldi	r22, 0x00	; 0
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	34 c0       	rjmp	.+104    	; 0x23a <LCD_Print+0x70>
 1d2:	8b b1       	in	r24, 0x0b	; 11
 1d4:	8f 70       	andi	r24, 0x0F	; 15
 1d6:	90 7f       	andi	r25, 0xF0	; 240
 1d8:	98 2b       	or	r25, r24
 1da:	9b b9       	out	0x0b, r25	; 11
 1dc:	8b b1       	in	r24, 0x0b	; 11
 1de:	81 60       	ori	r24, 0x01	; 1
 1e0:	8b b9       	out	0x0b, r24	; 11
 1e2:	8b b1       	in	r24, 0x0b	; 11
 1e4:	82 60       	ori	r24, 0x02	; 2
 1e6:	8b b9       	out	0x0b, r24	; 11
 1e8:	85 e0       	ldi	r24, 0x05	; 5
 1ea:	8a 95       	dec	r24
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <LCD_Print+0x20>
 1ee:	00 00       	nop
 1f0:	8b b1       	in	r24, 0x0b	; 11
 1f2:	8d 7f       	andi	r24, 0xFD	; 253
 1f4:	8b b9       	out	0x0b, r24	; 11
 1f6:	8f e1       	ldi	r24, 0x1F	; 31
 1f8:	93 e0       	ldi	r25, 0x03	; 3
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <LCD_Print+0x30>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <LCD_Print+0x36>
 200:	00 00       	nop
 202:	4b b1       	in	r20, 0x0b	; 11
 204:	9c 91       	ld	r25, X
 206:	80 e1       	ldi	r24, 0x10	; 16
 208:	98 9f       	mul	r25, r24
 20a:	90 01       	movw	r18, r0
 20c:	11 24       	eor	r1, r1
 20e:	94 2f       	mov	r25, r20
 210:	9f 70       	andi	r25, 0x0F	; 15
 212:	29 2b       	or	r18, r25
 214:	2b b9       	out	0x0b, r18	; 11
 216:	9b b1       	in	r25, 0x0b	; 11
 218:	92 60       	ori	r25, 0x02	; 2
 21a:	9b b9       	out	0x0b, r25	; 11
 21c:	95 e0       	ldi	r25, 0x05	; 5
 21e:	9a 95       	dec	r25
 220:	f1 f7       	brne	.-4      	; 0x21e <LCD_Print+0x54>
 222:	00 00       	nop
 224:	9b b1       	in	r25, 0x0b	; 11
 226:	9d 7f       	andi	r25, 0xFD	; 253
 228:	9b b9       	out	0x0b, r25	; 11
 22a:	8f e3       	ldi	r24, 0x3F	; 63
 22c:	9f e1       	ldi	r25, 0x1F	; 31
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <LCD_Print+0x64>
 232:	00 c0       	rjmp	.+0      	; 0x234 <LCD_Print+0x6a>
 234:	00 00       	nop
 236:	6f 5f       	subi	r22, 0xFF	; 255
 238:	7f 4f       	sbci	r23, 0xFF	; 255
 23a:	df 01       	movw	r26, r30
 23c:	a6 0f       	add	r26, r22
 23e:	b7 1f       	adc	r27, r23
 240:	9c 91       	ld	r25, X
 242:	91 11       	cpse	r25, r1
 244:	c6 cf       	rjmp	.-116    	; 0x1d2 <LCD_Print+0x8>
 246:	08 95       	ret

00000248 <read_ADC>:
 248:	ec e7       	ldi	r30, 0x7C	; 124
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	90 81       	ld	r25, Z
 24e:	90 7f       	andi	r25, 0xF0	; 240
 250:	8f 70       	andi	r24, 0x0F	; 15
 252:	89 2b       	or	r24, r25
 254:	80 83       	st	Z, r24
 256:	ea e7       	ldi	r30, 0x7A	; 122
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	80 64       	ori	r24, 0x40	; 64
 25e:	80 83       	st	Z, r24
 260:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 264:	86 fd       	sbrc	r24, 6
 266:	fc cf       	rjmp	.-8      	; 0x260 <read_ADC+0x18>
 268:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 26c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 270:	08 95       	ret

00000272 <ADC_to_seconds>:
 272:	bc 01       	movw	r22, r24
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__floatunsisf>
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	30 ec       	ldi	r19, 0xC0	; 192
 280:	4f e7       	ldi	r20, 0x7F	; 127
 282:	54 e4       	ldi	r21, 0x44	; 68
 284:	0e 94 c1 02 	call	0x582	; 0x582 <__divsf3>
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	44 e3       	ldi	r20, 0x34	; 52
 28e:	53 e4       	ldi	r21, 0x43	; 67
 290:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__mulsf3>
 294:	0e 94 33 03 	call	0x666	; 0x666 <__fixunssfsi>
 298:	86 2f       	mov	r24, r22
 29a:	08 95       	ret

0000029c <debounce>:

uint8_t debounce(uint8_t button_pin) {
	if (bit_is_clear(PINB, button_pin)) {      /* button is pressed now */
 29c:	23 b1       	in	r18, 0x03	; 3
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	08 2e       	mov	r0, r24
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <debounce+0xc>
 2a4:	35 95       	asr	r19
 2a6:	27 95       	ror	r18
 2a8:	0a 94       	dec	r0
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <debounce+0x8>
 2ac:	20 fd       	sbrc	r18, 0
 2ae:	12 c0       	rjmp	.+36     	; 0x2d4 <debounce+0x38>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b0:	ef e9       	ldi	r30, 0x9F	; 159
 2b2:	ff e0       	ldi	r31, 0x0F	; 15
 2b4:	31 97       	sbiw	r30, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <debounce+0x18>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <debounce+0x1e>
 2ba:	00 00       	nop
		_delay_us(DEBOUNCE_TIME);
		if (bit_is_clear(PINB, button_pin)) {            /* still pressed */
 2bc:	23 b1       	in	r18, 0x03	; 3
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	a9 01       	movw	r20, r18
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <debounce+0x2c>
 2c4:	55 95       	asr	r21
 2c6:	47 95       	ror	r20
 2c8:	8a 95       	dec	r24
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <debounce+0x28>
 2cc:	40 fd       	sbrc	r20, 0
 2ce:	04 c0       	rjmp	.+8      	; 0x2d8 <debounce+0x3c>
			return 1;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	08 95       	ret
		}
	}
	return 0;
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	08 95       	ret
 2d8:	80 e0       	ldi	r24, 0x00	; 0
}
 2da:	08 95       	ret

000002dc <get_button_status>:

uint8_t get_button_status(uint8_t button)
{
	if (debounce(button)) {                        /* debounced button press */
 2dc:	0e 94 4e 01 	call	0x29c	; 0x29c <debounce>
 2e0:	88 23       	and	r24, r24
 2e2:	41 f0       	breq	.+16     	; 0x2f4 <get_button_status+0x18>
		if (buttonWasPressed == 0) {     /* but wasn't last time through */
 2e4:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <buttonWasPressed>
 2e8:	81 11       	cpse	r24, r1
 2ea:	07 c0       	rjmp	.+14     	; 0x2fa <get_button_status+0x1e>
			buttonWasPressed = 1;                      /* update the state */
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <buttonWasPressed>
			return 1;
 2f2:	08 95       	ret
		}
	}
	else {                                /* button is not pressed now */
		buttonWasPressed = 0;                        /* update the state */
 2f4:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <buttonWasPressed>
		return 0;
 2f8:	08 95       	ret
	}
}  
 2fa:	08 95       	ret

000002fc <yellow_LED_on>:
void yellow_LED_on(){
	R_Y_LED_PORT |= (1<<YELLOW_LED);
 2fc:	8b b1       	in	r24, 0x0b	; 11
 2fe:	88 60       	ori	r24, 0x08	; 8
 300:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<RED_LED);
 302:	8b b1       	in	r24, 0x0b	; 11
 304:	8b 7f       	andi	r24, 0xFB	; 251
 306:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 308:	85 b1       	in	r24, 0x05	; 5
 30a:	8e 7f       	andi	r24, 0xFE	; 254
 30c:	85 b9       	out	0x05, r24	; 5
 30e:	08 95       	ret

00000310 <green_LED_on>:
}

void green_LED_on(){
	G_LED_PORT |= (1<<GREEN_LED);
 310:	85 b1       	in	r24, 0x05	; 5
 312:	81 60       	ori	r24, 0x01	; 1
 314:	85 b9       	out	0x05, r24	; 5
	R_Y_LED_PORT &= ~(1<<RED_LED);
 316:	8b b1       	in	r24, 0x0b	; 11
 318:	8b 7f       	andi	r24, 0xFB	; 251
 31a:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 31c:	8b b1       	in	r24, 0x0b	; 11
 31e:	87 7f       	andi	r24, 0xF7	; 247
 320:	8b b9       	out	0x0b, r24	; 11
 322:	08 95       	ret

00000324 <red_LED_on>:
}

void red_LED_on(){
	R_Y_LED_PORT |= (1<<RED_LED);
 324:	8b b1       	in	r24, 0x0b	; 11
 326:	84 60       	ori	r24, 0x04	; 4
 328:	8b b9       	out	0x0b, r24	; 11
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 32a:	8b b1       	in	r24, 0x0b	; 11
 32c:	87 7f       	andi	r24, 0xF7	; 247
 32e:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 330:	85 b1       	in	r24, 0x05	; 5
 332:	8e 7f       	andi	r24, 0xFE	; 254
 334:	85 b9       	out	0x05, r24	; 5
 336:	08 95       	ret

00000338 <main>:
}


int main(void)
{	
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	cd b7       	in	r28, 0x3d	; 61
 33e:	de b7       	in	r29, 0x3e	; 62
 340:	2a 97       	sbiw	r28, 0x0a	; 10
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	f8 94       	cli
 346:	de bf       	out	0x3e, r29	; 62
 348:	0f be       	out	0x3f, r0	; 63
 34a:	cd bf       	out	0x3d, r28	; 61
	ADC_init();
 34c:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	/*USART_init();*/
	timer_init();
 350:	0e 94 5e 00 	call	0xbc	; 0xbc <timer_init>
	//buzzer_init();
	LCD_init();
 354:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_init>
	button_init();
 358:	0e 94 72 00 	call	0xe4	; 0xe4 <button_init>
	DDRD |= 0xFF; // LDC and LED outputs
 35c:	8a b1       	in	r24, 0x0a	; 10
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1<<DDB0); // green LED output
 362:	84 b1       	in	r24, 0x04	; 4
 364:	81 60       	ori	r24, 0x01	; 1
 366:	84 b9       	out	0x04, r24	; 4
	
	LCD_Print("Set Potmeter");
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	91 e0       	ldi	r25, 0x01	; 1
 36c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 370:	2f ef       	ldi	r18, 0xFF	; 255
 372:	87 ea       	ldi	r24, 0xA7	; 167
 374:	91 e6       	ldi	r25, 0x61	; 97
 376:	21 50       	subi	r18, 0x01	; 1
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	90 40       	sbci	r25, 0x00	; 0
 37c:	e1 f7       	brne	.-8      	; 0x376 <main+0x3e>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <main+0x48>
 380:	00 00       	nop
	_delay_ms(2000);
	

	green_LED_on();
 382:	0e 94 88 01 	call	0x310	; 0x310 <green_LED_on>
 386:	2f ef       	ldi	r18, 0xFF	; 255
 388:	89 e6       	ldi	r24, 0x69	; 105
 38a:	98 e1       	ldi	r25, 0x18	; 24
 38c:	21 50       	subi	r18, 0x01	; 1
 38e:	80 40       	sbci	r24, 0x00	; 0
 390:	90 40       	sbci	r25, 0x00	; 0
 392:	e1 f7       	brne	.-8      	; 0x38c <main+0x54>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x5e>
 396:	00 00       	nop
	_delay_ms(500);
	yellow_LED_on();
 398:	0e 94 7e 01 	call	0x2fc	; 0x2fc <yellow_LED_on>
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	89 e6       	ldi	r24, 0x69	; 105
 3a0:	98 e1       	ldi	r25, 0x18	; 24
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x6a>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <main+0x74>
 3ac:	00 00       	nop
	_delay_ms(500);
	red_LED_on();
 3ae:	0e 94 92 01 	call	0x324	; 0x324 <red_LED_on>
 3b2:	2f ef       	ldi	r18, 0xFF	; 255
 3b4:	89 e6       	ldi	r24, 0x69	; 105
 3b6:	98 e1       	ldi	r25, 0x18	; 24
 3b8:	21 50       	subi	r18, 0x01	; 1
 3ba:	80 40       	sbci	r24, 0x00	; 0
 3bc:	90 40       	sbci	r25, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <main+0x80>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0x8a>
 3c2:	00 00       	nop
	_delay_ms(500);
	
	LCD_Clear();
 3c4:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Clear>
 3c8:	3b c0       	rjmp	.+118    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
		
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
		{
			cli(); // Disable interrupts
 3ca:	f8 94       	cli
			volatile uint16_t pot_value = read_ADC(POT_PIN);
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	0e 94 24 01 	call	0x248	; 0x248 <read_ADC>
 3d2:	9a 87       	std	Y+10, r25	; 0x0a
 3d4:	89 87       	std	Y+9, r24	; 0x09
			seconds = ADC_to_seconds(pot_value);
 3d6:	89 85       	ldd	r24, Y+9	; 0x09
 3d8:	9a 85       	ldd	r25, Y+10	; 0x0a
 3da:	0e 94 39 01 	call	0x272	; 0x272 <ADC_to_seconds>
 3de:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 3e2:	2f ef       	ldi	r18, 0xFF	; 255
 3e4:	83 ec       	ldi	r24, 0xC3	; 195
 3e6:	99 e0       	ldi	r25, 0x09	; 9
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <main+0xb0>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <main+0xba>
 3f2:	00 00       	nop
			//printString("Set time at: ");
			//print_value(seconds);
			
			_delay_ms(200);
			char sec [8]; // holder for seconds
			itoa(seconds, sec, 10); 
 3f4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 3f8:	4a e0       	ldi	r20, 0x0A	; 10
 3fa:	50 e0       	ldi	r21, 0x00	; 0
 3fc:	be 01       	movw	r22, r28
 3fe:	6f 5f       	subi	r22, 0xFF	; 255
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 5d 04 	call	0x8ba	; 0x8ba <itoa>
			LCD_Print(sec); // prints to LCD
 408:	ce 01       	movw	r24, r28
 40a:	01 96       	adiw	r24, 0x01	; 1
 40c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_Print>
 410:	2f ef       	ldi	r18, 0xFF	; 255
 412:	83 ec       	ldi	r24, 0xC3	; 195
 414:	99 e0       	ldi	r25, 0x09	; 9
 416:	21 50       	subi	r18, 0x01	; 1
 418:	80 40       	sbci	r24, 0x00	; 0
 41a:	90 40       	sbci	r25, 0x00	; 0
 41c:	e1 f7       	brne	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 420:	00 00       	nop
			_delay_ms(200);
			LCD_Clear();
 422:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Clear>
			
			start_pressed = get_button_status(START_PIN);
 426:	82 e0       	ldi	r24, 0x02	; 2
 428:	0e 94 6e 01 	call	0x2dc	; 0x2dc <get_button_status>
 42c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <start_pressed>
			
			if (start_pressed)
 430:	88 23       	and	r24, r24
 432:	31 f0       	breq	.+12     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
			{
				timer_running = 1;
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <timer_running>
				green_LED_on();
 43a:	0e 94 88 01 	call	0x310	; 0x310 <green_LED_on>
				sei();	// enable interrupts, also starts the countdown
 43e:	78 94       	sei
	
	LCD_Clear();
		
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
 440:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <timer_running>
 444:	81 11       	cpse	r24, r1
 446:	fc cf       	rjmp	.-8      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 448:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <start_pressed>
 44c:	81 11       	cpse	r24, r1
 44e:	f8 cf       	rjmp	.-16     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 450:	bc cf       	rjmp	.-136    	; 0x3ca <main+0x92>

00000452 <__vector_11>:
	}
	return 0;
}

ISR (TIMER1_COMPA_vect) // action to be done every 1 sec
{
 452:	1f 92       	push	r1
 454:	0f 92       	push	r0
 456:	0f b6       	in	r0, 0x3f	; 63
 458:	0f 92       	push	r0
 45a:	11 24       	eor	r1, r1
 45c:	2f 93       	push	r18
 45e:	3f 93       	push	r19
 460:	4f 93       	push	r20
 462:	5f 93       	push	r21
 464:	6f 93       	push	r22
 466:	7f 93       	push	r23
 468:	8f 93       	push	r24
 46a:	9f 93       	push	r25
 46c:	af 93       	push	r26
 46e:	bf 93       	push	r27
 470:	ef 93       	push	r30
 472:	ff 93       	push	r31
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	28 97       	sbiw	r28, 0x08	; 8
 47e:	de bf       	out	0x3e, r29	; 62
 480:	cd bf       	out	0x3d, r28	; 61
	 seconds--; // Subtracts 1 from the timer value
 482:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 486:	81 50       	subi	r24, 0x01	; 1
 488:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
	if (seconds == 0) 
 48c:	81 11       	cpse	r24, r1
 48e:	16 c0       	rjmp	.+44     	; 0x4bc <__vector_11+0x6a>
	{
		//printString("All done!");
		LCD_Print("Finished!");
 490:	8f e0       	ldi	r24, 0x0F	; 15
 492:	91 e0       	ldi	r25, 0x01	; 1
 494:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_Print>
 498:	2f ef       	ldi	r18, 0xFF	; 255
 49a:	87 ea       	ldi	r24, 0xA7	; 167
 49c:	91 e6       	ldi	r25, 0x61	; 97
 49e:	21 50       	subi	r18, 0x01	; 1
 4a0:	80 40       	sbci	r24, 0x00	; 0
 4a2:	90 40       	sbci	r25, 0x00	; 0
 4a4:	e1 f7       	brne	.-8      	; 0x49e <__vector_11+0x4c>
 4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <__vector_11+0x56>
 4a8:	00 00       	nop
		_delay_ms(2000);
		LCD_Clear();
 4aa:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Clear>
		red_LED_on();
 4ae:	0e 94 92 01 	call	0x324	; 0x324 <red_LED_on>
		//buzzer();
		timer_running = 0;
 4b2:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <timer_running>
		start_pressed = 0;
 4b6:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <start_pressed>
 4ba:	19 c0       	rjmp	.+50     	; 0x4ee <__vector_11+0x9c>
	}
	else
	{
// 		printString("Time left: ");
// 		print_value(seconds);
		LCD_Clear();
 4bc:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Clear>
		char sec [8];
		itoa(seconds, sec, 10);
 4c0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 4c4:	4a e0       	ldi	r20, 0x0A	; 10
 4c6:	50 e0       	ldi	r21, 0x00	; 0
 4c8:	be 01       	movw	r22, r28
 4ca:	6f 5f       	subi	r22, 0xFF	; 255
 4cc:	7f 4f       	sbci	r23, 0xFF	; 255
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 5d 04 	call	0x8ba	; 0x8ba <itoa>
		LCD_Print(sec);
 4d4:	ce 01       	movw	r24, r28
 4d6:	01 96       	adiw	r24, 0x01	; 1
 4d8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_Print>
 4dc:	2f ef       	ldi	r18, 0xFF	; 255
 4de:	81 ee       	ldi	r24, 0xE1	; 225
 4e0:	94 e0       	ldi	r25, 0x04	; 4
 4e2:	21 50       	subi	r18, 0x01	; 1
 4e4:	80 40       	sbci	r24, 0x00	; 0
 4e6:	90 40       	sbci	r25, 0x00	; 0
 4e8:	e1 f7       	brne	.-8      	; 0x4e2 <__vector_11+0x90>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__vector_11+0x9a>
 4ec:	00 00       	nop
		_delay_ms(100);
	}
}
 4ee:	28 96       	adiw	r28, 0x08	; 8
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	f8 94       	cli
 4f4:	de bf       	out	0x3e, r29	; 62
 4f6:	0f be       	out	0x3f, r0	; 63
 4f8:	cd bf       	out	0x3d, r28	; 61
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	ff 91       	pop	r31
 500:	ef 91       	pop	r30
 502:	bf 91       	pop	r27
 504:	af 91       	pop	r26
 506:	9f 91       	pop	r25
 508:	8f 91       	pop	r24
 50a:	7f 91       	pop	r23
 50c:	6f 91       	pop	r22
 50e:	5f 91       	pop	r21
 510:	4f 91       	pop	r20
 512:	3f 91       	pop	r19
 514:	2f 91       	pop	r18
 516:	0f 90       	pop	r0
 518:	0f be       	out	0x3f, r0	; 63
 51a:	0f 90       	pop	r0
 51c:	1f 90       	pop	r1
 51e:	18 95       	reti

00000520 <__vector_4>:

ISR (PCINT1_vect)
{
 520:	1f 92       	push	r1
 522:	0f 92       	push	r0
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	0f 92       	push	r0
 528:	11 24       	eor	r1, r1
 52a:	2f 93       	push	r18
 52c:	3f 93       	push	r19
 52e:	4f 93       	push	r20
 530:	5f 93       	push	r21
 532:	6f 93       	push	r22
 534:	7f 93       	push	r23
 536:	8f 93       	push	r24
 538:	9f 93       	push	r25
 53a:	af 93       	push	r26
 53c:	bf 93       	push	r27
 53e:	ef 93       	push	r30
 540:	ff 93       	push	r31
	//printString("PAUSE!");
	yellow_LED_on();
 542:	0e 94 7e 01 	call	0x2fc	; 0x2fc <yellow_LED_on>
	LCD_Clear();
 546:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Clear>
	LCD_Print("Pause");
 54a:	89 e1       	ldi	r24, 0x19	; 25
 54c:	91 e0       	ldi	r25, 0x01	; 1
 54e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_Print>
	while(get_button_status(START_PIN) == 0) {} // wait for start button to be pressed
 552:	82 e0       	ldi	r24, 0x02	; 2
 554:	0e 94 6e 01 	call	0x2dc	; 0x2dc <get_button_status>
 558:	88 23       	and	r24, r24
 55a:	d9 f3       	breq	.-10     	; 0x552 <__vector_4+0x32>
	green_LED_on();
 55c:	0e 94 88 01 	call	0x310	; 0x310 <green_LED_on>
 560:	ff 91       	pop	r31
 562:	ef 91       	pop	r30
 564:	bf 91       	pop	r27
 566:	af 91       	pop	r26
 568:	9f 91       	pop	r25
 56a:	8f 91       	pop	r24
 56c:	7f 91       	pop	r23
 56e:	6f 91       	pop	r22
 570:	5f 91       	pop	r21
 572:	4f 91       	pop	r20
 574:	3f 91       	pop	r19
 576:	2f 91       	pop	r18
 578:	0f 90       	pop	r0
 57a:	0f be       	out	0x3f, r0	; 63
 57c:	0f 90       	pop	r0
 57e:	1f 90       	pop	r1
 580:	18 95       	reti

00000582 <__divsf3>:
 582:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__divsf3x>
 586:	0c 94 b6 03 	jmp	0x76c	; 0x76c <__fp_round>
 58a:	0e 94 af 03 	call	0x75e	; 0x75e <__fp_pscB>
 58e:	58 f0       	brcs	.+22     	; 0x5a6 <__divsf3+0x24>
 590:	0e 94 a8 03 	call	0x750	; 0x750 <__fp_pscA>
 594:	40 f0       	brcs	.+16     	; 0x5a6 <__divsf3+0x24>
 596:	29 f4       	brne	.+10     	; 0x5a2 <__divsf3+0x20>
 598:	5f 3f       	cpi	r21, 0xFF	; 255
 59a:	29 f0       	breq	.+10     	; 0x5a6 <__divsf3+0x24>
 59c:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__fp_inf>
 5a0:	51 11       	cpse	r21, r1
 5a2:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__fp_szero>
 5a6:	0c 94 a5 03 	jmp	0x74a	; 0x74a <__fp_nan>

000005aa <__divsf3x>:
 5aa:	0e 94 c7 03 	call	0x78e	; 0x78e <__fp_split3>
 5ae:	68 f3       	brcs	.-38     	; 0x58a <__divsf3+0x8>

000005b0 <__divsf3_pse>:
 5b0:	99 23       	and	r25, r25
 5b2:	b1 f3       	breq	.-20     	; 0x5a0 <__divsf3+0x1e>
 5b4:	55 23       	and	r21, r21
 5b6:	91 f3       	breq	.-28     	; 0x59c <__divsf3+0x1a>
 5b8:	95 1b       	sub	r25, r21
 5ba:	55 0b       	sbc	r21, r21
 5bc:	bb 27       	eor	r27, r27
 5be:	aa 27       	eor	r26, r26
 5c0:	62 17       	cp	r22, r18
 5c2:	73 07       	cpc	r23, r19
 5c4:	84 07       	cpc	r24, r20
 5c6:	38 f0       	brcs	.+14     	; 0x5d6 <__divsf3_pse+0x26>
 5c8:	9f 5f       	subi	r25, 0xFF	; 255
 5ca:	5f 4f       	sbci	r21, 0xFF	; 255
 5cc:	22 0f       	add	r18, r18
 5ce:	33 1f       	adc	r19, r19
 5d0:	44 1f       	adc	r20, r20
 5d2:	aa 1f       	adc	r26, r26
 5d4:	a9 f3       	breq	.-22     	; 0x5c0 <__divsf3_pse+0x10>
 5d6:	35 d0       	rcall	.+106    	; 0x642 <__divsf3_pse+0x92>
 5d8:	0e 2e       	mov	r0, r30
 5da:	3a f0       	brmi	.+14     	; 0x5ea <__divsf3_pse+0x3a>
 5dc:	e0 e8       	ldi	r30, 0x80	; 128
 5de:	32 d0       	rcall	.+100    	; 0x644 <__divsf3_pse+0x94>
 5e0:	91 50       	subi	r25, 0x01	; 1
 5e2:	50 40       	sbci	r21, 0x00	; 0
 5e4:	e6 95       	lsr	r30
 5e6:	00 1c       	adc	r0, r0
 5e8:	ca f7       	brpl	.-14     	; 0x5dc <__divsf3_pse+0x2c>
 5ea:	2b d0       	rcall	.+86     	; 0x642 <__divsf3_pse+0x92>
 5ec:	fe 2f       	mov	r31, r30
 5ee:	29 d0       	rcall	.+82     	; 0x642 <__divsf3_pse+0x92>
 5f0:	66 0f       	add	r22, r22
 5f2:	77 1f       	adc	r23, r23
 5f4:	88 1f       	adc	r24, r24
 5f6:	bb 1f       	adc	r27, r27
 5f8:	26 17       	cp	r18, r22
 5fa:	37 07       	cpc	r19, r23
 5fc:	48 07       	cpc	r20, r24
 5fe:	ab 07       	cpc	r26, r27
 600:	b0 e8       	ldi	r27, 0x80	; 128
 602:	09 f0       	breq	.+2      	; 0x606 <__divsf3_pse+0x56>
 604:	bb 0b       	sbc	r27, r27
 606:	80 2d       	mov	r24, r0
 608:	bf 01       	movw	r22, r30
 60a:	ff 27       	eor	r31, r31
 60c:	93 58       	subi	r25, 0x83	; 131
 60e:	5f 4f       	sbci	r21, 0xFF	; 255
 610:	3a f0       	brmi	.+14     	; 0x620 <__divsf3_pse+0x70>
 612:	9e 3f       	cpi	r25, 0xFE	; 254
 614:	51 05       	cpc	r21, r1
 616:	78 f0       	brcs	.+30     	; 0x636 <__divsf3_pse+0x86>
 618:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__fp_inf>
 61c:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__fp_szero>
 620:	5f 3f       	cpi	r21, 0xFF	; 255
 622:	e4 f3       	brlt	.-8      	; 0x61c <__divsf3_pse+0x6c>
 624:	98 3e       	cpi	r25, 0xE8	; 232
 626:	d4 f3       	brlt	.-12     	; 0x61c <__divsf3_pse+0x6c>
 628:	86 95       	lsr	r24
 62a:	77 95       	ror	r23
 62c:	67 95       	ror	r22
 62e:	b7 95       	ror	r27
 630:	f7 95       	ror	r31
 632:	9f 5f       	subi	r25, 0xFF	; 255
 634:	c9 f7       	brne	.-14     	; 0x628 <__divsf3_pse+0x78>
 636:	88 0f       	add	r24, r24
 638:	91 1d       	adc	r25, r1
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24
 63e:	97 f9       	bld	r25, 7
 640:	08 95       	ret
 642:	e1 e0       	ldi	r30, 0x01	; 1
 644:	66 0f       	add	r22, r22
 646:	77 1f       	adc	r23, r23
 648:	88 1f       	adc	r24, r24
 64a:	bb 1f       	adc	r27, r27
 64c:	62 17       	cp	r22, r18
 64e:	73 07       	cpc	r23, r19
 650:	84 07       	cpc	r24, r20
 652:	ba 07       	cpc	r27, r26
 654:	20 f0       	brcs	.+8      	; 0x65e <__divsf3_pse+0xae>
 656:	62 1b       	sub	r22, r18
 658:	73 0b       	sbc	r23, r19
 65a:	84 0b       	sbc	r24, r20
 65c:	ba 0b       	sbc	r27, r26
 65e:	ee 1f       	adc	r30, r30
 660:	88 f7       	brcc	.-30     	; 0x644 <__divsf3_pse+0x94>
 662:	e0 95       	com	r30
 664:	08 95       	ret

00000666 <__fixunssfsi>:
 666:	0e 94 cf 03 	call	0x79e	; 0x79e <__fp_splitA>
 66a:	88 f0       	brcs	.+34     	; 0x68e <__fixunssfsi+0x28>
 66c:	9f 57       	subi	r25, 0x7F	; 127
 66e:	98 f0       	brcs	.+38     	; 0x696 <__fixunssfsi+0x30>
 670:	b9 2f       	mov	r27, r25
 672:	99 27       	eor	r25, r25
 674:	b7 51       	subi	r27, 0x17	; 23
 676:	b0 f0       	brcs	.+44     	; 0x6a4 <__fixunssfsi+0x3e>
 678:	e1 f0       	breq	.+56     	; 0x6b2 <__fixunssfsi+0x4c>
 67a:	66 0f       	add	r22, r22
 67c:	77 1f       	adc	r23, r23
 67e:	88 1f       	adc	r24, r24
 680:	99 1f       	adc	r25, r25
 682:	1a f0       	brmi	.+6      	; 0x68a <__fixunssfsi+0x24>
 684:	ba 95       	dec	r27
 686:	c9 f7       	brne	.-14     	; 0x67a <__fixunssfsi+0x14>
 688:	14 c0       	rjmp	.+40     	; 0x6b2 <__fixunssfsi+0x4c>
 68a:	b1 30       	cpi	r27, 0x01	; 1
 68c:	91 f0       	breq	.+36     	; 0x6b2 <__fixunssfsi+0x4c>
 68e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fp_zero>
 692:	b1 e0       	ldi	r27, 0x01	; 1
 694:	08 95       	ret
 696:	0c 94 e9 03 	jmp	0x7d2	; 0x7d2 <__fp_zero>
 69a:	67 2f       	mov	r22, r23
 69c:	78 2f       	mov	r23, r24
 69e:	88 27       	eor	r24, r24
 6a0:	b8 5f       	subi	r27, 0xF8	; 248
 6a2:	39 f0       	breq	.+14     	; 0x6b2 <__fixunssfsi+0x4c>
 6a4:	b9 3f       	cpi	r27, 0xF9	; 249
 6a6:	cc f3       	brlt	.-14     	; 0x69a <__fixunssfsi+0x34>
 6a8:	86 95       	lsr	r24
 6aa:	77 95       	ror	r23
 6ac:	67 95       	ror	r22
 6ae:	b3 95       	inc	r27
 6b0:	d9 f7       	brne	.-10     	; 0x6a8 <__fixunssfsi+0x42>
 6b2:	3e f4       	brtc	.+14     	; 0x6c2 <__fixunssfsi+0x5c>
 6b4:	90 95       	com	r25
 6b6:	80 95       	com	r24
 6b8:	70 95       	com	r23
 6ba:	61 95       	neg	r22
 6bc:	7f 4f       	sbci	r23, 0xFF	; 255
 6be:	8f 4f       	sbci	r24, 0xFF	; 255
 6c0:	9f 4f       	sbci	r25, 0xFF	; 255
 6c2:	08 95       	ret

000006c4 <__floatunsisf>:
 6c4:	e8 94       	clt
 6c6:	09 c0       	rjmp	.+18     	; 0x6da <__floatsisf+0x12>

000006c8 <__floatsisf>:
 6c8:	97 fb       	bst	r25, 7
 6ca:	3e f4       	brtc	.+14     	; 0x6da <__floatsisf+0x12>
 6cc:	90 95       	com	r25
 6ce:	80 95       	com	r24
 6d0:	70 95       	com	r23
 6d2:	61 95       	neg	r22
 6d4:	7f 4f       	sbci	r23, 0xFF	; 255
 6d6:	8f 4f       	sbci	r24, 0xFF	; 255
 6d8:	9f 4f       	sbci	r25, 0xFF	; 255
 6da:	99 23       	and	r25, r25
 6dc:	a9 f0       	breq	.+42     	; 0x708 <__floatsisf+0x40>
 6de:	f9 2f       	mov	r31, r25
 6e0:	96 e9       	ldi	r25, 0x96	; 150
 6e2:	bb 27       	eor	r27, r27
 6e4:	93 95       	inc	r25
 6e6:	f6 95       	lsr	r31
 6e8:	87 95       	ror	r24
 6ea:	77 95       	ror	r23
 6ec:	67 95       	ror	r22
 6ee:	b7 95       	ror	r27
 6f0:	f1 11       	cpse	r31, r1
 6f2:	f8 cf       	rjmp	.-16     	; 0x6e4 <__floatsisf+0x1c>
 6f4:	fa f4       	brpl	.+62     	; 0x734 <__floatsisf+0x6c>
 6f6:	bb 0f       	add	r27, r27
 6f8:	11 f4       	brne	.+4      	; 0x6fe <__floatsisf+0x36>
 6fa:	60 ff       	sbrs	r22, 0
 6fc:	1b c0       	rjmp	.+54     	; 0x734 <__floatsisf+0x6c>
 6fe:	6f 5f       	subi	r22, 0xFF	; 255
 700:	7f 4f       	sbci	r23, 0xFF	; 255
 702:	8f 4f       	sbci	r24, 0xFF	; 255
 704:	9f 4f       	sbci	r25, 0xFF	; 255
 706:	16 c0       	rjmp	.+44     	; 0x734 <__floatsisf+0x6c>
 708:	88 23       	and	r24, r24
 70a:	11 f0       	breq	.+4      	; 0x710 <__floatsisf+0x48>
 70c:	96 e9       	ldi	r25, 0x96	; 150
 70e:	11 c0       	rjmp	.+34     	; 0x732 <__floatsisf+0x6a>
 710:	77 23       	and	r23, r23
 712:	21 f0       	breq	.+8      	; 0x71c <__floatsisf+0x54>
 714:	9e e8       	ldi	r25, 0x8E	; 142
 716:	87 2f       	mov	r24, r23
 718:	76 2f       	mov	r23, r22
 71a:	05 c0       	rjmp	.+10     	; 0x726 <__floatsisf+0x5e>
 71c:	66 23       	and	r22, r22
 71e:	71 f0       	breq	.+28     	; 0x73c <__floatsisf+0x74>
 720:	96 e8       	ldi	r25, 0x86	; 134
 722:	86 2f       	mov	r24, r22
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	60 e0       	ldi	r22, 0x00	; 0
 728:	2a f0       	brmi	.+10     	; 0x734 <__floatsisf+0x6c>
 72a:	9a 95       	dec	r25
 72c:	66 0f       	add	r22, r22
 72e:	77 1f       	adc	r23, r23
 730:	88 1f       	adc	r24, r24
 732:	da f7       	brpl	.-10     	; 0x72a <__floatsisf+0x62>
 734:	88 0f       	add	r24, r24
 736:	96 95       	lsr	r25
 738:	87 95       	ror	r24
 73a:	97 f9       	bld	r25, 7
 73c:	08 95       	ret

0000073e <__fp_inf>:
 73e:	97 f9       	bld	r25, 7
 740:	9f 67       	ori	r25, 0x7F	; 127
 742:	80 e8       	ldi	r24, 0x80	; 128
 744:	70 e0       	ldi	r23, 0x00	; 0
 746:	60 e0       	ldi	r22, 0x00	; 0
 748:	08 95       	ret

0000074a <__fp_nan>:
 74a:	9f ef       	ldi	r25, 0xFF	; 255
 74c:	80 ec       	ldi	r24, 0xC0	; 192
 74e:	08 95       	ret

00000750 <__fp_pscA>:
 750:	00 24       	eor	r0, r0
 752:	0a 94       	dec	r0
 754:	16 16       	cp	r1, r22
 756:	17 06       	cpc	r1, r23
 758:	18 06       	cpc	r1, r24
 75a:	09 06       	cpc	r0, r25
 75c:	08 95       	ret

0000075e <__fp_pscB>:
 75e:	00 24       	eor	r0, r0
 760:	0a 94       	dec	r0
 762:	12 16       	cp	r1, r18
 764:	13 06       	cpc	r1, r19
 766:	14 06       	cpc	r1, r20
 768:	05 06       	cpc	r0, r21
 76a:	08 95       	ret

0000076c <__fp_round>:
 76c:	09 2e       	mov	r0, r25
 76e:	03 94       	inc	r0
 770:	00 0c       	add	r0, r0
 772:	11 f4       	brne	.+4      	; 0x778 <__fp_round+0xc>
 774:	88 23       	and	r24, r24
 776:	52 f0       	brmi	.+20     	; 0x78c <__fp_round+0x20>
 778:	bb 0f       	add	r27, r27
 77a:	40 f4       	brcc	.+16     	; 0x78c <__fp_round+0x20>
 77c:	bf 2b       	or	r27, r31
 77e:	11 f4       	brne	.+4      	; 0x784 <__fp_round+0x18>
 780:	60 ff       	sbrs	r22, 0
 782:	04 c0       	rjmp	.+8      	; 0x78c <__fp_round+0x20>
 784:	6f 5f       	subi	r22, 0xFF	; 255
 786:	7f 4f       	sbci	r23, 0xFF	; 255
 788:	8f 4f       	sbci	r24, 0xFF	; 255
 78a:	9f 4f       	sbci	r25, 0xFF	; 255
 78c:	08 95       	ret

0000078e <__fp_split3>:
 78e:	57 fd       	sbrc	r21, 7
 790:	90 58       	subi	r25, 0x80	; 128
 792:	44 0f       	add	r20, r20
 794:	55 1f       	adc	r21, r21
 796:	59 f0       	breq	.+22     	; 0x7ae <__fp_splitA+0x10>
 798:	5f 3f       	cpi	r21, 0xFF	; 255
 79a:	71 f0       	breq	.+28     	; 0x7b8 <__fp_splitA+0x1a>
 79c:	47 95       	ror	r20

0000079e <__fp_splitA>:
 79e:	88 0f       	add	r24, r24
 7a0:	97 fb       	bst	r25, 7
 7a2:	99 1f       	adc	r25, r25
 7a4:	61 f0       	breq	.+24     	; 0x7be <__fp_splitA+0x20>
 7a6:	9f 3f       	cpi	r25, 0xFF	; 255
 7a8:	79 f0       	breq	.+30     	; 0x7c8 <__fp_splitA+0x2a>
 7aa:	87 95       	ror	r24
 7ac:	08 95       	ret
 7ae:	12 16       	cp	r1, r18
 7b0:	13 06       	cpc	r1, r19
 7b2:	14 06       	cpc	r1, r20
 7b4:	55 1f       	adc	r21, r21
 7b6:	f2 cf       	rjmp	.-28     	; 0x79c <__fp_split3+0xe>
 7b8:	46 95       	lsr	r20
 7ba:	f1 df       	rcall	.-30     	; 0x79e <__fp_splitA>
 7bc:	08 c0       	rjmp	.+16     	; 0x7ce <__fp_splitA+0x30>
 7be:	16 16       	cp	r1, r22
 7c0:	17 06       	cpc	r1, r23
 7c2:	18 06       	cpc	r1, r24
 7c4:	99 1f       	adc	r25, r25
 7c6:	f1 cf       	rjmp	.-30     	; 0x7aa <__fp_splitA+0xc>
 7c8:	86 95       	lsr	r24
 7ca:	71 05       	cpc	r23, r1
 7cc:	61 05       	cpc	r22, r1
 7ce:	08 94       	sec
 7d0:	08 95       	ret

000007d2 <__fp_zero>:
 7d2:	e8 94       	clt

000007d4 <__fp_szero>:
 7d4:	bb 27       	eor	r27, r27
 7d6:	66 27       	eor	r22, r22
 7d8:	77 27       	eor	r23, r23
 7da:	cb 01       	movw	r24, r22
 7dc:	97 f9       	bld	r25, 7
 7de:	08 95       	ret

000007e0 <__mulsf3>:
 7e0:	0e 94 03 04 	call	0x806	; 0x806 <__mulsf3x>
 7e4:	0c 94 b6 03 	jmp	0x76c	; 0x76c <__fp_round>
 7e8:	0e 94 a8 03 	call	0x750	; 0x750 <__fp_pscA>
 7ec:	38 f0       	brcs	.+14     	; 0x7fc <__mulsf3+0x1c>
 7ee:	0e 94 af 03 	call	0x75e	; 0x75e <__fp_pscB>
 7f2:	20 f0       	brcs	.+8      	; 0x7fc <__mulsf3+0x1c>
 7f4:	95 23       	and	r25, r21
 7f6:	11 f0       	breq	.+4      	; 0x7fc <__mulsf3+0x1c>
 7f8:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__fp_inf>
 7fc:	0c 94 a5 03 	jmp	0x74a	; 0x74a <__fp_nan>
 800:	11 24       	eor	r1, r1
 802:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__fp_szero>

00000806 <__mulsf3x>:
 806:	0e 94 c7 03 	call	0x78e	; 0x78e <__fp_split3>
 80a:	70 f3       	brcs	.-36     	; 0x7e8 <__mulsf3+0x8>

0000080c <__mulsf3_pse>:
 80c:	95 9f       	mul	r25, r21
 80e:	c1 f3       	breq	.-16     	; 0x800 <__DATA_REGION_LENGTH__>
 810:	95 0f       	add	r25, r21
 812:	50 e0       	ldi	r21, 0x00	; 0
 814:	55 1f       	adc	r21, r21
 816:	62 9f       	mul	r22, r18
 818:	f0 01       	movw	r30, r0
 81a:	72 9f       	mul	r23, r18
 81c:	bb 27       	eor	r27, r27
 81e:	f0 0d       	add	r31, r0
 820:	b1 1d       	adc	r27, r1
 822:	63 9f       	mul	r22, r19
 824:	aa 27       	eor	r26, r26
 826:	f0 0d       	add	r31, r0
 828:	b1 1d       	adc	r27, r1
 82a:	aa 1f       	adc	r26, r26
 82c:	64 9f       	mul	r22, r20
 82e:	66 27       	eor	r22, r22
 830:	b0 0d       	add	r27, r0
 832:	a1 1d       	adc	r26, r1
 834:	66 1f       	adc	r22, r22
 836:	82 9f       	mul	r24, r18
 838:	22 27       	eor	r18, r18
 83a:	b0 0d       	add	r27, r0
 83c:	a1 1d       	adc	r26, r1
 83e:	62 1f       	adc	r22, r18
 840:	73 9f       	mul	r23, r19
 842:	b0 0d       	add	r27, r0
 844:	a1 1d       	adc	r26, r1
 846:	62 1f       	adc	r22, r18
 848:	83 9f       	mul	r24, r19
 84a:	a0 0d       	add	r26, r0
 84c:	61 1d       	adc	r22, r1
 84e:	22 1f       	adc	r18, r18
 850:	74 9f       	mul	r23, r20
 852:	33 27       	eor	r19, r19
 854:	a0 0d       	add	r26, r0
 856:	61 1d       	adc	r22, r1
 858:	23 1f       	adc	r18, r19
 85a:	84 9f       	mul	r24, r20
 85c:	60 0d       	add	r22, r0
 85e:	21 1d       	adc	r18, r1
 860:	82 2f       	mov	r24, r18
 862:	76 2f       	mov	r23, r22
 864:	6a 2f       	mov	r22, r26
 866:	11 24       	eor	r1, r1
 868:	9f 57       	subi	r25, 0x7F	; 127
 86a:	50 40       	sbci	r21, 0x00	; 0
 86c:	9a f0       	brmi	.+38     	; 0x894 <__mulsf3_pse+0x88>
 86e:	f1 f0       	breq	.+60     	; 0x8ac <__mulsf3_pse+0xa0>
 870:	88 23       	and	r24, r24
 872:	4a f0       	brmi	.+18     	; 0x886 <__mulsf3_pse+0x7a>
 874:	ee 0f       	add	r30, r30
 876:	ff 1f       	adc	r31, r31
 878:	bb 1f       	adc	r27, r27
 87a:	66 1f       	adc	r22, r22
 87c:	77 1f       	adc	r23, r23
 87e:	88 1f       	adc	r24, r24
 880:	91 50       	subi	r25, 0x01	; 1
 882:	50 40       	sbci	r21, 0x00	; 0
 884:	a9 f7       	brne	.-22     	; 0x870 <__mulsf3_pse+0x64>
 886:	9e 3f       	cpi	r25, 0xFE	; 254
 888:	51 05       	cpc	r21, r1
 88a:	80 f0       	brcs	.+32     	; 0x8ac <__mulsf3_pse+0xa0>
 88c:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__fp_inf>
 890:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__fp_szero>
 894:	5f 3f       	cpi	r21, 0xFF	; 255
 896:	e4 f3       	brlt	.-8      	; 0x890 <__mulsf3_pse+0x84>
 898:	98 3e       	cpi	r25, 0xE8	; 232
 89a:	d4 f3       	brlt	.-12     	; 0x890 <__mulsf3_pse+0x84>
 89c:	86 95       	lsr	r24
 89e:	77 95       	ror	r23
 8a0:	67 95       	ror	r22
 8a2:	b7 95       	ror	r27
 8a4:	f7 95       	ror	r31
 8a6:	e7 95       	ror	r30
 8a8:	9f 5f       	subi	r25, 0xFF	; 255
 8aa:	c1 f7       	brne	.-16     	; 0x89c <__mulsf3_pse+0x90>
 8ac:	fe 2b       	or	r31, r30
 8ae:	88 0f       	add	r24, r24
 8b0:	91 1d       	adc	r25, r1
 8b2:	96 95       	lsr	r25
 8b4:	87 95       	ror	r24
 8b6:	97 f9       	bld	r25, 7
 8b8:	08 95       	ret

000008ba <itoa>:
 8ba:	45 32       	cpi	r20, 0x25	; 37
 8bc:	51 05       	cpc	r21, r1
 8be:	20 f4       	brcc	.+8      	; 0x8c8 <itoa+0xe>
 8c0:	42 30       	cpi	r20, 0x02	; 2
 8c2:	10 f0       	brcs	.+4      	; 0x8c8 <itoa+0xe>
 8c4:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__itoa_ncheck>
 8c8:	fb 01       	movw	r30, r22
 8ca:	10 82       	st	Z, r1
 8cc:	cb 01       	movw	r24, r22
 8ce:	08 95       	ret

000008d0 <__itoa_ncheck>:
 8d0:	bb 27       	eor	r27, r27
 8d2:	4a 30       	cpi	r20, 0x0A	; 10
 8d4:	31 f4       	brne	.+12     	; 0x8e2 <__itoa_ncheck+0x12>
 8d6:	99 23       	and	r25, r25
 8d8:	22 f4       	brpl	.+8      	; 0x8e2 <__itoa_ncheck+0x12>
 8da:	bd e2       	ldi	r27, 0x2D	; 45
 8dc:	90 95       	com	r25
 8de:	81 95       	neg	r24
 8e0:	9f 4f       	sbci	r25, 0xFF	; 255
 8e2:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <__utoa_common>

000008e6 <__utoa_ncheck>:
 8e6:	bb 27       	eor	r27, r27

000008e8 <__utoa_common>:
 8e8:	fb 01       	movw	r30, r22
 8ea:	55 27       	eor	r21, r21
 8ec:	aa 27       	eor	r26, r26
 8ee:	88 0f       	add	r24, r24
 8f0:	99 1f       	adc	r25, r25
 8f2:	aa 1f       	adc	r26, r26
 8f4:	a4 17       	cp	r26, r20
 8f6:	10 f0       	brcs	.+4      	; 0x8fc <__utoa_common+0x14>
 8f8:	a4 1b       	sub	r26, r20
 8fa:	83 95       	inc	r24
 8fc:	50 51       	subi	r21, 0x10	; 16
 8fe:	b9 f7       	brne	.-18     	; 0x8ee <__utoa_common+0x6>
 900:	a0 5d       	subi	r26, 0xD0	; 208
 902:	aa 33       	cpi	r26, 0x3A	; 58
 904:	08 f0       	brcs	.+2      	; 0x908 <__stack+0x9>
 906:	a9 5d       	subi	r26, 0xD9	; 217
 908:	a1 93       	st	Z+, r26
 90a:	00 97       	sbiw	r24, 0x00	; 0
 90c:	79 f7       	brne	.-34     	; 0x8ec <__utoa_common+0x4>
 90e:	b1 11       	cpse	r27, r1
 910:	b1 93       	st	Z+, r27
 912:	11 92       	st	Z+, r1
 914:	cb 01       	movw	r24, r22
 916:	0c 94 8d 04 	jmp	0x91a	; 0x91a <strrev>

0000091a <strrev>:
 91a:	dc 01       	movw	r26, r24
 91c:	fc 01       	movw	r30, r24
 91e:	67 2f       	mov	r22, r23
 920:	71 91       	ld	r23, Z+
 922:	77 23       	and	r23, r23
 924:	e1 f7       	brne	.-8      	; 0x91e <strrev+0x4>
 926:	32 97       	sbiw	r30, 0x02	; 2
 928:	04 c0       	rjmp	.+8      	; 0x932 <strrev+0x18>
 92a:	7c 91       	ld	r23, X
 92c:	6d 93       	st	X+, r22
 92e:	70 83       	st	Z, r23
 930:	62 91       	ld	r22, -Z
 932:	ae 17       	cp	r26, r30
 934:	bf 07       	cpc	r27, r31
 936:	c8 f3       	brcs	.-14     	; 0x92a <strrev+0x10>
 938:	08 95       	ret

0000093a <_exit>:
 93a:	f8 94       	cli

0000093c <__stop_program>:
 93c:	ff cf       	rjmp	.-2      	; 0x93c <__stop_program>
