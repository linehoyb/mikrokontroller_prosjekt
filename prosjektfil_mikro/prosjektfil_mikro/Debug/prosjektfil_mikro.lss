
prosjektfil_mikro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000008a2  00000936  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080013c  0080013c  00000972  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000972  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000009e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001147  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000888  00000000  00000000  00001bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007d7  00000000  00000000  0000247b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000026c  00000000  00000000  00002c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000572  00000000  00000000  00002ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a6a  00000000  00000000  00003432  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003e9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 2b 02 	jmp	0x456	; 0x456 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ea       	ldi	r30, 0xA2	; 162
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 33       	cpi	r26, 0x3C	; 60
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e3       	ldi	r26, 0x3C	; 60
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 34       	cpi	r26, 0x40	; 64
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <main>
  9e:	0c 94 4f 04 	jmp	0x89e	; 0x89e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
		DDRB = (1<<DDB2);
		_delay_ms(1000);
		DDRB = (0<<DDB2);
		_delay_ms(500);
	}
}
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	87 68       	ori	r24, 0x87	; 135
  b8:	80 83       	st	Z, r24
  ba:	08 95       	ret

000000bc <USART_init>:
  bc:	87 e6       	ldi	r24, 0x67	; 103
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  c8:	88 e1       	ldi	r24, 0x18	; 24
  ca:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  ce:	08 95       	ret

000000d0 <timer_init>:
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	9d e3       	ldi	r25, 0x3D	; 61
  d4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  dc:	e1 e8       	ldi	r30, 0x81	; 129
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	80 83       	st	Z, r24
  e6:	af e6       	ldi	r26, 0x6F	; 111
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	8c 91       	ld	r24, X
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	8c 93       	st	X, r24
  f0:	80 81       	ld	r24, Z
  f2:	85 60       	ori	r24, 0x05	; 5
  f4:	80 83       	st	Z, r24
  f6:	08 95       	ret

000000f8 <buzzer_init>:
  f8:	84 e0       	ldi	r24, 0x04	; 4
  fa:	84 b9       	out	0x04, r24	; 4
  fc:	82 e4       	ldi	r24, 0x42	; 66
  fe:	84 bd       	out	0x24, r24	; 36
 100:	85 e0       	ldi	r24, 0x05	; 5
 102:	85 bd       	out	0x25, r24	; 37
 104:	8d e0       	ldi	r24, 0x0D	; 13
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 10c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 110:	08 95       	ret

00000112 <button_init>:
 112:	85 b1       	in	r24, 0x05	; 5
 114:	88 61       	ori	r24, 0x18	; 24
 116:	85 b9       	out	0x05, r24	; 5
 118:	eb e6       	ldi	r30, 0x6B	; 107
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	80 83       	st	Z, r24
 122:	e8 e6       	ldi	r30, 0x68	; 104
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	81 60       	ori	r24, 0x01	; 1
 12a:	80 83       	st	Z, r24
 12c:	e9 e6       	ldi	r30, 0x69	; 105
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	82 60       	ori	r24, 0x02	; 2
 134:	80 83       	st	Z, r24
 136:	08 95       	ret

00000138 <LCD_Action>:
 138:	9b b1       	in	r25, 0x0b	; 11
 13a:	9f 70       	andi	r25, 0x0F	; 15
 13c:	28 2f       	mov	r18, r24
 13e:	20 7f       	andi	r18, 0xF0	; 240
 140:	92 2b       	or	r25, r18
 142:	9b b9       	out	0x0b, r25	; 11
 144:	9b b1       	in	r25, 0x0b	; 11
 146:	9e 7f       	andi	r25, 0xFE	; 254
 148:	9b b9       	out	0x0b, r25	; 11
 14a:	9b b1       	in	r25, 0x0b	; 11
 14c:	92 60       	ori	r25, 0x02	; 2
 14e:	9b b9       	out	0x0b, r25	; 11
 150:	35 e0       	ldi	r19, 0x05	; 5
 152:	3a 95       	dec	r19
 154:	f1 f7       	brne	.-4      	; 0x152 <LCD_Action+0x1a>
 156:	00 00       	nop
 158:	9b b1       	in	r25, 0x0b	; 11
 15a:	9d 7f       	andi	r25, 0xFD	; 253
 15c:	9b b9       	out	0x0b, r25	; 11
 15e:	ef e1       	ldi	r30, 0x1F	; 31
 160:	f3 e0       	ldi	r31, 0x03	; 3
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCD_Action+0x2a>
 166:	00 c0       	rjmp	.+0      	; 0x168 <LCD_Action+0x30>
 168:	00 00       	nop
 16a:	2b b1       	in	r18, 0x0b	; 11
 16c:	f0 e1       	ldi	r31, 0x10	; 16
 16e:	8f 9f       	mul	r24, r31
 170:	c0 01       	movw	r24, r0
 172:	11 24       	eor	r1, r1
 174:	92 2f       	mov	r25, r18
 176:	9f 70       	andi	r25, 0x0F	; 15
 178:	89 2b       	or	r24, r25
 17a:	8b b9       	out	0x0b, r24	; 11
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	8b b9       	out	0x0b, r24	; 11
 182:	35 e0       	ldi	r19, 0x05	; 5
 184:	3a 95       	dec	r19
 186:	f1 f7       	brne	.-4      	; 0x184 <LCD_Action+0x4c>
 188:	00 00       	nop
 18a:	8b b1       	in	r24, 0x0b	; 11
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	8b b9       	out	0x0b, r24	; 11
 190:	8f e3       	ldi	r24, 0x3F	; 63
 192:	9f e1       	ldi	r25, 0x1F	; 31
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <LCD_Action+0x5c>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LCD_Action+0x62>
 19a:	00 00       	nop
 19c:	08 95       	ret

0000019e <LCD_init>:
 19e:	8f e5       	ldi	r24, 0x5F	; 95
 1a0:	9a ee       	ldi	r25, 0xEA	; 234
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_init+0x4>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <LCD_init+0xa>
 1a8:	00 00       	nop
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1b0:	88 e2       	ldi	r24, 0x28	; 40
 1b2:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1b6:	8c e0       	ldi	r24, 0x0C	; 12
 1b8:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Action>
 1c8:	8f e3       	ldi	r24, 0x3F	; 63
 1ca:	9f e1       	ldi	r25, 0x1F	; 31
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <LCD_init+0x2e>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_init+0x34>
 1d2:	00 00       	nop
 1d4:	08 95       	ret

000001d6 <transmitByte>:
 1d6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1da:	95 ff       	sbrs	r25, 5
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <transmitByte>
 1de:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1e2:	08 95       	ret

000001e4 <printString>:
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	8c 01       	movw	r16, r24
 1ec:	c0 e0       	ldi	r28, 0x00	; 0
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <printString+0x12>
 1f0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <transmitByte>
 1f4:	cf 5f       	subi	r28, 0xFF	; 255
 1f6:	f8 01       	movw	r30, r16
 1f8:	ec 0f       	add	r30, r28
 1fa:	f1 1d       	adc	r31, r1
 1fc:	80 81       	ld	r24, Z
 1fe:	81 11       	cpse	r24, r1
 200:	f7 cf       	rjmp	.-18     	; 0x1f0 <printString+0xc>
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	08 95       	ret

0000020a <read_ADC>:
 20a:	ec e7       	ldi	r30, 0x7C	; 124
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	90 81       	ld	r25, Z
 210:	90 7f       	andi	r25, 0xF0	; 240
 212:	8f 70       	andi	r24, 0x0F	; 15
 214:	89 2b       	or	r24, r25
 216:	80 83       	st	Z, r24
 218:	ea e7       	ldi	r30, 0x7A	; 122
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	80 64       	ori	r24, 0x40	; 64
 220:	80 83       	st	Z, r24
 222:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 226:	86 fd       	sbrc	r24, 6
 228:	fc cf       	rjmp	.-8      	; 0x222 <read_ADC+0x18>
 22a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 22e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 232:	08 95       	ret

00000234 <print_value>:
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	8c 01       	movw	r16, r24
 23e:	9c 01       	movw	r18, r24
 240:	36 95       	lsr	r19
 242:	27 95       	ror	r18
 244:	36 95       	lsr	r19
 246:	27 95       	ror	r18
 248:	ab e7       	ldi	r26, 0x7B	; 123
 24a:	b4 e1       	ldi	r27, 0x14	; 20
 24c:	0e 94 40 04 	call	0x880	; 0x880 <__umulhisi3>
 250:	ac 01       	movw	r20, r24
 252:	56 95       	lsr	r21
 254:	47 95       	ror	r20
 256:	9a 01       	movw	r18, r20
 258:	ad ec       	ldi	r26, 0xCD	; 205
 25a:	bc ec       	ldi	r27, 0xCC	; 204
 25c:	0e 94 40 04 	call	0x880	; 0x880 <__umulhisi3>
 260:	96 95       	lsr	r25
 262:	87 95       	ror	r24
 264:	96 95       	lsr	r25
 266:	87 95       	ror	r24
 268:	96 95       	lsr	r25
 26a:	87 95       	ror	r24
 26c:	9c 01       	movw	r18, r24
 26e:	22 0f       	add	r18, r18
 270:	33 1f       	adc	r19, r19
 272:	88 0f       	add	r24, r24
 274:	99 1f       	adc	r25, r25
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	82 0f       	add	r24, r18
 280:	93 1f       	adc	r25, r19
 282:	9a 01       	movw	r18, r20
 284:	28 1b       	sub	r18, r24
 286:	39 0b       	sbc	r19, r25
 288:	c9 01       	movw	r24, r18
 28a:	80 5d       	subi	r24, 0xD0	; 208
 28c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <transmitByte>
 290:	98 01       	movw	r18, r16
 292:	ad ec       	ldi	r26, 0xCD	; 205
 294:	bc ec       	ldi	r27, 0xCC	; 204
 296:	0e 94 40 04 	call	0x880	; 0x880 <__umulhisi3>
 29a:	ec 01       	movw	r28, r24
 29c:	d6 95       	lsr	r29
 29e:	c7 95       	ror	r28
 2a0:	d6 95       	lsr	r29
 2a2:	c7 95       	ror	r28
 2a4:	d6 95       	lsr	r29
 2a6:	c7 95       	ror	r28
 2a8:	9e 01       	movw	r18, r28
 2aa:	0e 94 40 04 	call	0x880	; 0x880 <__umulhisi3>
 2ae:	96 95       	lsr	r25
 2b0:	87 95       	ror	r24
 2b2:	96 95       	lsr	r25
 2b4:	87 95       	ror	r24
 2b6:	96 95       	lsr	r25
 2b8:	87 95       	ror	r24
 2ba:	9c 01       	movw	r18, r24
 2bc:	22 0f       	add	r18, r18
 2be:	33 1f       	adc	r19, r19
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	82 0f       	add	r24, r18
 2ce:	93 1f       	adc	r25, r19
 2d0:	9e 01       	movw	r18, r28
 2d2:	28 1b       	sub	r18, r24
 2d4:	39 0b       	sbc	r19, r25
 2d6:	c9 01       	movw	r24, r18
 2d8:	80 5d       	subi	r24, 0xD0	; 208
 2da:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <transmitByte>
 2de:	ce 01       	movw	r24, r28
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	cc 0f       	add	r28, r28
 2e6:	dd 1f       	adc	r29, r29
 2e8:	cc 0f       	add	r28, r28
 2ea:	dd 1f       	adc	r29, r29
 2ec:	cc 0f       	add	r28, r28
 2ee:	dd 1f       	adc	r29, r29
 2f0:	c8 0f       	add	r28, r24
 2f2:	d9 1f       	adc	r29, r25
 2f4:	c8 01       	movw	r24, r16
 2f6:	8c 1b       	sub	r24, r28
 2f8:	9d 0b       	sbc	r25, r29
 2fa:	80 5d       	subi	r24, 0xD0	; 208
 2fc:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <transmitByte>
 300:	8d e1       	ldi	r24, 0x1D	; 29
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
 308:	8f e3       	ldi	r24, 0x3F	; 63
 30a:	9c e9       	ldi	r25, 0x9C	; 156
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <print_value+0xd8>
 310:	00 c0       	rjmp	.+0      	; 0x312 <print_value+0xde>
 312:	00 00       	nop
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	08 95       	ret

0000031e <ADC_to_seconds>:
 31e:	bc 01       	movw	r22, r24
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 45 03 	call	0x68a	; 0x68a <__floatunsisf>
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 ec       	ldi	r19, 0xC0	; 192
 32c:	4f e7       	ldi	r20, 0x7F	; 127
 32e:	54 e4       	ldi	r21, 0x44	; 68
 330:	0e 94 a4 02 	call	0x548	; 0x548 <__divsf3>
 334:	20 e0       	ldi	r18, 0x00	; 0
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	44 e3       	ldi	r20, 0x34	; 52
 33a:	53 e4       	ldi	r21, 0x43	; 67
 33c:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__mulsf3>
 340:	0e 94 16 03 	call	0x62c	; 0x62c <__fixunssfsi>
 344:	86 2f       	mov	r24, r22
 346:	08 95       	ret

00000348 <debounce>:

uint8_t debounce(uint8_t button_pin) {
	if (bit_is_clear(PINB, button_pin)) {      /* button is pressed now */
 348:	23 b1       	in	r18, 0x03	; 3
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	08 2e       	mov	r0, r24
 34e:	02 c0       	rjmp	.+4      	; 0x354 <debounce+0xc>
 350:	35 95       	asr	r19
 352:	27 95       	ror	r18
 354:	0a 94       	dec	r0
 356:	e2 f7       	brpl	.-8      	; 0x350 <debounce+0x8>
 358:	20 fd       	sbrc	r18, 0
 35a:	12 c0       	rjmp	.+36     	; 0x380 <debounce+0x38>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35c:	ef e9       	ldi	r30, 0x9F	; 159
 35e:	ff e0       	ldi	r31, 0x0F	; 15
 360:	31 97       	sbiw	r30, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <debounce+0x18>
 364:	00 c0       	rjmp	.+0      	; 0x366 <debounce+0x1e>
 366:	00 00       	nop
		_delay_us(DEBOUNCE_TIME);
		if (bit_is_clear(PINB, button_pin)) {            /* still pressed */
 368:	23 b1       	in	r18, 0x03	; 3
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	a9 01       	movw	r20, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <debounce+0x2c>
 370:	55 95       	asr	r21
 372:	47 95       	ror	r20
 374:	8a 95       	dec	r24
 376:	e2 f7       	brpl	.-8      	; 0x370 <debounce+0x28>
 378:	40 fd       	sbrc	r20, 0
 37a:	04 c0       	rjmp	.+8      	; 0x384 <debounce+0x3c>
			return 1;
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	08 95       	ret
		}
	}
	return 0;
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	08 95       	ret
 384:	80 e0       	ldi	r24, 0x00	; 0
}
 386:	08 95       	ret

00000388 <get_button_status>:

uint8_t get_button_status(uint8_t button)
{
	if (debounce(button)) {                        /* debounced button press */
 388:	0e 94 a4 01 	call	0x348	; 0x348 <debounce>
 38c:	88 23       	and	r24, r24
 38e:	41 f0       	breq	.+16     	; 0x3a0 <get_button_status+0x18>
		if (buttonWasPressed == 0) {     /* but wasn't last time through */
 390:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <buttonWasPressed>
 394:	81 11       	cpse	r24, r1
 396:	07 c0       	rjmp	.+14     	; 0x3a6 <get_button_status+0x1e>
			buttonWasPressed = 1;                      /* update the state */
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <buttonWasPressed>
			return 1;
 39e:	08 95       	ret
		}
	}
	else {                                /* button is not pressed now */
		buttonWasPressed = 0;                        /* update the state */
 3a0:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <buttonWasPressed>
		return 0;
 3a4:	08 95       	ret
	}
}  
 3a6:	08 95       	ret

000003a8 <main>:

int main(void)
{	
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	00 d0       	rcall	.+0      	; 0x3ae <main+0x6>
 3ae:	cd b7       	in	r28, 0x3d	; 61
 3b0:	de b7       	in	r29, 0x3e	; 62
	ADC_init();
 3b2:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
	USART_init();
 3b6:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_init>
	timer_init();
 3ba:	0e 94 68 00 	call	0xd0	; 0xd0 <timer_init>
	buzzer_init();
 3be:	0e 94 7c 00 	call	0xf8	; 0xf8 <buzzer_init>
	LCD_init();
 3c2:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_init>
	button_init();
 3c6:	0e 94 89 00 	call	0x112	; 0x112 <button_init>
	
	
	DDRD |= 0xFF; // LDC and LED outputs
 3ca:	8a b1       	in	r24, 0x0a	; 10
 3cc:	8f ef       	ldi	r24, 0xFF	; 255
 3ce:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1<<DDB0); // green LED output
 3d0:	84 b1       	in	r24, 0x04	; 4
 3d2:	81 60       	ori	r24, 0x01	; 1
 3d4:	84 b9       	out	0x04, r24	; 4
	
	R_Y_LED_PORT |= (1<<RED_LED); // Turn on red LED
 3d6:	8b b1       	in	r24, 0x0b	; 11
 3d8:	84 60       	ori	r24, 0x04	; 4
 3da:	8b b9       	out	0x0b, r24	; 11
 3dc:	26 c0       	rjmp	.+76     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
	
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
		{
			cli();
 3de:	f8 94       	cli
			volatile uint16_t pot_value = read_ADC(POT_PIN);
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	0e 94 05 01 	call	0x20a	; 0x20a <read_ADC>
 3e6:	9a 83       	std	Y+2, r25	; 0x02
 3e8:	89 83       	std	Y+1, r24	; 0x01
			seconds = ADC_to_seconds(pot_value);
 3ea:	89 81       	ldd	r24, Y+1	; 0x01
 3ec:	9a 81       	ldd	r25, Y+2	; 0x02
 3ee:	0e 94 8f 01 	call	0x31e	; 0x31e <ADC_to_seconds>
 3f2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
			printString("Set time at: ");
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	91 e0       	ldi	r25, 0x01	; 1
 3fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
			print_value(seconds);
 3fe:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 1a 01 	call	0x234	; 0x234 <print_value>
			
			start_pressed = get_button_status(START_PIN);
 408:	83 e0       	ldi	r24, 0x03	; 3
 40a:	0e 94 c4 01 	call	0x388	; 0x388 <get_button_status>
 40e:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <start_pressed>
			
			if (start_pressed)
 412:	88 23       	and	r24, r24
 414:	51 f0       	breq	.+20     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
			{
				timer_running = 1;
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <timer_running>
				G_LED_PORT |= (1<<GREEN_LED); // turn on green LED
 41c:	85 b1       	in	r24, 0x05	; 5
 41e:	81 60       	ori	r24, 0x01	; 1
 420:	85 b9       	out	0x05, r24	; 5
				R_Y_LED_PORT &= ~(1<<RED_LED); // turn off red LED
 422:	8b b1       	in	r24, 0x0b	; 11
 424:	8b 7f       	andi	r24, 0xFB	; 251
 426:	8b b9       	out	0x0b, r24	; 11
				sei();	// enable interrupts, also starts the countdown
 428:	78 94       	sei
	
	R_Y_LED_PORT |= (1<<RED_LED); // Turn on red LED
	
	while (1)
	{
		while (timer_running == 0 && start_pressed == 0)
 42a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <timer_running>
 42e:	81 11       	cpse	r24, r1
 430:	04 c0       	rjmp	.+8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 432:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <start_pressed>
 436:	88 23       	and	r24, r24
 438:	91 f2       	breq	.-92     	; 0x3de <main+0x36>
				R_Y_LED_PORT &= ~(1<<RED_LED); // turn off red LED
				sei();	// enable interrupts, also starts the countdown
			}
		}
		
		printString("TIMER RUNNING! \r");
 43a:	8e e0       	ldi	r24, 0x0E	; 14
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 442:	2f ef       	ldi	r18, 0xFF	; 255
 444:	83 ed       	ldi	r24, 0xD3	; 211
 446:	90 e3       	ldi	r25, 0x30	; 48
 448:	21 50       	subi	r18, 0x01	; 1
 44a:	80 40       	sbci	r24, 0x00	; 0
 44c:	90 40       	sbci	r25, 0x00	; 0
 44e:	e1 f7       	brne	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 452:	00 00       	nop
 454:	ea cf       	rjmp	.-44     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>

00000456 <__vector_11>:
	}
	return 0;
}

ISR (TIMER1_COMPA_vect) // action to be done every 1 sec
{
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	2f 93       	push	r18
 462:	3f 93       	push	r19
 464:	4f 93       	push	r20
 466:	5f 93       	push	r21
 468:	6f 93       	push	r22
 46a:	7f 93       	push	r23
 46c:	8f 93       	push	r24
 46e:	9f 93       	push	r25
 470:	af 93       	push	r26
 472:	bf 93       	push	r27
 474:	ef 93       	push	r30
 476:	ff 93       	push	r31
	 seconds--; // Subtracts 1 from the timer value
 478:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
 47c:	81 50       	subi	r24, 0x01	; 1
 47e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
	if (seconds == 0) 
 482:	81 11       	cpse	r24, r1
 484:	0f c0       	rjmp	.+30     	; 0x4a4 <__vector_11+0x4e>
	{
		printString("All done!");
 486:	8f e1       	ldi	r24, 0x1F	; 31
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
		G_LED_PORT &= ~(1<<GREEN_LED); // turn off green LED
 48e:	85 b1       	in	r24, 0x05	; 5
 490:	8e 7f       	andi	r24, 0xFE	; 254
 492:	85 b9       	out	0x05, r24	; 5
		R_Y_LED_PORT |= (1<<RED_LED); // turn on red LED
 494:	8b b1       	in	r24, 0x0b	; 11
 496:	84 60       	ori	r24, 0x04	; 4
 498:	8b b9       	out	0x0b, r24	; 11
		timer_running = 0;
 49a:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <timer_running>
		start_pressed = 0;
 49e:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <start_pressed>
 4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <__vector_11+0x60>
	}
	else
	{
		printString("Time left: ");
 4a4:	89 e2       	ldi	r24, 0x29	; 41
 4a6:	91 e0       	ldi	r25, 0x01	; 1
 4a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
		print_value(seconds);
 4ac:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 1a 01 	call	0x234	; 0x234 <print_value>
	}
	
}
 4b6:	ff 91       	pop	r31
 4b8:	ef 91       	pop	r30
 4ba:	bf 91       	pop	r27
 4bc:	af 91       	pop	r26
 4be:	9f 91       	pop	r25
 4c0:	8f 91       	pop	r24
 4c2:	7f 91       	pop	r23
 4c4:	6f 91       	pop	r22
 4c6:	5f 91       	pop	r21
 4c8:	4f 91       	pop	r20
 4ca:	3f 91       	pop	r19
 4cc:	2f 91       	pop	r18
 4ce:	0f 90       	pop	r0
 4d0:	0f be       	out	0x3f, r0	; 63
 4d2:	0f 90       	pop	r0
 4d4:	1f 90       	pop	r1
 4d6:	18 95       	reti

000004d8 <__vector_3>:

ISR (PCINT0_vect)
{
 4d8:	1f 92       	push	r1
 4da:	0f 92       	push	r0
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	0f 92       	push	r0
 4e0:	11 24       	eor	r1, r1
 4e2:	2f 93       	push	r18
 4e4:	3f 93       	push	r19
 4e6:	4f 93       	push	r20
 4e8:	5f 93       	push	r21
 4ea:	6f 93       	push	r22
 4ec:	7f 93       	push	r23
 4ee:	8f 93       	push	r24
 4f0:	9f 93       	push	r25
 4f2:	af 93       	push	r26
 4f4:	bf 93       	push	r27
 4f6:	ef 93       	push	r30
 4f8:	ff 93       	push	r31
	printString("PAUSE!");
 4fa:	85 e3       	ldi	r24, 0x35	; 53
 4fc:	91 e0       	ldi	r25, 0x01	; 1
 4fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <printString>
	R_Y_LED_PORT |= (1<<YELLOW_LED);
 502:	8b b1       	in	r24, 0x0b	; 11
 504:	88 60       	ori	r24, 0x08	; 8
 506:	8b b9       	out	0x0b, r24	; 11
	G_LED_PORT &= ~(1<<GREEN_LED);
 508:	85 b1       	in	r24, 0x05	; 5
 50a:	8e 7f       	andi	r24, 0xFE	; 254
 50c:	85 b9       	out	0x05, r24	; 5
	while(get_button_status(START_PIN) == 0) // wait for btn push again
 50e:	03 c0       	rjmp	.+6      	; 0x516 <__vector_3+0x3e>
	G_LED_PORT |= (1<<GREEN_LED);
 510:	85 b1       	in	r24, 0x05	; 5
 512:	81 60       	ori	r24, 0x01	; 1
 514:	85 b9       	out	0x05, r24	; 5
ISR (PCINT0_vect)
{
	printString("PAUSE!");
	R_Y_LED_PORT |= (1<<YELLOW_LED);
	G_LED_PORT &= ~(1<<GREEN_LED);
	while(get_button_status(START_PIN) == 0) // wait for btn push again
 516:	83 e0       	ldi	r24, 0x03	; 3
 518:	0e 94 c4 01 	call	0x388	; 0x388 <get_button_status>
 51c:	88 23       	and	r24, r24
 51e:	c1 f3       	breq	.-16     	; 0x510 <__vector_3+0x38>
	G_LED_PORT |= (1<<GREEN_LED);
	R_Y_LED_PORT &= ~(1<<YELLOW_LED);
 520:	8b b1       	in	r24, 0x0b	; 11
 522:	87 7f       	andi	r24, 0xF7	; 247
 524:	8b b9       	out	0x0b, r24	; 11
 526:	ff 91       	pop	r31
 528:	ef 91       	pop	r30
 52a:	bf 91       	pop	r27
 52c:	af 91       	pop	r26
 52e:	9f 91       	pop	r25
 530:	8f 91       	pop	r24
 532:	7f 91       	pop	r23
 534:	6f 91       	pop	r22
 536:	5f 91       	pop	r21
 538:	4f 91       	pop	r20
 53a:	3f 91       	pop	r19
 53c:	2f 91       	pop	r18
 53e:	0f 90       	pop	r0
 540:	0f be       	out	0x3f, r0	; 63
 542:	0f 90       	pop	r0
 544:	1f 90       	pop	r1
 546:	18 95       	reti

00000548 <__divsf3>:
 548:	0e 94 b8 02 	call	0x570	; 0x570 <__divsf3x>
 54c:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_round>
 550:	0e 94 92 03 	call	0x724	; 0x724 <__fp_pscB>
 554:	58 f0       	brcs	.+22     	; 0x56c <__divsf3+0x24>
 556:	0e 94 8b 03 	call	0x716	; 0x716 <__fp_pscA>
 55a:	40 f0       	brcs	.+16     	; 0x56c <__divsf3+0x24>
 55c:	29 f4       	brne	.+10     	; 0x568 <__divsf3+0x20>
 55e:	5f 3f       	cpi	r21, 0xFF	; 255
 560:	29 f0       	breq	.+10     	; 0x56c <__divsf3+0x24>
 562:	0c 94 82 03 	jmp	0x704	; 0x704 <__fp_inf>
 566:	51 11       	cpse	r21, r1
 568:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_szero>
 56c:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_nan>

00000570 <__divsf3x>:
 570:	0e 94 aa 03 	call	0x754	; 0x754 <__fp_split3>
 574:	68 f3       	brcs	.-38     	; 0x550 <__divsf3+0x8>

00000576 <__divsf3_pse>:
 576:	99 23       	and	r25, r25
 578:	b1 f3       	breq	.-20     	; 0x566 <__divsf3+0x1e>
 57a:	55 23       	and	r21, r21
 57c:	91 f3       	breq	.-28     	; 0x562 <__divsf3+0x1a>
 57e:	95 1b       	sub	r25, r21
 580:	55 0b       	sbc	r21, r21
 582:	bb 27       	eor	r27, r27
 584:	aa 27       	eor	r26, r26
 586:	62 17       	cp	r22, r18
 588:	73 07       	cpc	r23, r19
 58a:	84 07       	cpc	r24, r20
 58c:	38 f0       	brcs	.+14     	; 0x59c <__divsf3_pse+0x26>
 58e:	9f 5f       	subi	r25, 0xFF	; 255
 590:	5f 4f       	sbci	r21, 0xFF	; 255
 592:	22 0f       	add	r18, r18
 594:	33 1f       	adc	r19, r19
 596:	44 1f       	adc	r20, r20
 598:	aa 1f       	adc	r26, r26
 59a:	a9 f3       	breq	.-22     	; 0x586 <__divsf3_pse+0x10>
 59c:	35 d0       	rcall	.+106    	; 0x608 <__divsf3_pse+0x92>
 59e:	0e 2e       	mov	r0, r30
 5a0:	3a f0       	brmi	.+14     	; 0x5b0 <__divsf3_pse+0x3a>
 5a2:	e0 e8       	ldi	r30, 0x80	; 128
 5a4:	32 d0       	rcall	.+100    	; 0x60a <__divsf3_pse+0x94>
 5a6:	91 50       	subi	r25, 0x01	; 1
 5a8:	50 40       	sbci	r21, 0x00	; 0
 5aa:	e6 95       	lsr	r30
 5ac:	00 1c       	adc	r0, r0
 5ae:	ca f7       	brpl	.-14     	; 0x5a2 <__divsf3_pse+0x2c>
 5b0:	2b d0       	rcall	.+86     	; 0x608 <__divsf3_pse+0x92>
 5b2:	fe 2f       	mov	r31, r30
 5b4:	29 d0       	rcall	.+82     	; 0x608 <__divsf3_pse+0x92>
 5b6:	66 0f       	add	r22, r22
 5b8:	77 1f       	adc	r23, r23
 5ba:	88 1f       	adc	r24, r24
 5bc:	bb 1f       	adc	r27, r27
 5be:	26 17       	cp	r18, r22
 5c0:	37 07       	cpc	r19, r23
 5c2:	48 07       	cpc	r20, r24
 5c4:	ab 07       	cpc	r26, r27
 5c6:	b0 e8       	ldi	r27, 0x80	; 128
 5c8:	09 f0       	breq	.+2      	; 0x5cc <__divsf3_pse+0x56>
 5ca:	bb 0b       	sbc	r27, r27
 5cc:	80 2d       	mov	r24, r0
 5ce:	bf 01       	movw	r22, r30
 5d0:	ff 27       	eor	r31, r31
 5d2:	93 58       	subi	r25, 0x83	; 131
 5d4:	5f 4f       	sbci	r21, 0xFF	; 255
 5d6:	3a f0       	brmi	.+14     	; 0x5e6 <__divsf3_pse+0x70>
 5d8:	9e 3f       	cpi	r25, 0xFE	; 254
 5da:	51 05       	cpc	r21, r1
 5dc:	78 f0       	brcs	.+30     	; 0x5fc <__divsf3_pse+0x86>
 5de:	0c 94 82 03 	jmp	0x704	; 0x704 <__fp_inf>
 5e2:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_szero>
 5e6:	5f 3f       	cpi	r21, 0xFF	; 255
 5e8:	e4 f3       	brlt	.-8      	; 0x5e2 <__divsf3_pse+0x6c>
 5ea:	98 3e       	cpi	r25, 0xE8	; 232
 5ec:	d4 f3       	brlt	.-12     	; 0x5e2 <__divsf3_pse+0x6c>
 5ee:	86 95       	lsr	r24
 5f0:	77 95       	ror	r23
 5f2:	67 95       	ror	r22
 5f4:	b7 95       	ror	r27
 5f6:	f7 95       	ror	r31
 5f8:	9f 5f       	subi	r25, 0xFF	; 255
 5fa:	c9 f7       	brne	.-14     	; 0x5ee <__divsf3_pse+0x78>
 5fc:	88 0f       	add	r24, r24
 5fe:	91 1d       	adc	r25, r1
 600:	96 95       	lsr	r25
 602:	87 95       	ror	r24
 604:	97 f9       	bld	r25, 7
 606:	08 95       	ret
 608:	e1 e0       	ldi	r30, 0x01	; 1
 60a:	66 0f       	add	r22, r22
 60c:	77 1f       	adc	r23, r23
 60e:	88 1f       	adc	r24, r24
 610:	bb 1f       	adc	r27, r27
 612:	62 17       	cp	r22, r18
 614:	73 07       	cpc	r23, r19
 616:	84 07       	cpc	r24, r20
 618:	ba 07       	cpc	r27, r26
 61a:	20 f0       	brcs	.+8      	; 0x624 <__divsf3_pse+0xae>
 61c:	62 1b       	sub	r22, r18
 61e:	73 0b       	sbc	r23, r19
 620:	84 0b       	sbc	r24, r20
 622:	ba 0b       	sbc	r27, r26
 624:	ee 1f       	adc	r30, r30
 626:	88 f7       	brcc	.-30     	; 0x60a <__divsf3_pse+0x94>
 628:	e0 95       	com	r30
 62a:	08 95       	ret

0000062c <__fixunssfsi>:
 62c:	0e 94 b2 03 	call	0x764	; 0x764 <__fp_splitA>
 630:	88 f0       	brcs	.+34     	; 0x654 <__fixunssfsi+0x28>
 632:	9f 57       	subi	r25, 0x7F	; 127
 634:	98 f0       	brcs	.+38     	; 0x65c <__fixunssfsi+0x30>
 636:	b9 2f       	mov	r27, r25
 638:	99 27       	eor	r25, r25
 63a:	b7 51       	subi	r27, 0x17	; 23
 63c:	b0 f0       	brcs	.+44     	; 0x66a <__fixunssfsi+0x3e>
 63e:	e1 f0       	breq	.+56     	; 0x678 <__fixunssfsi+0x4c>
 640:	66 0f       	add	r22, r22
 642:	77 1f       	adc	r23, r23
 644:	88 1f       	adc	r24, r24
 646:	99 1f       	adc	r25, r25
 648:	1a f0       	brmi	.+6      	; 0x650 <__fixunssfsi+0x24>
 64a:	ba 95       	dec	r27
 64c:	c9 f7       	brne	.-14     	; 0x640 <__fixunssfsi+0x14>
 64e:	14 c0       	rjmp	.+40     	; 0x678 <__fixunssfsi+0x4c>
 650:	b1 30       	cpi	r27, 0x01	; 1
 652:	91 f0       	breq	.+36     	; 0x678 <__fixunssfsi+0x4c>
 654:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_zero>
 658:	b1 e0       	ldi	r27, 0x01	; 1
 65a:	08 95       	ret
 65c:	0c 94 cc 03 	jmp	0x798	; 0x798 <__fp_zero>
 660:	67 2f       	mov	r22, r23
 662:	78 2f       	mov	r23, r24
 664:	88 27       	eor	r24, r24
 666:	b8 5f       	subi	r27, 0xF8	; 248
 668:	39 f0       	breq	.+14     	; 0x678 <__fixunssfsi+0x4c>
 66a:	b9 3f       	cpi	r27, 0xF9	; 249
 66c:	cc f3       	brlt	.-14     	; 0x660 <__fixunssfsi+0x34>
 66e:	86 95       	lsr	r24
 670:	77 95       	ror	r23
 672:	67 95       	ror	r22
 674:	b3 95       	inc	r27
 676:	d9 f7       	brne	.-10     	; 0x66e <__fixunssfsi+0x42>
 678:	3e f4       	brtc	.+14     	; 0x688 <__fixunssfsi+0x5c>
 67a:	90 95       	com	r25
 67c:	80 95       	com	r24
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	08 95       	ret

0000068a <__floatunsisf>:
 68a:	e8 94       	clt
 68c:	09 c0       	rjmp	.+18     	; 0x6a0 <__floatsisf+0x12>

0000068e <__floatsisf>:
 68e:	97 fb       	bst	r25, 7
 690:	3e f4       	brtc	.+14     	; 0x6a0 <__floatsisf+0x12>
 692:	90 95       	com	r25
 694:	80 95       	com	r24
 696:	70 95       	com	r23
 698:	61 95       	neg	r22
 69a:	7f 4f       	sbci	r23, 0xFF	; 255
 69c:	8f 4f       	sbci	r24, 0xFF	; 255
 69e:	9f 4f       	sbci	r25, 0xFF	; 255
 6a0:	99 23       	and	r25, r25
 6a2:	a9 f0       	breq	.+42     	; 0x6ce <__floatsisf+0x40>
 6a4:	f9 2f       	mov	r31, r25
 6a6:	96 e9       	ldi	r25, 0x96	; 150
 6a8:	bb 27       	eor	r27, r27
 6aa:	93 95       	inc	r25
 6ac:	f6 95       	lsr	r31
 6ae:	87 95       	ror	r24
 6b0:	77 95       	ror	r23
 6b2:	67 95       	ror	r22
 6b4:	b7 95       	ror	r27
 6b6:	f1 11       	cpse	r31, r1
 6b8:	f8 cf       	rjmp	.-16     	; 0x6aa <__floatsisf+0x1c>
 6ba:	fa f4       	brpl	.+62     	; 0x6fa <__floatsisf+0x6c>
 6bc:	bb 0f       	add	r27, r27
 6be:	11 f4       	brne	.+4      	; 0x6c4 <__floatsisf+0x36>
 6c0:	60 ff       	sbrs	r22, 0
 6c2:	1b c0       	rjmp	.+54     	; 0x6fa <__floatsisf+0x6c>
 6c4:	6f 5f       	subi	r22, 0xFF	; 255
 6c6:	7f 4f       	sbci	r23, 0xFF	; 255
 6c8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ca:	9f 4f       	sbci	r25, 0xFF	; 255
 6cc:	16 c0       	rjmp	.+44     	; 0x6fa <__floatsisf+0x6c>
 6ce:	88 23       	and	r24, r24
 6d0:	11 f0       	breq	.+4      	; 0x6d6 <__floatsisf+0x48>
 6d2:	96 e9       	ldi	r25, 0x96	; 150
 6d4:	11 c0       	rjmp	.+34     	; 0x6f8 <__floatsisf+0x6a>
 6d6:	77 23       	and	r23, r23
 6d8:	21 f0       	breq	.+8      	; 0x6e2 <__floatsisf+0x54>
 6da:	9e e8       	ldi	r25, 0x8E	; 142
 6dc:	87 2f       	mov	r24, r23
 6de:	76 2f       	mov	r23, r22
 6e0:	05 c0       	rjmp	.+10     	; 0x6ec <__floatsisf+0x5e>
 6e2:	66 23       	and	r22, r22
 6e4:	71 f0       	breq	.+28     	; 0x702 <__floatsisf+0x74>
 6e6:	96 e8       	ldi	r25, 0x86	; 134
 6e8:	86 2f       	mov	r24, r22
 6ea:	70 e0       	ldi	r23, 0x00	; 0
 6ec:	60 e0       	ldi	r22, 0x00	; 0
 6ee:	2a f0       	brmi	.+10     	; 0x6fa <__floatsisf+0x6c>
 6f0:	9a 95       	dec	r25
 6f2:	66 0f       	add	r22, r22
 6f4:	77 1f       	adc	r23, r23
 6f6:	88 1f       	adc	r24, r24
 6f8:	da f7       	brpl	.-10     	; 0x6f0 <__floatsisf+0x62>
 6fa:	88 0f       	add	r24, r24
 6fc:	96 95       	lsr	r25
 6fe:	87 95       	ror	r24
 700:	97 f9       	bld	r25, 7
 702:	08 95       	ret

00000704 <__fp_inf>:
 704:	97 f9       	bld	r25, 7
 706:	9f 67       	ori	r25, 0x7F	; 127
 708:	80 e8       	ldi	r24, 0x80	; 128
 70a:	70 e0       	ldi	r23, 0x00	; 0
 70c:	60 e0       	ldi	r22, 0x00	; 0
 70e:	08 95       	ret

00000710 <__fp_nan>:
 710:	9f ef       	ldi	r25, 0xFF	; 255
 712:	80 ec       	ldi	r24, 0xC0	; 192
 714:	08 95       	ret

00000716 <__fp_pscA>:
 716:	00 24       	eor	r0, r0
 718:	0a 94       	dec	r0
 71a:	16 16       	cp	r1, r22
 71c:	17 06       	cpc	r1, r23
 71e:	18 06       	cpc	r1, r24
 720:	09 06       	cpc	r0, r25
 722:	08 95       	ret

00000724 <__fp_pscB>:
 724:	00 24       	eor	r0, r0
 726:	0a 94       	dec	r0
 728:	12 16       	cp	r1, r18
 72a:	13 06       	cpc	r1, r19
 72c:	14 06       	cpc	r1, r20
 72e:	05 06       	cpc	r0, r21
 730:	08 95       	ret

00000732 <__fp_round>:
 732:	09 2e       	mov	r0, r25
 734:	03 94       	inc	r0
 736:	00 0c       	add	r0, r0
 738:	11 f4       	brne	.+4      	; 0x73e <__fp_round+0xc>
 73a:	88 23       	and	r24, r24
 73c:	52 f0       	brmi	.+20     	; 0x752 <__fp_round+0x20>
 73e:	bb 0f       	add	r27, r27
 740:	40 f4       	brcc	.+16     	; 0x752 <__fp_round+0x20>
 742:	bf 2b       	or	r27, r31
 744:	11 f4       	brne	.+4      	; 0x74a <__fp_round+0x18>
 746:	60 ff       	sbrs	r22, 0
 748:	04 c0       	rjmp	.+8      	; 0x752 <__fp_round+0x20>
 74a:	6f 5f       	subi	r22, 0xFF	; 255
 74c:	7f 4f       	sbci	r23, 0xFF	; 255
 74e:	8f 4f       	sbci	r24, 0xFF	; 255
 750:	9f 4f       	sbci	r25, 0xFF	; 255
 752:	08 95       	ret

00000754 <__fp_split3>:
 754:	57 fd       	sbrc	r21, 7
 756:	90 58       	subi	r25, 0x80	; 128
 758:	44 0f       	add	r20, r20
 75a:	55 1f       	adc	r21, r21
 75c:	59 f0       	breq	.+22     	; 0x774 <__fp_splitA+0x10>
 75e:	5f 3f       	cpi	r21, 0xFF	; 255
 760:	71 f0       	breq	.+28     	; 0x77e <__fp_splitA+0x1a>
 762:	47 95       	ror	r20

00000764 <__fp_splitA>:
 764:	88 0f       	add	r24, r24
 766:	97 fb       	bst	r25, 7
 768:	99 1f       	adc	r25, r25
 76a:	61 f0       	breq	.+24     	; 0x784 <__fp_splitA+0x20>
 76c:	9f 3f       	cpi	r25, 0xFF	; 255
 76e:	79 f0       	breq	.+30     	; 0x78e <__fp_splitA+0x2a>
 770:	87 95       	ror	r24
 772:	08 95       	ret
 774:	12 16       	cp	r1, r18
 776:	13 06       	cpc	r1, r19
 778:	14 06       	cpc	r1, r20
 77a:	55 1f       	adc	r21, r21
 77c:	f2 cf       	rjmp	.-28     	; 0x762 <__fp_split3+0xe>
 77e:	46 95       	lsr	r20
 780:	f1 df       	rcall	.-30     	; 0x764 <__fp_splitA>
 782:	08 c0       	rjmp	.+16     	; 0x794 <__fp_splitA+0x30>
 784:	16 16       	cp	r1, r22
 786:	17 06       	cpc	r1, r23
 788:	18 06       	cpc	r1, r24
 78a:	99 1f       	adc	r25, r25
 78c:	f1 cf       	rjmp	.-30     	; 0x770 <__fp_splitA+0xc>
 78e:	86 95       	lsr	r24
 790:	71 05       	cpc	r23, r1
 792:	61 05       	cpc	r22, r1
 794:	08 94       	sec
 796:	08 95       	ret

00000798 <__fp_zero>:
 798:	e8 94       	clt

0000079a <__fp_szero>:
 79a:	bb 27       	eor	r27, r27
 79c:	66 27       	eor	r22, r22
 79e:	77 27       	eor	r23, r23
 7a0:	cb 01       	movw	r24, r22
 7a2:	97 f9       	bld	r25, 7
 7a4:	08 95       	ret

000007a6 <__mulsf3>:
 7a6:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__mulsf3x>
 7aa:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_round>
 7ae:	0e 94 8b 03 	call	0x716	; 0x716 <__fp_pscA>
 7b2:	38 f0       	brcs	.+14     	; 0x7c2 <__mulsf3+0x1c>
 7b4:	0e 94 92 03 	call	0x724	; 0x724 <__fp_pscB>
 7b8:	20 f0       	brcs	.+8      	; 0x7c2 <__mulsf3+0x1c>
 7ba:	95 23       	and	r25, r21
 7bc:	11 f0       	breq	.+4      	; 0x7c2 <__mulsf3+0x1c>
 7be:	0c 94 82 03 	jmp	0x704	; 0x704 <__fp_inf>
 7c2:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_nan>
 7c6:	11 24       	eor	r1, r1
 7c8:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_szero>

000007cc <__mulsf3x>:
 7cc:	0e 94 aa 03 	call	0x754	; 0x754 <__fp_split3>
 7d0:	70 f3       	brcs	.-36     	; 0x7ae <__mulsf3+0x8>

000007d2 <__mulsf3_pse>:
 7d2:	95 9f       	mul	r25, r21
 7d4:	c1 f3       	breq	.-16     	; 0x7c6 <__mulsf3+0x20>
 7d6:	95 0f       	add	r25, r21
 7d8:	50 e0       	ldi	r21, 0x00	; 0
 7da:	55 1f       	adc	r21, r21
 7dc:	62 9f       	mul	r22, r18
 7de:	f0 01       	movw	r30, r0
 7e0:	72 9f       	mul	r23, r18
 7e2:	bb 27       	eor	r27, r27
 7e4:	f0 0d       	add	r31, r0
 7e6:	b1 1d       	adc	r27, r1
 7e8:	63 9f       	mul	r22, r19
 7ea:	aa 27       	eor	r26, r26
 7ec:	f0 0d       	add	r31, r0
 7ee:	b1 1d       	adc	r27, r1
 7f0:	aa 1f       	adc	r26, r26
 7f2:	64 9f       	mul	r22, r20
 7f4:	66 27       	eor	r22, r22
 7f6:	b0 0d       	add	r27, r0
 7f8:	a1 1d       	adc	r26, r1
 7fa:	66 1f       	adc	r22, r22
 7fc:	82 9f       	mul	r24, r18
 7fe:	22 27       	eor	r18, r18
 800:	b0 0d       	add	r27, r0
 802:	a1 1d       	adc	r26, r1
 804:	62 1f       	adc	r22, r18
 806:	73 9f       	mul	r23, r19
 808:	b0 0d       	add	r27, r0
 80a:	a1 1d       	adc	r26, r1
 80c:	62 1f       	adc	r22, r18
 80e:	83 9f       	mul	r24, r19
 810:	a0 0d       	add	r26, r0
 812:	61 1d       	adc	r22, r1
 814:	22 1f       	adc	r18, r18
 816:	74 9f       	mul	r23, r20
 818:	33 27       	eor	r19, r19
 81a:	a0 0d       	add	r26, r0
 81c:	61 1d       	adc	r22, r1
 81e:	23 1f       	adc	r18, r19
 820:	84 9f       	mul	r24, r20
 822:	60 0d       	add	r22, r0
 824:	21 1d       	adc	r18, r1
 826:	82 2f       	mov	r24, r18
 828:	76 2f       	mov	r23, r22
 82a:	6a 2f       	mov	r22, r26
 82c:	11 24       	eor	r1, r1
 82e:	9f 57       	subi	r25, 0x7F	; 127
 830:	50 40       	sbci	r21, 0x00	; 0
 832:	9a f0       	brmi	.+38     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 834:	f1 f0       	breq	.+60     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 836:	88 23       	and	r24, r24
 838:	4a f0       	brmi	.+18     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 83a:	ee 0f       	add	r30, r30
 83c:	ff 1f       	adc	r31, r31
 83e:	bb 1f       	adc	r27, r27
 840:	66 1f       	adc	r22, r22
 842:	77 1f       	adc	r23, r23
 844:	88 1f       	adc	r24, r24
 846:	91 50       	subi	r25, 0x01	; 1
 848:	50 40       	sbci	r21, 0x00	; 0
 84a:	a9 f7       	brne	.-22     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 84c:	9e 3f       	cpi	r25, 0xFE	; 254
 84e:	51 05       	cpc	r21, r1
 850:	80 f0       	brcs	.+32     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 852:	0c 94 82 03 	jmp	0x704	; 0x704 <__fp_inf>
 856:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_szero>
 85a:	5f 3f       	cpi	r21, 0xFF	; 255
 85c:	e4 f3       	brlt	.-8      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 85e:	98 3e       	cpi	r25, 0xE8	; 232
 860:	d4 f3       	brlt	.-12     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 862:	86 95       	lsr	r24
 864:	77 95       	ror	r23
 866:	67 95       	ror	r22
 868:	b7 95       	ror	r27
 86a:	f7 95       	ror	r31
 86c:	e7 95       	ror	r30
 86e:	9f 5f       	subi	r25, 0xFF	; 255
 870:	c1 f7       	brne	.-16     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 872:	fe 2b       	or	r31, r30
 874:	88 0f       	add	r24, r24
 876:	91 1d       	adc	r25, r1
 878:	96 95       	lsr	r25
 87a:	87 95       	ror	r24
 87c:	97 f9       	bld	r25, 7
 87e:	08 95       	ret

00000880 <__umulhisi3>:
 880:	a2 9f       	mul	r26, r18
 882:	b0 01       	movw	r22, r0
 884:	b3 9f       	mul	r27, r19
 886:	c0 01       	movw	r24, r0
 888:	a3 9f       	mul	r26, r19
 88a:	70 0d       	add	r23, r0
 88c:	81 1d       	adc	r24, r1
 88e:	11 24       	eor	r1, r1
 890:	91 1d       	adc	r25, r1
 892:	b2 9f       	mul	r27, r18
 894:	70 0d       	add	r23, r0
 896:	81 1d       	adc	r24, r1
 898:	11 24       	eor	r1, r1
 89a:	91 1d       	adc	r25, r1
 89c:	08 95       	ret

0000089e <_exit>:
 89e:	f8 94       	cli

000008a0 <__stop_program>:
 8a0:	ff cf       	rjmp	.-2      	; 0x8a0 <__stop_program>
